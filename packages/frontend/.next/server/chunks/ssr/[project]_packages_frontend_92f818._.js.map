{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/data/mock-data.ts"],"sourcesContent":["import {\r\n  NetworkDevice,\r\n  DeviceFolder,\r\n  NetworkMetrics,\r\n  BandwidthData,\r\n  AlertMessage,\r\n  SystemHealth,\r\n  MonitoringConfig,\r\n} from '@/types/schemas';\r\n\r\n// Mock Folders\r\nexport const mockFolders: DeviceFolder[] = [\r\n  {\r\n    id: 'datacenter',\r\n    name: 'Центр обработки данных',\r\n    description: 'Серверы и сетевое оборудование ЦОД',\r\n    parentId: 'root',\r\n    color: '#3B82F6',\r\n    icon: 'Building',\r\n    expanded: true,\r\n    children: [\r\n      {\r\n        id: 'servers',\r\n        name: 'Серверы',\r\n        description: 'Физические и виртуальные серверы',\r\n        parentId: 'datacenter',\r\n        color: '#10B981',\r\n        icon: 'Server',\r\n        expanded: false,\r\n        children: [],\r\n      },\r\n      {\r\n        id: 'storage',\r\n        name: 'Системы хранения',\r\n        description: 'NAS и SAN системы',\r\n        parentId: 'datacenter',\r\n        color: '#8B5CF6',\r\n        icon: 'Database',\r\n        expanded: false,\r\n        children: [],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 'core',\r\n    name: 'Ядро сети',\r\n    description: 'Основное сетевое оборудование',\r\n    parentId: 'root',\r\n    color: '#EF4444',\r\n    icon: 'Network',\r\n    expanded: false,\r\n    children: [],\r\n  },\r\n  {\r\n    id: 'access',\r\n    name: 'Уровень доступа',\r\n    description: 'Коммутаторы доступа и точки WiFi',\r\n    parentId: 'root',\r\n    color: '#F59E0B',\r\n    icon: 'Globe',\r\n    expanded: false,\r\n    children: [],\r\n  },\r\n  {\r\n    id: 'security',\r\n    name: 'Безопасность',\r\n    description: 'Системы безопасности и мониторинга',\r\n    parentId: 'root',\r\n    color: '#DC2626',\r\n    icon: 'Shield',\r\n    expanded: false,\r\n    children: [],\r\n  },\r\n];\r\n\r\n// Mock Devices\r\nexport const mockDevices: NetworkDevice[] = [\r\n  // Datacenter servers\r\n  {\r\n    id: 'server-web-1',\r\n    name: 'Веб сервер 1',\r\n    ip: '192.168.1.10',\r\n    mac: '00:1B:44:11:3A:B7',\r\n    type: 'server',\r\n    status: 'online',\r\n    lastSeen: new Date('2024-01-15T10:30:00Z'),\r\n    responseTime: 8,\r\n    uptime: 99.2,\r\n    location: 'Стойка A-1',\r\n    folderId: 'servers',\r\n    vendor: 'Dell',\r\n    model: 'PowerEdge R740',\r\n    monitoring: {\r\n      ping: true,\r\n      snmp: true,\r\n      http: true,\r\n      ssh: true,\r\n    },\r\n    position: { x: 100, y: 200 },\r\n  },\r\n  {\r\n    id: 'server-db-1',\r\n    name: 'База данных',\r\n    ip: '192.168.1.11',\r\n    mac: '00:1B:44:11:3A:B8',\r\n    type: 'server',\r\n    status: 'online',\r\n    lastSeen: new Date('2024-01-15T10:30:00Z'),\r\n    responseTime: 5,\r\n    uptime: 99.8,\r\n    location: 'Стойка A-2',\r\n    folderId: 'servers',\r\n    vendor: 'HP',\r\n    model: 'ProLiant DL380',\r\n    monitoring: {\r\n      ping: true,\r\n      snmp: true,\r\n      http: false,\r\n      ssh: true,\r\n    },\r\n    position: { x: 150, y: 200 },\r\n  },\r\n  // Network core equipment\r\n  {\r\n    id: 'switch-core-1',\r\n    name: 'Основной коммутатор',\r\n    ip: '192.168.1.1',\r\n    mac: '00:1B:44:11:01:01',\r\n    type: 'switch',\r\n    status: 'online',\r\n    lastSeen: new Date('2024-01-15T10:30:00Z'),\r\n    responseTime: 2,\r\n    uptime: 99.9,\r\n    location: 'Стойка Core-1',\r\n    folderId: 'core',\r\n    vendor: 'Cisco',\r\n    model: 'Catalyst 9300',\r\n    monitoring: {\r\n      ping: true,\r\n      snmp: true,\r\n      http: true,\r\n      ssh: true,\r\n    },\r\n    position: { x: 300, y: 150 },\r\n  },\r\n  {\r\n    id: 'router-main',\r\n    name: 'Основной маршрутизатор',\r\n    ip: '192.168.1.254',\r\n    mac: '00:1B:44:11:02:01',\r\n    type: 'router',\r\n    status: 'online',\r\n    lastSeen: new Date('2024-01-15T10:30:00Z'),\r\n    responseTime: 3,\r\n    uptime: 99.7,\r\n    location: 'Стойка Core-1',\r\n    folderId: 'core',\r\n    vendor: 'Cisco',\r\n    model: 'ISR 4351',\r\n    monitoring: {\r\n      ping: true,\r\n      snmp: true,\r\n      http: true,\r\n      ssh: true,\r\n    },\r\n    position: { x: 350, y: 100 },\r\n  },\r\n  // Access layer devices\r\n  {\r\n    id: 'switch-office-1',\r\n    name: 'Офисный коммутатор 1',\r\n    ip: '192.168.1.51',\r\n    mac: '00:1B:44:11:05:01',\r\n    type: 'switch',\r\n    status: 'online',\r\n    lastSeen: new Date('2024-01-15T10:30:00Z'),\r\n    responseTime: 6,\r\n    uptime: 98.5,\r\n    location: '1 этаж офис',\r\n    folderId: 'access',\r\n    vendor: 'Cisco',\r\n    model: 'Catalyst 2960X',\r\n    monitoring: {\r\n      ping: true,\r\n      snmp: true,\r\n      http: false,\r\n      ssh: true,\r\n    },\r\n    position: { x: 200, y: 300 },\r\n  },\r\n  {\r\n    id: 'switch-office-2',\r\n    name: 'Офисный коммутатор 2',\r\n    ip: '192.168.1.52',\r\n    mac: '00:1B:44:11:05:02',\r\n    type: 'switch',\r\n    status: 'offline',\r\n    lastSeen: new Date('2024-01-15T08:15:00Z'),\r\n    responseTime: 0,\r\n    uptime: 97.2,\r\n    location: '2 этаж офис',\r\n    folderId: 'access',\r\n    vendor: 'Cisco',\r\n    model: 'Catalyst 2960X',\r\n    monitoring: {\r\n      ping: true,\r\n      snmp: true,\r\n      http: false,\r\n      ssh: true,\r\n    },\r\n    position: { x: 250, y: 400 },\r\n  },\r\n  // WiFi Access Points\r\n  {\r\n    id: 'ap-floor1-01',\r\n    name: 'WiFi точка доступа 1 этаж восток',\r\n    ip: '192.168.1.161',\r\n    mac: '00:1B:44:16:01:01',\r\n    type: 'access_point',\r\n    status: 'online',\r\n    lastSeen: new Date('2024-01-15T10:30:00Z'),\r\n    responseTime: 5,\r\n    uptime: 99.1,\r\n    location: '1 этаж - Восточное крыло',\r\n    folderId: 'access',\r\n    vendor: 'Ubiquiti',\r\n    model: 'UniFi AP AC Pro',\r\n    monitoring: {\r\n      ping: true,\r\n      snmp: true,\r\n      http: true,\r\n      ssh: true,\r\n    },\r\n    position: { x: 400, y: 350 },\r\n  },\r\n  // Security devices\r\n  {\r\n    id: 'firewall-main',\r\n    name: 'Межсетевой экран',\r\n    ip: '192.168.1.2',\r\n    mac: '00:1B:44:11:02:02',\r\n    type: 'firewall',\r\n    status: 'online',\r\n    lastSeen: new Date('2024-01-15T10:30:00Z'),\r\n    responseTime: 4,\r\n    uptime: 99.6,\r\n    location: 'Стойка Security-1',\r\n    folderId: 'security',\r\n    vendor: 'Fortinet',\r\n    model: 'FortiGate 100F',\r\n    monitoring: {\r\n      ping: true,\r\n      snmp: true,\r\n      http: true,\r\n      ssh: true,\r\n    },\r\n    position: { x: 500, y: 100 },\r\n  },\r\n  // Storage systems (using 'server' type as storage is not in enum)\r\n  {\r\n    id: 'nas-backup',\r\n    name: 'Система резервного копирования',\r\n    ip: '192.168.1.20',\r\n    mac: '00:1B:44:11:20:01',\r\n    type: 'server',\r\n    status: 'warning',\r\n    lastSeen: new Date('2024-01-15T10:30:00Z'),\r\n    responseTime: 15,\r\n    uptime: 96.8,\r\n    location: 'Стойка Storage-1',\r\n    folderId: 'storage',\r\n    vendor: 'Synology',\r\n    model: 'DS920+',\r\n    monitoring: {\r\n      ping: true,\r\n      snmp: true,\r\n      http: true,\r\n      ssh: false,\r\n    },\r\n    position: { x: 550, y: 200 },\r\n  },\r\n];\r\n\r\n// Mock Alerts\r\nexport const mockAlerts: AlertMessage[] = [\r\n  {\r\n    id: 'alert-1',\r\n    type: 'warning',\r\n    message: 'Высокая загрузка CPU на сервере web-1',\r\n    timestamp: new Date(Date.now() - 300000),\r\n    deviceId: 'server-web-1',\r\n    resolved: false,\r\n  },\r\n  {\r\n    id: 'alert-2',\r\n    type: 'info',\r\n    message: 'Обновление ПО завершено успешно',\r\n    timestamp: new Date(Date.now() - 600000),\r\n    resolved: true,\r\n  },\r\n  {\r\n    id: 'alert-3',\r\n    type: 'critical',\r\n    message: 'Потеря связи с устройством switch-office-2',\r\n    timestamp: new Date(Date.now() - 900000),\r\n    resolved: false,\r\n  },\r\n];\r\n\r\n// Initial Metrics\r\nexport const initialMetrics: NetworkMetrics = {\r\n  totalDevices: 10,\r\n  onlineDevices: 8,\r\n  offlineDevices: 1,\r\n  warningDevices: 1,\r\n  averageResponseTime: 6,\r\n  totalBandwidth: 1000,\r\n  usedBandwidth: 720,\r\n  packetLoss: 0.2,\r\n  networkUptime: 98.7,\r\n  lastUpdate: new Date(),\r\n};\r\n\r\n// Initial System Health\r\nexport const initialSystemHealth: SystemHealth = {\r\n  cpu: 65,\r\n  memory: 78,\r\n  disk: 45,\r\n  network: 23,\r\n  temperature: 42,\r\n  processes: 156,\r\n  uptime: 2847392,\r\n  lastUpdate: new Date(),\r\n};\r\n\r\n// Initial Bandwidth History\r\nexport const initialBandwidthHistory: BandwidthData[] = Array.from(\r\n  { length: 20 },\r\n  (_, i) => ({\r\n    timestamp: new Date(Date.now() - (19 - i) * 5 * 60 * 1000), // каждые 5 минут\r\n    upload: Math.floor(Math.random() * 300) + 50,\r\n    download: Math.floor(Math.random() * 800) + 100,\r\n    total: 0,\r\n  })\r\n).map((data) => ({\r\n  ...data,\r\n  total: data.upload + data.download,\r\n}));\r\n\r\n// Initial Monitoring Config\r\nexport const initialConfig: MonitoringConfig = {\r\n  pingInterval: 5000,\r\n  snmpInterval: 30000,\r\n  httpTimeout: 10000,\r\n  retryAttempts: 3,\r\n  alertThresholds: {\r\n    responseTime: 100,\r\n    packetLoss: 5,\r\n    cpuUsage: 80,\r\n    memoryUsage: 85,\r\n    diskUsage: 90,\r\n  },\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 385, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/lib/api.ts"],"sourcesContent":["import {\r\n  NetworkDevice,\r\n  DeviceFolder,\r\n  NetworkMetrics,\r\n  AlertMessage,\r\n  SystemHealth,\r\n  BandwidthData,\r\n} from '@/types/schemas';\r\n\r\n// API Response types\r\ninterface ApiResponse<T> {\r\n  success: boolean;\r\n  data: T;\r\n  message?: string;\r\n  error?: string;\r\n}\r\n\r\ninterface PaginatedResponse<T> {\r\n  success: boolean;\r\n  data: T[];\r\n  pagination: {\r\n    page: number;\r\n    limit: number;\r\n    total: number;\r\n    totalPages: number;\r\n  };\r\n}\r\n\r\n// API Error class\r\nexport class ApiError extends Error {\r\n  constructor(\r\n    message: string,\r\n    public status: number,\r\n    public code?: string\r\n  ) {\r\n    super(message);\r\n    this.name = 'ApiError';\r\n  }\r\n}\r\n\r\n// Base API configuration\r\nconst API_BASE_URL =\r\n  process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5000/api';\r\nconst API_TIMEOUT = 30000; // 30 seconds\r\n\r\n// HTTP client configuration\r\nclass HttpClient {\r\n  private baseURL: string;\r\n  private timeout: number;\r\n  private defaultHeaders: Record<string, string>;\r\n\r\n  constructor(baseURL: string, timeout: number = API_TIMEOUT) {\r\n    this.baseURL = baseURL;\r\n    this.timeout = timeout;\r\n    this.defaultHeaders = {\r\n      'Content-Type': 'application/json',\r\n    };\r\n  }\r\n\r\n  // Add authentication token\r\n  setAuthToken(token: string) {\r\n    this.defaultHeaders.Authorization = `Bearer ${token}`;\r\n  }\r\n\r\n  // Remove authentication token\r\n  clearAuthToken() {\r\n    delete this.defaultHeaders.Authorization;\r\n  }\r\n\r\n  // Generic request method\r\n  private async request<T>(\r\n    endpoint: string,\r\n    options: RequestInit = {}\r\n  ): Promise<T> {\r\n    const url = `${this.baseURL}${endpoint}`;\r\n\r\n    const config: RequestInit = {\r\n      ...options,\r\n      headers: {\r\n        ...this.defaultHeaders,\r\n        ...options.headers,\r\n      },\r\n      signal: AbortSignal.timeout(this.timeout),\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(url, config);\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json().catch(() => ({}));\r\n        throw new ApiError(\r\n          errorData.message ||\r\n            `HTTP ${response.status}: ${response.statusText}`,\r\n          response.status,\r\n          errorData.code\r\n        );\r\n      }\r\n\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      if (error instanceof ApiError) {\r\n        throw error;\r\n      }\r\n\r\n      if (error instanceof DOMException && error.name === 'TimeoutError') {\r\n        throw new ApiError('Request timeout', 408, 'TIMEOUT');\r\n      }\r\n\r\n      if (error instanceof TypeError && error.message.includes('fetch')) {\r\n        throw new ApiError(\r\n          'Network error - server unavailable',\r\n          0,\r\n          'NETWORK_ERROR'\r\n        );\r\n      }\r\n\r\n      throw new ApiError('Unknown error occurred', 500, 'UNKNOWN_ERROR');\r\n    }\r\n  }\r\n\r\n  // HTTP methods\r\n  async get<T>(endpoint: string, params?: Record<string, any>): Promise<T> {\r\n    const url = new URL(endpoint, this.baseURL);\r\n    if (params) {\r\n      Object.entries(params).forEach(([key, value]) => {\r\n        if (value !== undefined && value !== null) {\r\n          url.searchParams.append(key, String(value));\r\n        }\r\n      });\r\n    }\r\n\r\n    return this.request<T>(url.pathname + url.search);\r\n  }\r\n\r\n  async post<T>(endpoint: string, data?: any): Promise<T> {\r\n    return this.request<T>(endpoint, {\r\n      method: 'POST',\r\n      body: data ? JSON.stringify(data) : undefined,\r\n    });\r\n  }\r\n\r\n  async put<T>(endpoint: string, data?: any): Promise<T> {\r\n    return this.request<T>(endpoint, {\r\n      method: 'PUT',\r\n      body: data ? JSON.stringify(data) : undefined,\r\n    });\r\n  }\r\n\r\n  async patch<T>(endpoint: string, data?: any): Promise<T> {\r\n    return this.request<T>(endpoint, {\r\n      method: 'PATCH',\r\n      body: data ? JSON.stringify(data) : undefined,\r\n    });\r\n  }\r\n\r\n  async delete<T>(endpoint: string): Promise<T> {\r\n    return this.request<T>(endpoint, {\r\n      method: 'DELETE',\r\n    });\r\n  }\r\n}\r\n\r\n// Create HTTP client instance\r\nconst httpClient = new HttpClient(API_BASE_URL);\r\n\r\n// API Service classes\r\nexport class DevicesApi {\r\n  // Get all devices with optional filtering\r\n  static async getDevices(params?: {\r\n    folderId?: string;\r\n    status?: string;\r\n    type?: string;\r\n    search?: string;\r\n    page?: number;\r\n    limit?: number;\r\n  }): Promise<PaginatedResponse<NetworkDevice>> {\r\n    return httpClient.get<PaginatedResponse<NetworkDevice>>('/devices', params);\r\n  }\r\n\r\n  // Get single device by ID\r\n  static async getDevice(id: string): Promise<ApiResponse<NetworkDevice>> {\r\n    return httpClient.get<ApiResponse<NetworkDevice>>(`/devices/${id}`);\r\n  }\r\n\r\n  // Create new device\r\n  static async createDevice(\r\n    device: Omit<NetworkDevice, 'id' | 'lastSeen' | 'status'>\r\n  ): Promise<ApiResponse<NetworkDevice>> {\r\n    return httpClient.post<ApiResponse<NetworkDevice>>('/devices', device);\r\n  }\r\n\r\n  // Update device\r\n  static async updateDevice(\r\n    id: string,\r\n    updates: Partial<NetworkDevice>\r\n  ): Promise<ApiResponse<NetworkDevice>> {\r\n    return httpClient.patch<ApiResponse<NetworkDevice>>(\r\n      `/devices/${id}`,\r\n      updates\r\n    );\r\n  }\r\n\r\n  // Delete device\r\n  static async deleteDevice(id: string): Promise<ApiResponse<void>> {\r\n    return httpClient.delete<ApiResponse<void>>(`/devices/${id}`);\r\n  }\r\n\r\n  // Ping device\r\n  static async pingDevice(\r\n    id: string\r\n  ): Promise<ApiResponse<{ responseTime: number; status: string }>> {\r\n    return httpClient.post<\r\n      ApiResponse<{ responseTime: number; status: string }>\r\n    >(`/devices/${id}/ping`);\r\n  }\r\n\r\n  // Get device metrics\r\n  static async getDeviceMetrics(\r\n    id: string,\r\n    period?: string\r\n  ): Promise<ApiResponse<BandwidthData[]>> {\r\n    return httpClient.get<ApiResponse<BandwidthData[]>>(\r\n      `/devices/${id}/metrics`,\r\n      { period }\r\n    );\r\n  }\r\n}\r\n\r\nexport class FoldersApi {\r\n  // Get all folders\r\n  static async getFolders(): Promise<ApiResponse<DeviceFolder[]>> {\r\n    return httpClient.get<ApiResponse<DeviceFolder[]>>('/folders');\r\n  }\r\n\r\n  // Create new folder\r\n  static async createFolder(\r\n    folder: Omit<DeviceFolder, 'id' | 'children'>\r\n  ): Promise<ApiResponse<DeviceFolder>> {\r\n    return httpClient.post<ApiResponse<DeviceFolder>>('/folders', folder);\r\n  }\r\n\r\n  // Update folder\r\n  static async updateFolder(\r\n    id: string,\r\n    updates: Partial<DeviceFolder>\r\n  ): Promise<ApiResponse<DeviceFolder>> {\r\n    return httpClient.patch<ApiResponse<DeviceFolder>>(\r\n      `/folders/${id}`,\r\n      updates\r\n    );\r\n  }\r\n\r\n  // Delete folder\r\n  static async deleteFolder(id: string): Promise<ApiResponse<void>> {\r\n    return httpClient.delete<ApiResponse<void>>(`/folders/${id}`);\r\n  }\r\n}\r\n\r\nexport class MetricsApi {\r\n  // Get network metrics\r\n  static async getNetworkMetrics(): Promise<ApiResponse<NetworkMetrics>> {\r\n    return httpClient.get<ApiResponse<NetworkMetrics>>('/metrics/network');\r\n  }\r\n\r\n  // Get system health\r\n  static async getSystemHealth(): Promise<ApiResponse<SystemHealth>> {\r\n    return httpClient.get<ApiResponse<SystemHealth>>('/metrics/system');\r\n  }\r\n\r\n  // Get bandwidth history\r\n  static async getBandwidthHistory(params?: {\r\n    deviceId?: string;\r\n    period?: string;\r\n    limit?: number;\r\n  }): Promise<ApiResponse<BandwidthData[]>> {\r\n    return httpClient.get<ApiResponse<BandwidthData[]>>(\r\n      '/metrics/bandwidth',\r\n      params\r\n    );\r\n  }\r\n}\r\n\r\nexport class AlertsApi {\r\n  // Get all alerts\r\n  static async getAlerts(params?: {\r\n    resolved?: boolean;\r\n    type?: string;\r\n    deviceId?: string;\r\n    page?: number;\r\n    limit?: number;\r\n  }): Promise<PaginatedResponse<AlertMessage>> {\r\n    return httpClient.get<PaginatedResponse<AlertMessage>>('/alerts', params);\r\n  }\r\n\r\n  // Create new alert\r\n  static async createAlert(\r\n    alert: Omit<AlertMessage, 'id' | 'timestamp'>\r\n  ): Promise<ApiResponse<AlertMessage>> {\r\n    return httpClient.post<ApiResponse<AlertMessage>>('/alerts', alert);\r\n  }\r\n\r\n  // Mark alert as resolved\r\n  static async resolveAlert(id: string): Promise<ApiResponse<AlertMessage>> {\r\n    return httpClient.patch<ApiResponse<AlertMessage>>(`/alerts/${id}/resolve`);\r\n  }\r\n\r\n  // Acknowledge alert\r\n  static async acknowledgeAlert(\r\n    id: string,\r\n    userId: string\r\n  ): Promise<ApiResponse<AlertMessage>> {\r\n    return httpClient.patch<ApiResponse<AlertMessage>>(\r\n      `/alerts/${id}/acknowledge`,\r\n      { userId }\r\n    );\r\n  }\r\n\r\n  // Delete alert\r\n  static async deleteAlert(id: string): Promise<ApiResponse<void>> {\r\n    return httpClient.delete<ApiResponse<void>>(`/alerts/${id}`);\r\n  }\r\n}\r\n\r\n// WebSocket connection for real-time updates\r\nexport class RealtimeApi {\r\n  private ws: WebSocket | null = null;\r\n  private reconnectAttempts = 0;\r\n  private maxReconnectAttempts = 5;\r\n  private reconnectDelay = 1000;\r\n\r\n  connect(onMessage: (data: any) => void, onError?: (error: Event) => void) {\r\n    const wsUrl = API_BASE_URL.replace(/^https?/, 'ws') + '/ws';\r\n\r\n    try {\r\n      this.ws = new WebSocket(wsUrl);\r\n\r\n      this.ws.onopen = () => {\r\n        console.log('WebSocket connected');\r\n        this.reconnectAttempts = 0;\r\n      };\r\n\r\n      this.ws.onmessage = (event) => {\r\n        try {\r\n          const data = JSON.parse(event.data);\r\n          onMessage(data);\r\n        } catch (error) {\r\n          console.error('Failed to parse WebSocket message:', error);\r\n        }\r\n      };\r\n\r\n      this.ws.onclose = () => {\r\n        console.log('WebSocket disconnected');\r\n        this.reconnect(onMessage, onError);\r\n      };\r\n\r\n      this.ws.onerror = (error) => {\r\n        console.error('WebSocket error:', error);\r\n        if (onError) {\r\n          onError(error);\r\n        }\r\n      };\r\n    } catch (error) {\r\n      console.error('Failed to connect WebSocket:', error);\r\n      if (onError) {\r\n        onError(error as Event);\r\n      }\r\n    }\r\n  }\r\n\r\n  private reconnect(\r\n    onMessage: (data: any) => void,\r\n    onError?: (error: Event) => void\r\n  ) {\r\n    if (this.reconnectAttempts < this.maxReconnectAttempts) {\r\n      this.reconnectAttempts++;\r\n      const delay =\r\n        this.reconnectDelay * Math.pow(2, this.reconnectAttempts - 1);\r\n\r\n      console.log(\r\n        `Reconnecting WebSocket in ${delay}ms (attempt ${this.reconnectAttempts})`\r\n      );\r\n\r\n      setTimeout(() => {\r\n        this.connect(onMessage, onError);\r\n      }, delay);\r\n    } else {\r\n      console.error('Max WebSocket reconnection attempts reached');\r\n    }\r\n  }\r\n\r\n  disconnect() {\r\n    if (this.ws) {\r\n      this.ws.close();\r\n      this.ws = null;\r\n    }\r\n  }\r\n\r\n  send(data: any) {\r\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) {\r\n      this.ws.send(JSON.stringify(data));\r\n    } else {\r\n      console.error('WebSocket is not connected');\r\n    }\r\n  }\r\n}\r\n\r\n// Export configured instances\r\nexport const api = {\r\n  devices: DevicesApi,\r\n  folders: FoldersApi,\r\n  metrics: MetricsApi,\r\n  alerts: AlertsApi,\r\n  realtime: new RealtimeApi(),\r\n\r\n  // Auth methods\r\n  setAuthToken: (token: string) => httpClient.setAuthToken(token),\r\n  clearAuthToken: () => httpClient.clearAuthToken(),\r\n};\r\n\r\n// Default export\r\nexport default api;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 661, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 666, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/store/network-store.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\nimport { persist } from 'zustand/middleware';\nimport {\n  NetworkDevice,\n  DeviceFolder,\n  NetworkMetrics,\n  BandwidthData,\n  AlertMessage,\n  SystemHealth,\n  NetworkConnection,\n  MonitoringConfig,\n} from '../types/schemas';\nimport {\n  mockDevices,\n  mockFolders,\n  mockAlerts,\n  initialMetrics,\n  initialSystemHealth,\n  initialBandwidthHistory,\n  initialConfig,\n} from '../data/mock-data';\nimport api from '../lib/api';\n\ninterface NetworkStore {\n  // State\n  devices: NetworkDevice[];\n  folders: DeviceFolder[];\n  metrics: NetworkMetrics;\n  bandwidthHistory: BandwidthData[];\n  alerts: AlertMessage[];\n  systemHealth: SystemHealth;\n  connections: NetworkConnection[];\n  config: MonitoringConfig;\n\n  // UI State\n  selectedFolderId: string;\n  sidebarCollapsed: boolean;\n  loading: boolean;\n  error: string | null;\n  rootFolderExpanded: boolean;\n  othersExpanded: boolean;\n\n  // API integration flags\n  useApi: boolean;\n  apiConnected: boolean;\n\n  // Device actions\n  addDevice: (\n    device: Omit<NetworkDevice, 'id' | 'lastSeen' | 'status'>\n  ) => Promise<void>;\n  updateDevice: (\n    deviceId: string,\n    updates: Partial<NetworkDevice>\n  ) => Promise<void>;\n  deleteDevice: (deviceId: string) => Promise<void>;\n  pingDevice: (deviceId: string) => Promise<void>;\n\n  // Folder actions\n  addFolder: (folder: Omit<DeviceFolder, 'id' | 'children'>) => Promise<void>;\n  updateFolder: (\n    folderId: string,\n    updates: Partial<DeviceFolder>\n  ) => Promise<void>;\n  deleteFolder: (folderId: string) => Promise<void>;\n\n  // Alert actions\n  addAlert: (alert: Omit<AlertMessage, 'id' | 'timestamp'>) => void;\n  markAlertResolved: (alertId: string) => void;\n  acknowledgeAlert: (alertId: string, userId: string) => void;\n  clearAlerts: () => void;\n\n  // Data actions\n  setBandwidthData: (data: BandwidthData[]) => void;\n  addBandwidthData: (data: BandwidthData) => void;\n  updateSystemHealth: (health: SystemHealth) => void;\n  updateMetrics: (metrics: Partial<NetworkMetrics>) => void;\n  loadDevices: () => Promise<void>;\n  loadSystemHealth: () => Promise<void>;\n  loadBandwidthData: () => Promise<void>;\n  loadNetworkMetrics: () => Promise<void>;\n\n  // UI actions\n  setSelectedFolder: (folderId: string) => void;\n  setSidebarCollapsed: (collapsed: boolean) => void;\n  setLoading: (loading: boolean) => void;\n  setError: (error: string | null) => void;\n  setUseApi: (useApi: boolean) => void;\n\n  // Data management\n  refreshData: () => Promise<void>;\n  exportData: () => string;\n  importData: (jsonData: string) => boolean;\n  resetData: () => void;\n  resetToMockData: () => void;\n  setRootFolderExpanded: (expanded: boolean) => void;\n  setOthersExpanded: (expanded: boolean) => void;\n  initializeApi: () => Promise<void>;\n}\n\nexport const useNetworkStore = create<NetworkStore>()(\n  subscribeWithSelector(\n    persist(\n      (set, get) => ({\n        // Initial state with mock data\n        devices: mockDevices,\n        folders: mockFolders,\n        metrics: initialMetrics,\n        bandwidthHistory: initialBandwidthHistory,\n        alerts: mockAlerts,\n        systemHealth: initialSystemHealth,\n        connections: [],\n        config: initialConfig,\n\n        // UI state\n        selectedFolderId: 'root',\n        sidebarCollapsed: false,\n        loading: false,\n        error: null,\n        rootFolderExpanded: true,\n        othersExpanded: false,\n\n        // API integration flags\n        useApi: false,\n        apiConnected: false,\n\n        // Device actions\n        addDevice: async (deviceData) => {\n          const { useApi } = get();\n\n          if (useApi && get().apiConnected) {\n            try {\n              // Пытаемся создать устройство через API\n              const response = await api.devices.createDevice(deviceData);\n              console.log('✅ Устройство создано через API:', response);\n\n              // Перезагружаем список устройств после создания\n              await get().loadDevices();\n            } catch (error) {\n              console.error('❌ Ошибка создания устройства через API:', error);\n\n              // Fallback на локальное создание\n              const device: NetworkDevice = {\n                ...deviceData,\n                id: Math.random().toString(36).substr(2, 9),\n                lastSeen: new Date(),\n                status: 'online',\n              };\n\n              set((state) => ({\n                devices: [...state.devices, device],\n                error: 'Устройство создано локально (API недоступен)',\n              }));\n              get().updateMetrics({});\n            }\n          } else {\n            // Локальное создание (демо режим)\n            const device: NetworkDevice = {\n              ...deviceData,\n              id: Math.random().toString(36).substr(2, 9),\n              lastSeen: new Date(),\n              status: 'online',\n            };\n\n            set((state) => ({\n              devices: [...state.devices, device],\n            }));\n            get().updateMetrics({});\n          }\n        },\n\n        updateDevice: async (deviceId, updates) => {\n          const { useApi } = get();\n\n          if (useApi && get().apiConnected) {\n            try {\n              // Пытаемся обновить устройство через API\n              const response = await api.devices.updateDevice(\n                deviceId,\n                updates\n              );\n              console.log('✅ Устройство обновлено через API:', response);\n\n              // Перезагружаем список устройств после обновления\n              await get().loadDevices();\n            } catch (error) {\n              console.error(\n                '❌ Ошибка обновления устройства через API:',\n                error\n              );\n\n              // Fallback на локальное обновление\n              set((state) => ({\n                devices: state.devices.map((device) =>\n                  device.id === deviceId\n                    ? { ...device, ...updates, lastSeen: new Date() }\n                    : device\n                ),\n                error: 'Устройство обновлено локально (API недоступен)',\n              }));\n              get().updateMetrics({});\n            }\n          } else {\n            // Локальное обновление (демо режим)\n            set((state) => ({\n              devices: state.devices.map((device) =>\n                device.id === deviceId\n                  ? { ...device, ...updates, lastSeen: new Date() }\n                  : device\n              ),\n            }));\n            get().updateMetrics({});\n          }\n        },\n\n        deleteDevice: async (deviceId) => {\n          const { useApi } = get();\n\n          if (useApi && get().apiConnected) {\n            try {\n              // Пытаемся удалить устройство через API\n              await api.devices.deleteDevice(deviceId);\n              console.log('✅ Устройство удалено через API');\n\n              // Перезагружаем список устройств после удаления\n              await get().loadDevices();\n            } catch (error) {\n              console.error('❌ Ошибка удаления устройства через API:', error);\n\n              // Fallback на локальное удаление\n              set((state) => ({\n                devices: state.devices.filter(\n                  (device) => device.id !== deviceId\n                ),\n                error: 'Устройство удалено локально (API недоступен)',\n              }));\n              get().updateMetrics({});\n            }\n          } else {\n            // Локальное удаление (демо режим)\n            set((state) => ({\n              devices: state.devices.filter((device) => device.id !== deviceId),\n            }));\n            get().updateMetrics({});\n          }\n        },\n\n        pingDevice: async (deviceId) => {\n          const { useApi } = get();\n\n          if (useApi && get().apiConnected) {\n            try {\n              // Реальный ping через API\n              const response = await api.devices.pingDevice(deviceId);\n              console.log('🏓 Ping выполнен через API:', response);\n\n              // Обновляем устройство с результатами ping\n              if (response && response.data) {\n                const pingData = response.data as any; // Временный type assertion\n                const alive = pingData.alive;\n                const responseTime = pingData.responseTime || 0;\n\n                await get().updateDevice(deviceId, {\n                  status: alive ? 'online' : 'offline',\n                  responseTime: responseTime,\n                  lastSeen: new Date(),\n                });\n              }\n            } catch (error) {\n              console.error('❌ Ошибка ping через API:', error);\n\n              // Fallback на симуляцию ping\n              const device = get().devices.find((d) => d.id === deviceId);\n              if (device) {\n                const simulatedResponseTime = Math.random() * 50 + 1;\n                await get().updateDevice(deviceId, {\n                  status: 'online',\n                  responseTime: Math.round(simulatedResponseTime),\n                  lastSeen: new Date(),\n                });\n              }\n            }\n          } else {\n            // Симуляция ping (демо режим)\n            console.log(`🏓 Симуляция ping устройства: ${deviceId}`);\n            await new Promise((resolve) => setTimeout(resolve, 500));\n\n            const device = get().devices.find((d) => d.id === deviceId);\n            if (device) {\n              const simulatedResponseTime = Math.random() * 50 + 1;\n              await get().updateDevice(deviceId, {\n                status: 'online',\n                responseTime: Math.round(simulatedResponseTime),\n                lastSeen: new Date(),\n              });\n            }\n          }\n        },\n\n        // Folder actions\n        addFolder: async (folderData) => {\n          const folder: DeviceFolder = {\n            ...folderData,\n            id: Math.random().toString(36).substr(2, 9),\n            children: [],\n          };\n\n          const addFolderRecursive = (\n            folders: DeviceFolder[]\n          ): DeviceFolder[] => {\n            return folders.map((f) =>\n              f.id === (folder.parentId || 'root')\n                ? { ...f, children: [...f.children, folder] }\n                : { ...f, children: addFolderRecursive(f.children) }\n            );\n          };\n\n          if (!folder.parentId || folder.parentId === 'root') {\n            set((state) => ({\n              folders: [...state.folders, folder],\n            }));\n          } else {\n            set((state) => ({\n              folders: addFolderRecursive(state.folders),\n            }));\n          }\n        },\n\n        updateFolder: async (folderId, updates) => {\n          // Специальная обработка для корневой папки\n          if (folderId === 'root') {\n            set((state) => ({\n              rootFolderExpanded:\n                updates.expanded !== undefined\n                  ? updates.expanded\n                  : state.rootFolderExpanded,\n            }));\n            return;\n          }\n\n          // Специальная обработка для папки \"Иные\"\n          if (folderId === 'others') {\n            set((state) => ({\n              othersExpanded:\n                updates.expanded !== undefined\n                  ? updates.expanded\n                  : state.othersExpanded,\n            }));\n            return;\n          }\n\n          const updateFolderRecursive = (\n            folders: DeviceFolder[]\n          ): DeviceFolder[] => {\n            return folders.map((folder) =>\n              folder.id === folderId\n                ? { ...folder, ...updates }\n                : {\n                    ...folder,\n                    children: updateFolderRecursive(folder.children),\n                  }\n            );\n          };\n\n          set((state) => ({\n            folders: updateFolderRecursive(state.folders),\n          }));\n        },\n\n        deleteFolder: async (folderId) => {\n          const removeFolderRecursive = (\n            folders: DeviceFolder[]\n          ): DeviceFolder[] => {\n            return folders\n              .filter((folder) => folder.id !== folderId)\n              .map((folder) => ({\n                ...folder,\n                children: removeFolderRecursive(folder.children),\n              }));\n          };\n\n          set((state) => ({\n            folders: removeFolderRecursive(state.folders),\n            devices: state.devices.map((device) =>\n              device.folderId === folderId\n                ? { ...device, folderId: 'root' }\n                : device\n            ),\n          }));\n        },\n\n        // Alert actions\n        addAlert: (alertData) => {\n          const alert: AlertMessage = {\n            ...alertData,\n            id: Math.random().toString(36).substr(2, 9),\n            timestamp: new Date(),\n          };\n\n          set((state) => ({\n            alerts: [alert, ...state.alerts].slice(0, 50), // Keep only last 50 alerts\n          }));\n        },\n\n        markAlertResolved: (alertId) => {\n          set((state) => ({\n            alerts: state.alerts.map((alert) =>\n              alert.id === alertId ? { ...alert, resolved: true } : alert\n            ),\n          }));\n        },\n\n        acknowledgeAlert: (alertId, userId) => {\n          set((state) => ({\n            alerts: state.alerts.map((alert) =>\n              alert.id === alertId\n                ? {\n                    ...alert,\n                    acknowledgedBy: userId,\n                    acknowledgedAt: new Date(),\n                  }\n                : alert\n            ),\n          }));\n        },\n\n        clearAlerts: () => {\n          set({ alerts: [] });\n        },\n\n        // Data actions\n        setBandwidthData: (data) => {\n          set({ bandwidthHistory: data });\n        },\n\n        addBandwidthData: (data) => {\n          set((state) => ({\n            bandwidthHistory: [...state.bandwidthHistory.slice(-19), data],\n          }));\n        },\n\n        updateSystemHealth: (health) => {\n          set({ systemHealth: health });\n        },\n\n        updateMetrics: (metricsUpdate) => {\n          const state = get();\n          const devices = state.devices;\n\n          const totalDevices = devices.length;\n          const onlineDevices = devices.filter(\n            (d) => d.status === 'online'\n          ).length;\n          const offlineDevices = devices.filter(\n            (d) => d.status === 'offline'\n          ).length;\n          const warningDevices = devices.filter(\n            (d) => d.status === 'warning'\n          ).length;\n          const averageResponseTime =\n            totalDevices > 0\n              ? Math.round(\n                  devices.reduce((sum, d) => sum + d.responseTime, 0) /\n                    totalDevices\n                )\n              : 0;\n\n          set({\n            metrics: {\n              ...state.metrics,\n              totalDevices,\n              onlineDevices,\n              offlineDevices,\n              warningDevices,\n              averageResponseTime,\n              lastUpdate: new Date(),\n              ...metricsUpdate,\n            },\n          });\n        },\n\n        loadDevices: async () => {\n          set({ loading: true, error: null });\n          try {\n            const response = await api.devices.getDevices();\n            console.log('✅ API Response devices:', response);\n\n            // Проверяем формат ответа API\n            let devices = [];\n            if (response && response.data) {\n              // Если ответ в формате { data: [], success: true }\n              devices = Array.isArray(response.data) ? response.data : [];\n            } else if (Array.isArray(response)) {\n              // Если ответ - это просто массив устройств\n              devices = response;\n            } else {\n              console.warn('Неожиданный формат ответа API, используем моки');\n              devices = mockDevices;\n            }\n\n            console.log('📱 Загружено устройств:', devices.length);\n            set({\n              devices: devices.length > 0 ? devices : mockDevices,\n              loading: false,\n              apiConnected: true,\n              error: null,\n            });\n            get().updateMetrics({});\n          } catch (error) {\n            console.error(\n              '❌ API недоступен, используем моковые данные:',\n              error\n            );\n            set({\n              devices: mockDevices,\n              loading: false,\n              error: 'API недоступен, показаны демо-данные',\n              apiConnected: false,\n            });\n            get().updateMetrics({});\n          }\n        },\n\n        loadSystemHealth: async () => {\n          try {\n            const response = await api.metrics.getSystemHealth();\n            console.log('✅ API Response system health:', response);\n\n            // Простая обработка - пока используем initialSystemHealth и обновляем apiConnected\n            set({\n              systemHealth: {\n                ...initialSystemHealth,\n                lastUpdate: new Date(),\n              },\n              apiConnected: true,\n              error: null,\n            });\n\n            console.log('💻 Системные метрики обновлены (API подключен)');\n          } catch (error) {\n            console.error('❌ API недоступен для системного здоровья:', error);\n            set({\n              systemHealth: initialSystemHealth,\n              apiConnected: false,\n              error: 'Метрики системы недоступны',\n            });\n          }\n        },\n\n        loadBandwidthData: async () => {\n          try {\n            const response = await api.metrics.getBandwidthHistory();\n            console.log('✅ API Response bandwidth:', response);\n\n            // Обрабатываем данные пропускной способности\n            let bandwidthData = initialBandwidthHistory;\n            if (response && response.data && Array.isArray(response.data)) {\n              bandwidthData = response.data;\n            }\n\n            set({\n              bandwidthHistory: bandwidthData,\n              apiConnected: true,\n            });\n            console.log('📊 Данные пропускной способности обновлены');\n          } catch (error) {\n            console.error(\n              '❌ API недоступен для данных пропускной способности:',\n              error\n            );\n            set({\n              bandwidthHistory: initialBandwidthHistory,\n              apiConnected: false,\n            });\n          }\n        },\n\n        loadNetworkMetrics: async () => {\n          try {\n            const response = await api.metrics.getNetworkMetrics();\n            console.log('✅ API Response network metrics:', response);\n\n            // Обрабатываем метрики сети\n            let metrics = initialMetrics;\n            if (response && response.data) {\n              metrics = {\n                ...initialMetrics,\n                ...response.data,\n                lastUpdate: new Date(),\n              };\n            }\n\n            set({\n              metrics,\n              apiConnected: true,\n            });\n            console.log('🌐 Метрики сети обновлены');\n          } catch (error) {\n            console.error('❌ API недоступен для метрик сети:', error);\n            set({\n              metrics: initialMetrics,\n              apiConnected: false,\n            });\n          }\n        },\n\n        // UI actions\n        setSelectedFolder: (folderId) => {\n          set({ selectedFolderId: folderId });\n        },\n\n        setSidebarCollapsed: (collapsed) => {\n          set({ sidebarCollapsed: collapsed });\n        },\n\n        setLoading: (loading) => {\n          set({ loading });\n        },\n\n        setError: (error) => {\n          set({ error });\n        },\n\n        setUseApi: (useApi) => {\n          set({ useApi });\n        },\n\n        // Data management\n        refreshData: async () => {\n          set({ loading: true, error: null });\n          try {\n            const { useApi } = get();\n            if (useApi) {\n              // Пробуем загрузить данные с API\n              await Promise.allSettled([\n                get().loadDevices(),\n                get().loadSystemHealth(),\n                get().loadBandwidthData(),\n                get().loadNetworkMetrics(),\n              ]);\n            } else {\n              // Используем моковые данные\n              await new Promise((resolve) => setTimeout(resolve, 500));\n              get().updateMetrics({});\n            }\n            set({ loading: false });\n          } catch (error) {\n            set({\n              loading: false,\n              error:\n                error instanceof Error\n                  ? error.message\n                  : 'Ошибка обновления данных',\n            });\n          }\n        },\n\n        // Инициализация API подключения\n        initializeApi: async () => {\n          console.log('🔌 Попытка подключения к API...');\n          try {\n            // Проверяем доступность API\n            const response = await fetch('http://localhost:5000/api/health');\n            if (response.ok) {\n              console.log('✅ API доступен! Включаем API режим');\n              set({ useApi: true, apiConnected: true });\n              await get().refreshData();\n            } else {\n              console.log('❌ API недоступен, используем моковые данные');\n              set({ useApi: false, apiConnected: false });\n            }\n          } catch (error) {\n            console.log('❌ API недоступен, используем моковые данные');\n            set({ useApi: false, apiConnected: false });\n          }\n        },\n\n        exportData: () => {\n          const state = get();\n          const exportData = {\n            devices: state.devices,\n            folders: state.folders,\n            connections: state.connections,\n            config: state.config,\n            exportTimestamp: new Date().toISOString(),\n          };\n          return JSON.stringify(exportData, null, 2);\n        },\n\n        importData: (jsonData) => {\n          try {\n            const data = JSON.parse(jsonData);\n            set({\n              devices: data.devices || [],\n              folders: data.folders || [],\n              connections: data.connections || [],\n              config: data.config || initialConfig,\n            });\n            get().updateMetrics({});\n            return true;\n          } catch {\n            return false;\n          }\n        },\n\n        resetData: () => {\n          set({\n            devices: [],\n            folders: [],\n            metrics: initialMetrics,\n            bandwidthHistory: [],\n            alerts: [],\n            systemHealth: initialSystemHealth,\n            connections: [],\n            selectedFolderId: 'root',\n            loading: false,\n            error: null,\n          });\n        },\n\n        resetToMockData: () => {\n          set({\n            devices: mockDevices,\n            folders: mockFolders,\n            metrics: initialMetrics,\n            bandwidthHistory: initialBandwidthHistory,\n            alerts: mockAlerts,\n            systemHealth: initialSystemHealth,\n            connections: [],\n            selectedFolderId: 'root',\n            loading: false,\n            error: null,\n            rootFolderExpanded: true,\n            othersExpanded: false,\n          });\n          get().updateMetrics({});\n        },\n\n        setRootFolderExpanded: (expanded) => {\n          set({ rootFolderExpanded: expanded });\n        },\n\n        setOthersExpanded: (expanded) => {\n          set({ othersExpanded: expanded });\n        },\n      }),\n      {\n        name: 'network-monitor-storage',\n        partialize: (state) => ({\n          devices: state.devices,\n          folders: state.folders,\n          config: state.config,\n          selectedFolderId: state.selectedFolderId,\n          sidebarCollapsed: state.sidebarCollapsed,\n        }),\n      }\n    )\n  )\n);\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1273, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1278, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/folder-tree.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { DeviceFolder, NetworkDevice } from '@/types/schemas';\nimport {\n  ChevronRight,\n  ChevronDown,\n  Folder,\n  FolderOpen,\n  Plus,\n  Edit,\n  Trash2,\n  UserPlus,\n  Network,\n  Server,\n  Monitor,\n  Printer,\n  Smartphone,\n  Globe,\n  Database,\n  Building,\n  Shield,\n} from 'lucide-react';\n\ninterface FolderTreeProps {\n  folders: DeviceFolder[];\n  devices: NetworkDevice[];\n  selectedFolderId?: string;\n  rootFolderExpanded: boolean;\n  othersExpanded: boolean;\n  onFolderSelect: (folderId: string) => void;\n  onFolderToggle: (folderId: string) => void;\n  onAddFolder: (parentId: string) => void;\n  onEditFolder: (folderId: string) => void;\n  onDeleteFolder: (folderId: string) => void;\n  onAddDeviceToFolder: (folderId: string) => void;\n}\n\nconst iconMap = {\n  Network,\n  Server,\n  Monitor,\n  Printer,\n  Smartphone,\n  Globe,\n  Database,\n  Building,\n  Folder,\n  Shield,\n};\n\nexport function FolderTree({\n  folders,\n  devices,\n  selectedFolderId,\n  rootFolderExpanded,\n  othersExpanded,\n  onFolderSelect,\n  onFolderToggle,\n  onAddFolder,\n  onEditFolder,\n  onDeleteFolder,\n  onAddDeviceToFolder,\n}: FolderTreeProps) {\n  const getDeviceCount = (folderId: string): number => {\n    if (folderId === 'root') {\n      return devices.length; // Для корневой папки показываем все устройства\n    }\n    return devices.filter((device) => device.folderId === folderId).length;\n  };\n\n  const getOnlineDeviceCount = (folderId: string): number => {\n    if (folderId === 'root') {\n      return devices.filter((device) => device.status === 'online').length;\n    }\n    return devices.filter(\n      (device) => device.folderId === folderId && device.status === 'online'\n    ).length;\n  };\n\n  // Функция обработки клика на папку\n  const handleFolderClick = (folder: DeviceFolder) => {\n    const hasChildren = folder.children && folder.children.length > 0;\n    const folderDevices = devices.filter(\n      (device) => device.folderId === folder.id\n    );\n    const hasDevices = folderDevices.length > 0;\n    const shouldExpand = hasChildren || hasDevices;\n\n    if (selectedFolderId === folder.id) {\n      // Если папка уже выбрана, только переключаем её состояние (развернуть/свернуть)\n      if (shouldExpand) {\n        onFolderToggle(folder.id);\n      }\n    } else {\n      // Если папка не выбрана, выбираем её и разворачиваем (если есть содержимое)\n      onFolderSelect(folder.id);\n      if (shouldExpand && !folder.expanded) {\n        onFolderToggle(folder.id);\n      }\n    }\n  };\n\n  // Функция для рендеринга устройства\n  const renderDevice = (device: NetworkDevice, level: number = 0) => {\n    return (\n      <div\n        key={device.id}\n        className=\"select-none\"\n        draggable\n        onDragStart={(e) => {\n          e.dataTransfer.setData('text/plain', device.id);\n          e.dataTransfer.setData('device-id', device.id);\n        }}\n      >\n        <div\n          className={`group flex cursor-pointer items-center justify-between rounded-lg p-2 transition-all duration-200 ${\n            selectedFolderId === device.id\n              ? 'border border-green-500/30 bg-green-500/20'\n              : 'hover:bg-slate-700/50'\n          }`}\n          style={{ paddingLeft: `${level * 20 + 28}px` }}\n          onClick={() => {\n            console.log('Device clicked:', device.id, device.name);\n            onFolderSelect(device.id);\n          }}\n        >\n          <div className=\"flex flex-1 items-center space-x-2\">\n            <div\n              className=\"rounded-lg border p-1.5\"\n              style={{\n                backgroundColor:\n                  device.status === 'online'\n                    ? '#10B98120'\n                    : device.status === 'warning'\n                      ? '#F59E0B20'\n                      : '#EF444420',\n                borderColor:\n                  device.status === 'online'\n                    ? '#10B98140'\n                    : device.status === 'warning'\n                      ? '#F59E0B40'\n                      : '#EF444440',\n                color:\n                  device.status === 'online'\n                    ? '#10B981'\n                    : device.status === 'warning'\n                      ? '#F59E0B'\n                      : '#EF4444',\n              }}\n            >\n              {(() => {\n                const deviceIcons = {\n                  router: Network,\n                  switch: Network,\n                  server: Server,\n                  workstation: Monitor,\n                  printer: Printer,\n                  mobile: Smartphone,\n                  firewall: Shield,\n                  access_point: Globe,\n                };\n                const DeviceIcon =\n                  deviceIcons[device.type as keyof typeof deviceIcons] ||\n                  Monitor;\n                return <DeviceIcon className=\"h-4 w-4\" />;\n              })()}\n            </div>\n\n            <div className=\"flex-1\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-sm font-medium text-white\">\n                  {device.name}\n                </span>\n                <div className=\"flex items-center space-x-1 text-xs\">\n                  <span\n                    className={\n                      device.status === 'online'\n                        ? 'text-green-400'\n                        : device.status === 'warning'\n                          ? 'text-yellow-400'\n                          : 'text-red-400'\n                    }\n                  >\n                    {device.status}\n                  </span>\n                </div>\n              </div>\n              <p className=\"truncate text-xs text-slate-500\">{device.ip}</p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-1 opacity-0 transition-opacity group-hover:opacity-100\">\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                console.log('Edit device:', device.id);\n              }}\n              className=\"rounded p-1 text-slate-400 hover:bg-slate-600/50 hover:text-white\"\n              title=\"Редактировать устройство\"\n            >\n              <Edit className=\"h-3 w-3\" />\n            </button>\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                console.log('Delete device:', device.id);\n              }}\n              className=\"rounded p-1 text-slate-400 hover:bg-slate-600/50 hover:text-red-400\"\n              title=\"Удалить устройство\"\n            >\n              <Trash2 className=\"h-3 w-3\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderFolder = (folder: DeviceFolder, level: number = 0) => {\n    const IconComponent =\n      iconMap[folder.icon as keyof typeof iconMap] || Folder;\n    const deviceCount = getDeviceCount(folder.id);\n    const onlineCount = getOnlineDeviceCount(folder.id);\n    const hasChildren = folder.children && folder.children.length > 0;\n    const folderDevices = devices.filter(\n      (device) => device.folderId === folder.id\n    );\n    const hasDevices = folderDevices.length > 0;\n    const shouldShowExpandButton = hasChildren || hasDevices;\n\n    return (\n      <div key={folder.id} className=\"select-none\">\n        <div\n          className={`group flex cursor-pointer items-center justify-between rounded-lg p-2 transition-all duration-200 ${\n            selectedFolderId === folder.id\n              ? 'border border-blue-500/30 bg-blue-500/20'\n              : 'hover:bg-slate-700/50'\n          }`}\n          style={{ paddingLeft: `${level * 20 + 8}px` }}\n          onClick={() => {\n            console.log('Folder clicked:', folder.id, folder.name);\n            handleFolderClick(folder);\n          }}\n          onDragOver={(e) => {\n            e.preventDefault();\n            e.currentTarget.classList.add('bg-blue-500/10');\n          }}\n          onDragLeave={(e) => {\n            e.currentTarget.classList.remove('bg-blue-500/10');\n          }}\n          onDrop={(e) => {\n            e.preventDefault();\n            e.currentTarget.classList.remove('bg-blue-500/10');\n            const deviceId = e.dataTransfer.getData('device-id');\n            if (deviceId) {\n              console.log('Moving device', deviceId, 'to folder', folder.id);\n              // TODO: Implement device move logic\n            }\n          }}\n        >\n          <div className=\"flex flex-1 items-center space-x-2\">\n            {shouldShowExpandButton && (\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  console.log(\n                    'Toggle folder:',\n                    folder.id,\n                    'current expanded:',\n                    folder.expanded\n                  );\n                  onFolderToggle(folder.id);\n                }}\n                className=\"rounded p-1 hover:bg-slate-600/50\"\n              >\n                {folder.expanded ? (\n                  <ChevronDown className=\"h-4 w-4 text-slate-400\" />\n                ) : (\n                  <ChevronRight className=\"h-4 w-4 text-slate-400\" />\n                )}\n              </button>\n            )}\n\n            <div\n              className=\"rounded-lg border p-1.5\"\n              style={{\n                backgroundColor: `${folder.color}20`,\n                borderColor: `${folder.color}40`,\n                color: folder.color,\n              }}\n            >\n              {folder.expanded && shouldShowExpandButton ? (\n                <FolderOpen className=\"h-4 w-4\" />\n              ) : (\n                <IconComponent className=\"h-4 w-4\" />\n              )}\n            </div>\n\n            <div className=\"flex-1\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-sm font-medium text-white\">\n                  {folder.name}\n                </span>\n                {deviceCount > 0 && (\n                  <div className=\"flex items-center space-x-1 text-xs\">\n                    <span className=\"text-green-400\">{onlineCount}</span>\n                    <span className=\"text-slate-500\">/</span>\n                    <span className=\"text-slate-400\">{deviceCount}</span>\n                  </div>\n                )}\n              </div>\n              {folder.description && (\n                <p className=\"truncate text-xs text-slate-500\">\n                  {folder.description}\n                </p>\n              )}\n            </div>\n          </div>\n\n          {/* Всегда видимые кнопки действий */}\n          <div className=\"flex items-center space-x-1 opacity-0 transition-opacity group-hover:opacity-100\">\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                onAddDeviceToFolder(folder.id);\n              }}\n              className=\"rounded p-1 text-slate-400 hover:bg-slate-600/50 hover:text-green-400\"\n              title=\"Добавить устройство в эту папку\"\n            >\n              <Monitor className=\"h-3 w-3\" />\n            </button>\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                onAddFolder(folder.id);\n              }}\n              className=\"rounded p-1 text-slate-400 hover:bg-slate-600/50 hover:text-blue-400\"\n              title=\"Добавить подпапку\"\n            >\n              <Plus className=\"h-3 w-3\" />\n            </button>\n            {folder.id !== 'root' && (\n              <>\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    onEditFolder(folder.id);\n                  }}\n                  className=\"rounded p-1 text-slate-400 hover:bg-slate-600/50 hover:text-white\"\n                  title=\"Редактировать папку\"\n                >\n                  <Edit className=\"h-3 w-3\" />\n                </button>\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    onDeleteFolder(folder.id);\n                  }}\n                  className=\"rounded p-1 text-slate-400 hover:bg-slate-600/50 hover:text-red-400\"\n                  title=\"Удалить папку\"\n                >\n                  <Trash2 className=\"h-3 w-3\" />\n                </button>\n              </>\n            )}\n          </div>\n        </div>\n\n        {folder.expanded && (\n          <div className=\"mt-1\">\n            {/* Подпапки */}\n            {hasChildren &&\n              folder.children.map((child: DeviceFolder) =>\n                renderFolder(child, level + 1)\n              )}\n\n            {/* Устройства в этой папке */}\n            {hasDevices &&\n              folderDevices.map((device) => renderDevice(device, level + 1))}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // Создаем виртуальную корневую папку\n  const rootFolder: DeviceFolder = {\n    id: 'root',\n    name: 'Все устройства',\n    description: 'Все устройства сети',\n    parentId: undefined,\n    color: '#3B82F6',\n    icon: 'Network',\n    expanded: rootFolderExpanded,\n    children: folders,\n  };\n\n  const totalDevices = devices.length;\n  const totalOnline = devices.filter((d) => d.status === 'online').length;\n\n  return (\n    <div className=\"space-y-1\">\n      {/* Корневая папка \"Все устройства\" */}\n      <div className=\"select-none\">\n        <div\n          className={`group flex cursor-pointer items-center justify-between rounded-lg p-2 transition-all duration-200 ${\n            selectedFolderId === 'root' || !selectedFolderId\n              ? 'border border-blue-500/30 bg-blue-500/20'\n              : 'hover:bg-slate-700/50'\n          }`}\n          onClick={() => {\n            console.log('Root folder clicked');\n            handleFolderClick(rootFolder);\n          }}\n        >\n          <div className=\"flex flex-1 items-center space-x-2\">\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                onFolderToggle('root');\n              }}\n              className=\"rounded p-1 hover:bg-slate-600/50\"\n            >\n              {rootFolder.expanded ? (\n                <ChevronDown className=\"h-4 w-4 text-slate-400\" />\n              ) : (\n                <ChevronRight className=\"h-4 w-4 text-slate-400\" />\n              )}\n            </button>\n\n            <div\n              className=\"rounded-lg border p-1.5\"\n              style={{\n                backgroundColor: '#3B82F620',\n                borderColor: '#3B82F640',\n                color: '#3B82F6',\n              }}\n            >\n              {rootFolder.expanded ? (\n                <FolderOpen className=\"h-4 w-4\" />\n              ) : (\n                <Network className=\"h-4 w-4\" />\n              )}\n            </div>\n\n            <div className=\"flex-1\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-sm font-medium text-white\">\n                  Все устройства\n                </span>\n                <div className=\"flex items-center space-x-1 text-xs\">\n                  <span className=\"text-green-400\">{totalOnline}</span>\n                  <span className=\"text-slate-500\">/</span>\n                  <span className=\"text-slate-400\">{totalDevices}</span>\n                </div>\n              </div>\n              <p className=\"truncate text-xs text-slate-500\">\n                Все устройства сети\n              </p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-1 opacity-0 transition-opacity group-hover:opacity-100\">\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                onAddDeviceToFolder('root');\n              }}\n              className=\"rounded p-1 text-slate-400 hover:bg-slate-600/50 hover:text-green-400\"\n              title=\"Добавить устройство в корень\"\n            >\n              <Monitor className=\"h-3 w-3\" />\n            </button>\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                onAddFolder('root');\n              }}\n              className=\"rounded p-1 text-slate-400 hover:bg-slate-600/50 hover:text-blue-400\"\n              title=\"Добавить папку\"\n            >\n              <Plus className=\"h-3 w-3\" />\n            </button>\n          </div>\n        </div>\n\n        {/* Вложенные папки и папка \"Иные\" */}\n        {rootFolder.expanded && (\n          <div className=\"mt-1\">\n            {folders.map((folder) => renderFolder(folder, 1))}\n\n            {/* Папка \"Иные\" для устройств без категории */}\n            {(() => {\n              const uncategorizedDevices = devices.filter(\n                (device) => !device.folderId || device.folderId === 'root'\n              );\n\n              if (uncategorizedDevices.length === 0) return null;\n\n              const othersFolder: DeviceFolder = {\n                id: 'others',\n                name: 'Иные',\n                description: 'Устройства без категории',\n                parentId: 'root',\n                color: '#6B7280',\n                icon: 'Folder',\n                expanded: othersExpanded,\n                children: [],\n              };\n\n              return (\n                <div key=\"others\" className=\"select-none\">\n                  <div\n                    className={`group flex cursor-pointer items-center justify-between rounded-lg p-2 transition-all duration-200 ${\n                      selectedFolderId === 'others'\n                        ? 'border border-blue-500/30 bg-blue-500/20'\n                        : 'hover:bg-slate-700/50'\n                    }`}\n                    style={{ paddingLeft: '28px' }}\n                    onClick={() => {\n                      console.log('Others folder clicked');\n                      onFolderSelect('others');\n                      if (!othersFolder.expanded) {\n                        onFolderToggle('others');\n                      }\n                    }}\n                    onDragOver={(e) => {\n                      e.preventDefault();\n                      e.currentTarget.classList.add('bg-blue-500/10');\n                    }}\n                    onDragLeave={(e) => {\n                      e.currentTarget.classList.remove('bg-blue-500/10');\n                    }}\n                    onDrop={(e) => {\n                      e.preventDefault();\n                      e.currentTarget.classList.remove('bg-blue-500/10');\n                      const deviceId = e.dataTransfer.getData('device-id');\n                      if (deviceId) {\n                        console.log(\n                          'Moving device',\n                          deviceId,\n                          'to others folder'\n                        );\n                        // TODO: Implement device move to others\n                      }\n                    }}\n                  >\n                    <div className=\"flex flex-1 items-center space-x-2\">\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          onFolderToggle('others');\n                        }}\n                        className=\"rounded p-1 hover:bg-slate-600/50\"\n                      >\n                        {othersFolder.expanded ? (\n                          <ChevronDown className=\"h-4 w-4 text-slate-400\" />\n                        ) : (\n                          <ChevronRight className=\"h-4 w-4 text-slate-400\" />\n                        )}\n                      </button>\n\n                      <div\n                        className=\"rounded-lg border p-1.5\"\n                        style={{\n                          backgroundColor: '#6B728020',\n                          borderColor: '#6B728040',\n                          color: '#6B7280',\n                        }}\n                      >\n                        {othersFolder.expanded ? (\n                          <FolderOpen className=\"h-4 w-4\" />\n                        ) : (\n                          <Folder className=\"h-4 w-4\" />\n                        )}\n                      </div>\n\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center space-x-2\">\n                          <span className=\"text-sm font-medium text-white\">\n                            Иные\n                          </span>\n                          <div className=\"flex items-center space-x-1 text-xs\">\n                            <span className=\"text-green-400\">\n                              {\n                                uncategorizedDevices.filter(\n                                  (d) => d.status === 'online'\n                                ).length\n                              }\n                            </span>\n                            <span className=\"text-slate-500\">/</span>\n                            <span className=\"text-slate-400\">\n                              {uncategorizedDevices.length}\n                            </span>\n                          </div>\n                        </div>\n                        <p className=\"truncate text-xs text-slate-500\">\n                          Устройства без категории\n                        </p>\n                      </div>\n                    </div>\n\n                    <div className=\"flex items-center space-x-1 opacity-0 transition-opacity group-hover:opacity-100\">\n                      <button\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          onAddDeviceToFolder('others');\n                        }}\n                        className=\"rounded p-1 text-slate-400 hover:bg-slate-600/50 hover:text-green-400\"\n                        title=\"Добавить устройство в эту папку\"\n                      >\n                        <Monitor className=\"h-3 w-3\" />\n                      </button>\n                    </div>\n                  </div>\n\n                  {/* Устройства в папке \"Иные\" */}\n                  {othersFolder.expanded && (\n                    <div className=\"mt-1\">\n                      {uncategorizedDevices.map((device) =>\n                        renderDevice(device, 2)\n                      )}\n                    </div>\n                  )}\n                </div>\n              );\n            })()}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2232, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2237, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/metrics-card.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { LucideIcon } from 'lucide-react';\r\nimport { Card } from './card';\r\n\r\ninterface MetricsCardProps {\r\n  title: string;\r\n  value: string | number;\r\n  icon: LucideIcon;\r\n  color: 'blue' | 'green' | 'yellow' | 'red' | 'purple' | 'indigo';\r\n  trend?: {\r\n    value: number;\r\n    isPositive: boolean;\r\n  };\r\n  loading?: boolean;\r\n}\r\n\r\nconst colorClasses = {\r\n  blue: 'text-blue-400 bg-blue-500/10',\r\n  green: 'text-green-400 bg-green-500/10',\r\n  yellow: 'text-yellow-400 bg-yellow-500/10',\r\n  red: 'text-red-400 bg-red-500/10',\r\n  purple: 'text-purple-400 bg-purple-500/10',\r\n  indigo: 'text-indigo-400 bg-indigo-500/10',\r\n};\r\n\r\nconst MetricsCard = React.memo<MetricsCardProps>(\r\n  ({ title, value, icon: Icon, color, trend, loading = false }) => {\r\n    return (\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.3 }}\r\n        whileHover={{ scale: 1.02 }}\r\n        whileTap={{ scale: 0.98 }}\r\n      >\r\n        <Card className=\"border-slate-700 bg-slate-800/50 transition-all duration-200 hover:bg-slate-800/70\">\r\n          <div className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                <div className={`rounded-lg p-2 ${colorClasses[color]}`}>\r\n                  <Icon className=\"h-5 w-5\" />\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-slate-400\">{title}</p>\r\n                  <div className=\"flex items-baseline space-x-2\">\r\n                    {loading ? (\r\n                      <div className=\"h-6 w-16 animate-pulse rounded bg-slate-700\" />\r\n                    ) : (\r\n                      <motion.p\r\n                        className=\"text-2xl font-bold text-white\"\r\n                        key={value} // Re-animate when value changes\r\n                        initial={{ scale: 1.1 }}\r\n                        animate={{ scale: 1 }}\r\n                        transition={{ duration: 0.2 }}\r\n                      >\r\n                        {value}\r\n                      </motion.p>\r\n                    )}\r\n\r\n                    {trend && !loading && (\r\n                      <motion.span\r\n                        initial={{ opacity: 0, x: -10 }}\r\n                        animate={{ opacity: 1, x: 0 }}\r\n                        className={`text-xs font-medium ${\r\n                          trend.isPositive ? 'text-green-400' : 'text-red-400'\r\n                        }`}\r\n                      >\r\n                        {trend.isPositive ? '+' : ''}\r\n                        {trend.value}%\r\n                      </motion.span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </motion.div>\r\n    );\r\n  }\r\n);\r\n\r\nMetricsCard.displayName = 'MetricsCard';\r\n\r\nexport { MetricsCard };\r\n"],"names":[],"mappings":";;;;;;;;AAAA;;;;;AAmBA,MAAM,eAAe;IACnB,MAAM;IACN,OAAO;IACP,QAAQ;IACR,KAAK;IACL,QAAQ;IACR,QAAQ;AACV;AAEA,MAAM,4BAAc,+XAAA,CAAA,UAAK,CAAC,IAAI,CAC5B,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,KAAK,EAAE;IAC1D,qBACE,waAAC,4RAAA,CAAA,SAAM,CAAC,GAAG;QACT,SAAS;YAAE,SAAS;YAAG,GAAG;QAAG;QAC7B,SAAS;YAAE,SAAS;YAAG,GAAG;QAAE;QAC5B,YAAY;YAAE,UAAU;QAAI;QAC5B,YAAY;YAAE,OAAO;QAAK;QAC1B,UAAU;YAAE,OAAO;QAAK;kBAExB,cAAA,waAAC,wJAAA,CAAA,OAAI;YAAC,WAAU;sBACd,cAAA,waAAC;gBAAI,WAAU;0BACb,cAAA,waAAC;oBAAI,WAAU;8BACb,cAAA,waAAC;wBAAI,WAAU;;0CACb,waAAC;gCAAI,WAAW,CAAC,eAAe,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;0CACrD,cAAA,waAAC;oCAAK,WAAU;;;;;;;;;;;0CAElB,waAAC;;kDACC,waAAC;wCAAE,WAAU;kDAAsC;;;;;;kDACnD,waAAC;wCAAI,WAAU;;4CACZ,wBACC,waAAC;gDAAI,WAAU;;;;;qEAEf,waAAC,4RAAA,CAAA,SAAM,CAAC,CAAC;gDACP,WAAU;gDAEV,SAAS;oDAAE,OAAO;gDAAI;gDACtB,SAAS;oDAAE,OAAO;gDAAE;gDACpB,YAAY;oDAAE,UAAU;gDAAI;0DAE3B;+CALI;;;;;4CASR,SAAS,CAAC,yBACT,waAAC,4RAAA,CAAA,SAAM,CAAC,IAAI;gDACV,SAAS;oDAAE,SAAS;oDAAG,GAAG,CAAC;gDAAG;gDAC9B,SAAS;oDAAE,SAAS;oDAAG,GAAG;gDAAE;gDAC5B,WAAW,CAAC,oBAAoB,EAC9B,MAAM,UAAU,GAAG,mBAAmB,eACvC,CAAC;;oDAED,MAAM,UAAU,GAAG,MAAM;oDACzB,MAAM,KAAK;oDAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWnC;AAGF,YAAY,WAAW,GAAG"}},
    {"offset": {"line": 2397, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2402, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/bandwidth-chart.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useNetworkStore } from '@/store/network-store';\r\nimport { BandwidthData } from '@/types/schemas';\r\n\r\ninterface BandwidthChartProps {\r\n  data?: BandwidthData[];\r\n}\r\n\r\nexport function BandwidthChart({ data }: BandwidthChartProps) {\r\n  const { bandwidthHistory } = useNetworkStore();\r\n  const [hoveredPoint, setHoveredPoint] = useState<number | null>(null);\r\n\r\n  const chartData = data || bandwidthHistory;\r\n  const maxValue = Math.max(\r\n    ...chartData.map((d) => Math.max(d.upload, d.download, d.total)),\r\n    1\r\n  );\r\n  const chartHeight = 200;\r\n  const chartWidth = 100; // percentage\r\n\r\n  const generatePath = (values: number[]) => {\r\n    const points = values.map((value, index) => {\r\n      const x = (index / Math.max(values.length - 1, 1)) * chartWidth;\r\n      const y = chartHeight - (value / maxValue) * chartHeight;\r\n      return `${x},${y}`;\r\n    });\r\n\r\n    if (points.length === 0) return '';\r\n    if (points.length === 1) return `M${points[0]} L${points[0]}`;\r\n\r\n    return `M${points.join(' L')}`;\r\n  };\r\n\r\n  const uploadPath = generatePath(chartData.map((d) => d.upload));\r\n  const downloadPath = generatePath(chartData.map((d) => d.download));\r\n  const totalPath = generatePath(chartData.map((d) => d.total));\r\n\r\n  const formatBandwidth = (value: number) => {\r\n    if (value >= 1000) {\r\n      return `${(value / 1000).toFixed(1)} Gbps`;\r\n    }\r\n    return `${value.toFixed(1)} Mbps`;\r\n  };\r\n\r\n  const currentData = chartData[chartData.length - 1] || {\r\n    upload: 0,\r\n    download: 0,\r\n    total: 0,\r\n    timestamp: new Date(),\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.5 }}\r\n      className=\"rounded-xl border border-slate-700/50 bg-slate-800/50 p-6 backdrop-blur-sm\"\r\n    >\r\n      {/* Header */}\r\n      <div className=\"mb-6 flex items-center justify-between\">\r\n        <div>\r\n          <h3 className=\"text-lg font-semibold text-white\">\r\n            Общий сетевой трафик\r\n          </h3>\r\n          <p className=\"mt-1 text-xs text-slate-400\">\r\n            📡 Суммарная полоса пропускания всех устройств сети\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-4 text-sm\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div className=\"h-3 w-3 rounded-full bg-blue-500\"></div>\r\n            <span className=\"text-slate-400\">Отправка</span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div className=\"h-3 w-3 rounded-full bg-green-500\"></div>\r\n            <span className=\"text-slate-400\">Загрузка</span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div className=\"h-3 w-3 rounded-full bg-purple-500\"></div>\r\n            <span className=\"text-slate-400\">Общий</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Chart */}\r\n      <div className=\"relative mb-6\" style={{ height: chartHeight }}>\r\n        <svg\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          viewBox={`0 0 ${chartWidth} ${chartHeight}`}\r\n          className=\"overflow-visible\"\r\n          preserveAspectRatio=\"none\"\r\n        >\r\n          {/* Grid lines */}\r\n          {[0, 0.25, 0.5, 0.75, 1].map((ratio) => (\r\n            <g key={ratio}>\r\n              <line\r\n                x1=\"0\"\r\n                y1={chartHeight * ratio}\r\n                x2={chartWidth}\r\n                y2={chartHeight * ratio}\r\n                stroke=\"#475569\"\r\n                strokeWidth=\"0.5\"\r\n                opacity=\"0.3\"\r\n              />\r\n              <text\r\n                x=\"-5\"\r\n                y={chartHeight * ratio + 3}\r\n                fill=\"#64748b\"\r\n                fontSize=\"10\"\r\n                textAnchor=\"end\"\r\n              >\r\n                {formatBandwidth(maxValue * (1 - ratio))}\r\n              </text>\r\n            </g>\r\n          ))}\r\n\r\n          {/* Chart lines */}\r\n          {chartData.length > 1 && (\r\n            <>\r\n              {/* Upload line */}\r\n              <motion.path\r\n                d={uploadPath}\r\n                fill=\"none\"\r\n                stroke=\"#3B82F6\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                initial={{ pathLength: 0 }}\r\n                animate={{ pathLength: 1 }}\r\n                transition={{ duration: 1, ease: 'easeInOut' }}\r\n                className=\"opacity-80\"\r\n              />\r\n\r\n              {/* Download line */}\r\n              <motion.path\r\n                d={downloadPath}\r\n                fill=\"none\"\r\n                stroke=\"#10B981\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                initial={{ pathLength: 0 }}\r\n                animate={{ pathLength: 1 }}\r\n                transition={{ duration: 1, delay: 0.2, ease: 'easeInOut' }}\r\n                className=\"opacity-80\"\r\n              />\r\n\r\n              {/* Total line */}\r\n              <motion.path\r\n                d={totalPath}\r\n                fill=\"none\"\r\n                stroke=\"#8B5CF6\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                initial={{ pathLength: 0 }}\r\n                animate={{ pathLength: 1 }}\r\n                transition={{ duration: 1, delay: 0.4, ease: 'easeInOut' }}\r\n                className=\"opacity-80\"\r\n              />\r\n            </>\r\n          )}\r\n\r\n          {/* Data points */}\r\n          {chartData.map((point, index) => {\r\n            const x = (index / Math.max(chartData.length - 1, 1)) * chartWidth;\r\n            const uploadY =\r\n              chartHeight - (point.upload / maxValue) * chartHeight;\r\n            const downloadY =\r\n              chartHeight - (point.download / maxValue) * chartHeight;\r\n            const totalY = chartHeight - (point.total / maxValue) * chartHeight;\r\n\r\n            return (\r\n              <g key={index}>\r\n                <motion.circle\r\n                  cx={x}\r\n                  cy={uploadY}\r\n                  r={hoveredPoint === index ? '4' : '3'}\r\n                  fill=\"#3B82F6\"\r\n                  className=\"cursor-pointer opacity-80\"\r\n                  initial={{ scale: 0 }}\r\n                  animate={{ scale: 1 }}\r\n                  transition={{ duration: 0.3, delay: index * 0.05 }}\r\n                  onMouseEnter={() => setHoveredPoint(index)}\r\n                  onMouseLeave={() => setHoveredPoint(null)}\r\n                />\r\n                <motion.circle\r\n                  cx={x}\r\n                  cy={downloadY}\r\n                  r={hoveredPoint === index ? '4' : '3'}\r\n                  fill=\"#10B981\"\r\n                  className=\"cursor-pointer opacity-80\"\r\n                  initial={{ scale: 0 }}\r\n                  animate={{ scale: 1 }}\r\n                  transition={{ duration: 0.3, delay: index * 0.05 + 0.1 }}\r\n                  onMouseEnter={() => setHoveredPoint(index)}\r\n                  onMouseLeave={() => setHoveredPoint(null)}\r\n                />\r\n                <motion.circle\r\n                  cx={x}\r\n                  cy={totalY}\r\n                  r={hoveredPoint === index ? '4' : '3'}\r\n                  fill=\"#8B5CF6\"\r\n                  className=\"cursor-pointer opacity-80\"\r\n                  initial={{ scale: 0 }}\r\n                  animate={{ scale: 1 }}\r\n                  transition={{ duration: 0.3, delay: index * 0.05 + 0.2 }}\r\n                  onMouseEnter={() => setHoveredPoint(index)}\r\n                  onMouseLeave={() => setHoveredPoint(null)}\r\n                />\r\n              </g>\r\n            );\r\n          })}\r\n        </svg>\r\n\r\n        {/* Hover tooltip */}\r\n        {hoveredPoint !== null && chartData[hoveredPoint] && (\r\n          <motion.div\r\n            initial={{ opacity: 0, scale: 0.8 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            exit={{ opacity: 0, scale: 0.8 }}\r\n            className=\"pointer-events-none absolute z-10 rounded-lg border border-slate-600 bg-slate-900/90 p-3 text-sm backdrop-blur-sm\"\r\n            style={{\r\n              left: `${(hoveredPoint / Math.max(chartData.length - 1, 1)) * 100}%`,\r\n              top: '10px',\r\n              transform: 'translateX(-50%)',\r\n            }}\r\n          >\r\n            <div className=\"space-y-1\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <div className=\"h-2 w-2 rounded-full bg-blue-500\"></div>\r\n                <span className=\"text-blue-400\">\r\n                  Отправка: {formatBandwidth(chartData[hoveredPoint].upload)}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <div className=\"h-2 w-2 rounded-full bg-green-500\"></div>\r\n                <span className=\"text-green-400\">\r\n                  Загрузка: {formatBandwidth(chartData[hoveredPoint].download)}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <div className=\"h-2 w-2 rounded-full bg-purple-500\"></div>\r\n                <span className=\"text-purple-400\">\r\n                  Общий: {formatBandwidth(chartData[hoveredPoint].total)}\r\n                </span>\r\n              </div>\r\n              <div className=\"mt-1 border-t border-slate-600 pt-1 text-xs text-slate-400\">\r\n                {new Date(\r\n                  chartData[hoveredPoint].timestamp\r\n                ).toLocaleTimeString()}\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Current Stats */}\r\n      <div className=\"grid grid-cols-3 gap-4 text-sm\">\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5, delay: 0.2 }}\r\n          className=\"rounded-lg bg-slate-700/30 p-3 text-center\"\r\n        >\r\n          <p className=\"mb-1 text-slate-400\">Текущая отправка</p>\r\n          <p className=\"text-lg font-medium text-blue-400\">\r\n            {formatBandwidth(currentData.upload)}\r\n          </p>\r\n          <div className=\"mt-1 text-xs text-slate-500\">\r\n            ↑ {((currentData.upload / Math.max(maxValue, 1)) * 100).toFixed(1)}%\r\n            от пика\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5, delay: 0.3 }}\r\n          className=\"rounded-lg bg-slate-700/30 p-3 text-center\"\r\n        >\r\n          <p className=\"mb-1 text-slate-400\">Текущая загрузка</p>\r\n          <p className=\"text-lg font-medium text-green-400\">\r\n            {formatBandwidth(currentData.download)}\r\n          </p>\r\n          <div className=\"mt-1 text-xs text-slate-500\">\r\n            ↓{' '}\r\n            {((currentData.download / Math.max(maxValue, 1)) * 100).toFixed(1)}%\r\n            от пика\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5, delay: 0.4 }}\r\n          className=\"rounded-lg bg-slate-700/30 p-3 text-center\"\r\n        >\r\n          <p className=\"mb-1 text-slate-400\">Общее использование</p>\r\n          <p className=\"text-lg font-medium text-purple-400\">\r\n            {formatBandwidth(currentData.total)}\r\n          </p>\r\n          <div className=\"mt-1 text-xs text-slate-500\">\r\n            ⚡ {((currentData.total / Math.max(maxValue, 1)) * 100).toFixed(1)}%\r\n            от пика\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n\r\n      {/* No data state */}\r\n      {chartData.length === 0 && (\r\n        <div className=\"py-8 text-center text-slate-400\">\r\n          <div className=\"mb-2 text-4xl\">📊</div>\r\n          <p>Нет данных о полосе пропускания</p>\r\n          <p className=\"mt-1 text-sm text-slate-500\">\r\n            Данные появятся после начала мониторинга\r\n          </p>\r\n        </div>\r\n      )}\r\n    </motion.div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;;AAAA;;;;;AAWO,SAAS,eAAe,EAAE,IAAI,EAAuB;IAC1D,MAAM,EAAE,gBAAgB,EAAE,GAAG,CAAA,GAAA,wJAAA,CAAA,kBAAe,AAAD;IAC3C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,+XAAA,CAAA,WAAQ,AAAD,EAAiB;IAEhE,MAAM,YAAY,QAAQ;IAC1B,MAAM,WAAW,KAAK,GAAG,IACpB,UAAU,GAAG,CAAC,CAAC,IAAM,KAAK,GAAG,CAAC,EAAE,MAAM,EAAE,EAAE,QAAQ,EAAE,EAAE,KAAK,IAC9D;IAEF,MAAM,cAAc;IACpB,MAAM,aAAa,KAAK,aAAa;IAErC,MAAM,eAAe,CAAC;QACpB,MAAM,SAAS,OAAO,GAAG,CAAC,CAAC,OAAO;YAChC,MAAM,IAAI,AAAC,QAAQ,KAAK,GAAG,CAAC,OAAO,MAAM,GAAG,GAAG,KAAM;YACrD,MAAM,IAAI,cAAc,AAAC,QAAQ,WAAY;YAC7C,OAAO,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;QACpB;QAEA,IAAI,OAAO,MAAM,KAAK,GAAG,OAAO;QAChC,IAAI,OAAO,MAAM,KAAK,GAAG,OAAO,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;QAE7D,OAAO,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC,MAAM,CAAC;IAChC;IAEA,MAAM,aAAa,aAAa,UAAU,GAAG,CAAC,CAAC,IAAM,EAAE,MAAM;IAC7D,MAAM,eAAe,aAAa,UAAU,GAAG,CAAC,CAAC,IAAM,EAAE,QAAQ;IACjE,MAAM,YAAY,aAAa,UAAU,GAAG,CAAC,CAAC,IAAM,EAAE,KAAK;IAE3D,MAAM,kBAAkB,CAAC;QACvB,IAAI,SAAS,MAAM;YACjB,OAAO,CAAC,EAAE,CAAC,QAAQ,IAAI,EAAE,OAAO,CAAC,GAAG,KAAK,CAAC;QAC5C;QACA,OAAO,CAAC,EAAE,MAAM,OAAO,CAAC,GAAG,KAAK,CAAC;IACnC;IAEA,MAAM,cAAc,SAAS,CAAC,UAAU,MAAM,GAAG,EAAE,IAAI;QACrD,QAAQ;QACR,UAAU;QACV,OAAO;QACP,WAAW,IAAI;IACjB;IAEA,qBACE,waAAC,4RAAA,CAAA,SAAM,CAAC,GAAG;QACT,SAAS;YAAE,SAAS;YAAG,GAAG;QAAG;QAC7B,SAAS;YAAE,SAAS;YAAG,GAAG;QAAE;QAC5B,YAAY;YAAE,UAAU;QAAI;QAC5B,WAAU;;0BAGV,waAAC;gBAAI,WAAU;;kCACb,waAAC;;0CACC,waAAC;gCAAG,WAAU;0CAAmC;;;;;;0CAGjD,waAAC;gCAAE,WAAU;0CAA8B;;;;;;;;;;;;kCAI7C,waAAC;wBAAI,WAAU;;0CACb,waAAC;gCAAI,WAAU;;kDACb,waAAC;wCAAI,WAAU;;;;;;kDACf,waAAC;wCAAK,WAAU;kDAAiB;;;;;;;;;;;;0CAEnC,waAAC;gCAAI,WAAU;;kDACb,waAAC;wCAAI,WAAU;;;;;;kDACf,waAAC;wCAAK,WAAU;kDAAiB;;;;;;;;;;;;0CAEnC,waAAC;gCAAI,WAAU;;kDACb,waAAC;wCAAI,WAAU;;;;;;kDACf,waAAC;wCAAK,WAAU;kDAAiB;;;;;;;;;;;;;;;;;;;;;;;;0BAMvC,waAAC;gBAAI,WAAU;gBAAgB,OAAO;oBAAE,QAAQ;gBAAY;;kCAC1D,waAAC;wBACC,OAAM;wBACN,QAAO;wBACP,SAAS,CAAC,IAAI,EAAE,WAAW,CAAC,EAAE,YAAY,CAAC;wBAC3C,WAAU;wBACV,qBAAoB;;4BAGnB;gCAAC;gCAAG;gCAAM;gCAAK;gCAAM;6BAAE,CAAC,GAAG,CAAC,CAAC,sBAC5B,waAAC;;sDACC,waAAC;4CACC,IAAG;4CACH,IAAI,cAAc;4CAClB,IAAI;4CACJ,IAAI,cAAc;4CAClB,QAAO;4CACP,aAAY;4CACZ,SAAQ;;;;;;sDAEV,waAAC;4CACC,GAAE;4CACF,GAAG,cAAc,QAAQ;4CACzB,MAAK;4CACL,UAAS;4CACT,YAAW;sDAEV,gBAAgB,WAAW,CAAC,IAAI,KAAK;;;;;;;mCAjBlC;;;;;4BAuBT,UAAU,MAAM,GAAG,mBAClB;;kDAEE,waAAC,4RAAA,CAAA,SAAM,CAAC,IAAI;wCACV,GAAG;wCACH,MAAK;wCACL,QAAO;wCACP,aAAY;wCACZ,eAAc;wCACd,gBAAe;wCACf,SAAS;4CAAE,YAAY;wCAAE;wCACzB,SAAS;4CAAE,YAAY;wCAAE;wCACzB,YAAY;4CAAE,UAAU;4CAAG,MAAM;wCAAY;wCAC7C,WAAU;;;;;;kDAIZ,waAAC,4RAAA,CAAA,SAAM,CAAC,IAAI;wCACV,GAAG;wCACH,MAAK;wCACL,QAAO;wCACP,aAAY;wCACZ,eAAc;wCACd,gBAAe;wCACf,SAAS;4CAAE,YAAY;wCAAE;wCACzB,SAAS;4CAAE,YAAY;wCAAE;wCACzB,YAAY;4CAAE,UAAU;4CAAG,OAAO;4CAAK,MAAM;wCAAY;wCACzD,WAAU;;;;;;kDAIZ,waAAC,4RAAA,CAAA,SAAM,CAAC,IAAI;wCACV,GAAG;wCACH,MAAK;wCACL,QAAO;wCACP,aAAY;wCACZ,eAAc;wCACd,gBAAe;wCACf,SAAS;4CAAE,YAAY;wCAAE;wCACzB,SAAS;4CAAE,YAAY;wCAAE;wCACzB,YAAY;4CAAE,UAAU;4CAAG,OAAO;4CAAK,MAAM;wCAAY;wCACzD,WAAU;;;;;;;;4BAMf,UAAU,GAAG,CAAC,CAAC,OAAO;gCACrB,MAAM,IAAI,AAAC,QAAQ,KAAK,GAAG,CAAC,UAAU,MAAM,GAAG,GAAG,KAAM;gCACxD,MAAM,UACJ,cAAc,AAAC,MAAM,MAAM,GAAG,WAAY;gCAC5C,MAAM,YACJ,cAAc,AAAC,MAAM,QAAQ,GAAG,WAAY;gCAC9C,MAAM,SAAS,cAAc,AAAC,MAAM,KAAK,GAAG,WAAY;gCAExD,qBACE,waAAC;;sDACC,waAAC,4RAAA,CAAA,SAAM,CAAC,MAAM;4CACZ,IAAI;4CACJ,IAAI;4CACJ,GAAG,iBAAiB,QAAQ,MAAM;4CAClC,MAAK;4CACL,WAAU;4CACV,SAAS;gDAAE,OAAO;4CAAE;4CACpB,SAAS;gDAAE,OAAO;4CAAE;4CACpB,YAAY;gDAAE,UAAU;gDAAK,OAAO,QAAQ;4CAAK;4CACjD,cAAc,IAAM,gBAAgB;4CACpC,cAAc,IAAM,gBAAgB;;;;;;sDAEtC,waAAC,4RAAA,CAAA,SAAM,CAAC,MAAM;4CACZ,IAAI;4CACJ,IAAI;4CACJ,GAAG,iBAAiB,QAAQ,MAAM;4CAClC,MAAK;4CACL,WAAU;4CACV,SAAS;gDAAE,OAAO;4CAAE;4CACpB,SAAS;gDAAE,OAAO;4CAAE;4CACpB,YAAY;gDAAE,UAAU;gDAAK,OAAO,QAAQ,OAAO;4CAAI;4CACvD,cAAc,IAAM,gBAAgB;4CACpC,cAAc,IAAM,gBAAgB;;;;;;sDAEtC,waAAC,4RAAA,CAAA,SAAM,CAAC,MAAM;4CACZ,IAAI;4CACJ,IAAI;4CACJ,GAAG,iBAAiB,QAAQ,MAAM;4CAClC,MAAK;4CACL,WAAU;4CACV,SAAS;gDAAE,OAAO;4CAAE;4CACpB,SAAS;gDAAE,OAAO;4CAAE;4CACpB,YAAY;gDAAE,UAAU;gDAAK,OAAO,QAAQ,OAAO;4CAAI;4CACvD,cAAc,IAAM,gBAAgB;4CACpC,cAAc,IAAM,gBAAgB;;;;;;;mCAnChC;;;;;4BAuCZ;;;;;;;oBAID,iBAAiB,QAAQ,SAAS,CAAC,aAAa,kBAC/C,waAAC,4RAAA,CAAA,SAAM,CAAC,GAAG;wBACT,SAAS;4BAAE,SAAS;4BAAG,OAAO;wBAAI;wBAClC,SAAS;4BAAE,SAAS;4BAAG,OAAO;wBAAE;wBAChC,MAAM;4BAAE,SAAS;4BAAG,OAAO;wBAAI;wBAC/B,WAAU;wBACV,OAAO;4BACL,MAAM,CAAC,EAAE,AAAC,eAAe,KAAK,GAAG,CAAC,UAAU,MAAM,GAAG,GAAG,KAAM,IAAI,CAAC,CAAC;4BACpE,KAAK;4BACL,WAAW;wBACb;kCAEA,cAAA,waAAC;4BAAI,WAAU;;8CACb,waAAC;oCAAI,WAAU;;sDACb,waAAC;4CAAI,WAAU;;;;;;sDACf,waAAC;4CAAK,WAAU;;gDAAgB;gDACnB,gBAAgB,SAAS,CAAC,aAAa,CAAC,MAAM;;;;;;;;;;;;;8CAG7D,waAAC;oCAAI,WAAU;;sDACb,waAAC;4CAAI,WAAU;;;;;;sDACf,waAAC;4CAAK,WAAU;;gDAAiB;gDACpB,gBAAgB,SAAS,CAAC,aAAa,CAAC,QAAQ;;;;;;;;;;;;;8CAG/D,waAAC;oCAAI,WAAU;;sDACb,waAAC;4CAAI,WAAU;;;;;;sDACf,waAAC;4CAAK,WAAU;;gDAAkB;gDACxB,gBAAgB,SAAS,CAAC,aAAa,CAAC,KAAK;;;;;;;;;;;;;8CAGzD,waAAC;oCAAI,WAAU;8CACZ,IAAI,KACH,SAAS,CAAC,aAAa,CAAC,SAAS,EACjC,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;0BAQ9B,waAAC;gBAAI,WAAU;;kCACb,waAAC,4RAAA,CAAA,SAAM,CAAC,GAAG;wBACT,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAG;wBAC7B,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAE;wBAC5B,YAAY;4BAAE,UAAU;4BAAK,OAAO;wBAAI;wBACxC,WAAU;;0CAEV,waAAC;gCAAE,WAAU;0CAAsB;;;;;;0CACnC,waAAC;gCAAE,WAAU;0CACV,gBAAgB,YAAY,MAAM;;;;;;0CAErC,waAAC;gCAAI,WAAU;;oCAA8B;oCACxC,CAAC,AAAC,YAAY,MAAM,GAAG,KAAK,GAAG,CAAC,UAAU,KAAM,GAAG,EAAE,OAAO,CAAC;oCAAG;;;;;;;;;;;;;kCAKvE,waAAC,4RAAA,CAAA,SAAM,CAAC,GAAG;wBACT,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAG;wBAC7B,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAE;wBAC5B,YAAY;4BAAE,UAAU;4BAAK,OAAO;wBAAI;wBACxC,WAAU;;0CAEV,waAAC;gCAAE,WAAU;0CAAsB;;;;;;0CACnC,waAAC;gCAAE,WAAU;0CACV,gBAAgB,YAAY,QAAQ;;;;;;0CAEvC,waAAC;gCAAI,WAAU;;oCAA8B;oCACzC;oCACD,CAAC,AAAC,YAAY,QAAQ,GAAG,KAAK,GAAG,CAAC,UAAU,KAAM,GAAG,EAAE,OAAO,CAAC;oCAAG;;;;;;;;;;;;;kCAKvE,waAAC,4RAAA,CAAA,SAAM,CAAC,GAAG;wBACT,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAG;wBAC7B,SAAS;4BAAE,SAAS;4BAAG,GAAG;wBAAE;wBAC5B,YAAY;4BAAE,UAAU;4BAAK,OAAO;wBAAI;wBACxC,WAAU;;0CAEV,waAAC;gCAAE,WAAU;0CAAsB;;;;;;0CACnC,waAAC;gCAAE,WAAU;0CACV,gBAAgB,YAAY,KAAK;;;;;;0CAEpC,waAAC;gCAAI,WAAU;;oCAA8B;oCACxC,CAAC,AAAC,YAAY,KAAK,GAAG,KAAK,GAAG,CAAC,UAAU,KAAM,GAAG,EAAE,OAAO,CAAC;oCAAG;;;;;;;;;;;;;;;;;;;YAOvE,UAAU,MAAM,KAAK,mBACpB,waAAC;gBAAI,WAAU;;kCACb,waAAC;wBAAI,WAAU;kCAAgB;;;;;;kCAC/B,waAAC;kCAAE;;;;;;kCACH,waAAC;wBAAE,WAAU;kCAA8B;;;;;;;;;;;;;;;;;;AAOrD"}},
    {"offset": {"line": 3115, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3120, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { cva, type VariantProps } from 'class-variance-authority';\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst badgeVariants = cva(\r\n  'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: 'border-transparent bg-primary text-primary-foreground hover:bg-primary/80',\r\n        secondary: 'border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80',\r\n        destructive: 'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',\r\n        outline: 'text-foreground',\r\n        success: 'border-transparent bg-green-500 text-white hover:bg-green-600',\r\n        warning: 'border-transparent bg-yellow-500 text-white hover:bg-yellow-600',\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: 'default',\r\n    },\r\n  }\r\n);\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  );\r\n}\r\n\r\nexport { Badge, badgeVariants }; "],"names":[],"mappings":";;;;;;;;;;;AAIA,MAAM,gBAAgB,CAAA,GAAA,2OAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,WAAW;YACX,aAAa;YACb,SAAS;YACT,SAAS;YACT,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,waAAC;QAAI,WAAW,CAAA,GAAA,2IAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE"}},
    {"offset": {"line": 3159, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3164, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/dashboard/devices-section.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { useNetworkStore } from '@/store/network-store';\nimport { motion } from 'framer-motion';\nimport {\n  Search,\n  Filter,\n  Plus,\n  Grid3X3,\n  List,\n  SortAsc,\n  SortDesc,\n  Network,\n  Server,\n  Monitor,\n  Printer,\n  Smartphone,\n  Shield,\n  Router,\n  Wifi,\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\n\nimport { Card } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { NetworkDevice } from '@/types/schemas';\n\ntype SortField =\n  | 'name'\n  | 'ip'\n  | 'status'\n  | 'responseTime'\n  | 'uptime'\n  | 'lastSeen';\ntype ViewMode = 'grid' | 'list';\n\nconst deviceIcons = {\n  router: Router,\n  switch: Network,\n  server: Server,\n  workstation: Monitor,\n  printer: Printer,\n  mobile: Smartphone,\n  firewall: Shield,\n  access_point: Wifi,\n};\n\nconst statusColors = {\n  online: 'bg-green-500',\n  offline: 'bg-red-500',\n  warning: 'bg-yellow-500',\n};\n\nconst statusBadgeColors = {\n  online: 'bg-green-500/20 text-green-400 border-green-500/20',\n  offline: 'bg-red-500/20 text-red-400 border-red-500/20',\n  warning: 'bg-yellow-500/20 text-yellow-400 border-yellow-500/20',\n};\n\nconst DeviceCard = React.memo<{\n  device: NetworkDevice;\n  onEdit: (id: string) => void;\n  onDelete: (id: string) => void;\n}>(({ device, onEdit, onDelete }) => {\n  const Icon = useMemo(\n    () => deviceIcons[device.type] || Network,\n    [device.type]\n  );\n\n  return (\n    <motion.div\n      layout\n      initial={{ opacity: 0, scale: 0.9 }}\n      animate={{ opacity: 1, scale: 1 }}\n      exit={{ opacity: 0, scale: 0.9 }}\n      transition={{ duration: 0.2 }}\n    >\n      <Card className=\"group cursor-pointer border-slate-700 bg-slate-800/50 transition-all duration-200 hover:bg-slate-800/70\">\n        <div className=\"p-4\">\n          {/* Header */}\n          <div className=\"mb-3 flex items-start justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"rounded-lg bg-slate-700/50 p-2\">\n                <Icon className=\"h-5 w-5 text-blue-400\" />\n              </div>\n              <div>\n                <h4 className=\"truncate font-medium text-white\">\n                  {device.name}\n                </h4>\n                <p className=\"text-sm text-slate-400\">{device.ip}</p>\n              </div>\n            </div>\n            <Badge className={statusBadgeColors[device.status]}>\n              {device.status}\n            </Badge>\n          </div>\n\n          {/* Info */}\n          <div className=\"space-y-2\">\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-slate-400\">Время отклика</span>\n              <span className=\"text-white\">{device.responseTime}ms</span>\n            </div>\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-slate-400\">Время работы</span>\n              <span className=\"text-white\">{device.uptime}%</span>\n            </div>\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-slate-400\">Производитель</span>\n              <span className=\"text-white\">{device.vendor || 'N/A'}</span>\n            </div>\n            {device.location && (\n              <div className=\"flex justify-between text-sm\">\n                <span className=\"text-slate-400\">Локация</span>\n                <span className=\"truncate text-white\">{device.location}</span>\n              </div>\n            )}\n          </div>\n\n          {/* Actions */}\n          <div className=\"mt-4 flex justify-end space-x-2 opacity-0 transition-opacity group-hover:opacity-100\">\n            <Button\n              size=\"sm\"\n              variant=\"ghost\"\n              onClick={() => onEdit(device.id)}\n              className=\"text-blue-400 hover:bg-blue-500/10 hover:text-blue-300\"\n            >\n              Изменить\n            </Button>\n            <Button\n              size=\"sm\"\n              variant=\"ghost\"\n              onClick={() => onDelete(device.id)}\n              className=\"text-red-400 hover:bg-red-500/10 hover:text-red-300\"\n            >\n              Удалить\n            </Button>\n          </div>\n        </div>\n      </Card>\n    </motion.div>\n  );\n});\n\nDeviceCard.displayName = 'DeviceCard';\n\nconst DeviceListRow = React.memo<{\n  device: NetworkDevice;\n  onEdit: (id: string) => void;\n  onDelete: (id: string) => void;\n}>(({ device, onEdit, onDelete }) => {\n  const Icon = useMemo(\n    () => deviceIcons[device.type] || Network,\n    [device.type]\n  );\n\n  return (\n    <motion.div\n      layout\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      exit={{ opacity: 0, y: -20 }}\n      transition={{ duration: 0.2 }}\n    >\n      <Card className=\"group border-slate-700 bg-slate-800/50 transition-all duration-200 hover:bg-slate-800/70\">\n        <div className=\"p-4\">\n          <div className=\"grid grid-cols-6 items-center gap-4\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"rounded-lg bg-slate-700/50 p-2\">\n                <Icon className=\"h-4 w-4 text-blue-400\" />\n              </div>\n              <div>\n                <h4 className=\"truncate font-medium text-white\">\n                  {device.name}\n                </h4>\n                <p className=\"text-sm text-slate-400\">{device.type}</p>\n              </div>\n            </div>\n\n            <div className=\"text-sm\">\n              <p className=\"text-white\">{device.ip}</p>\n              <p className=\"text-slate-400\">{device.location || 'N/A'}</p>\n            </div>\n\n            <div className=\"flex items-center\">\n              <Badge className={statusBadgeColors[device.status]}>\n                {device.status}\n              </Badge>\n            </div>\n\n            <div className=\"text-center text-sm\">\n              <p className=\"text-white\">{device.responseTime}ms</p>\n              <p className=\"text-slate-400\">отклик</p>\n            </div>\n\n            <div className=\"text-center text-sm\">\n              <p className=\"text-white\">{device.uptime}%</p>\n              <p className=\"text-slate-400\">время работы</p>\n            </div>\n\n            <div className=\"flex justify-end space-x-2 opacity-0 transition-opacity group-hover:opacity-100\">\n              <Button\n                size=\"sm\"\n                variant=\"ghost\"\n                onClick={() => onEdit(device.id)}\n                className=\"text-blue-400 hover:bg-blue-500/10 hover:text-blue-300\"\n              >\n                Изменить\n              </Button>\n              <Button\n                size=\"sm\"\n                variant=\"ghost\"\n                onClick={() => onDelete(device.id)}\n                className=\"text-red-400 hover:bg-red-500/10 hover:text-red-300\"\n              >\n                Удалить\n              </Button>\n            </div>\n          </div>\n        </div>\n      </Card>\n    </motion.div>\n  );\n});\n\nDeviceListRow.displayName = 'DeviceListRow';\n\ninterface DevicesSectionProps {\n  onAddDevice?: () => void;\n  onEditDevice?: (deviceId: string) => void;\n  onDeleteDevice?: (deviceId: string) => void;\n}\n\nexport function DevicesSection({\n  onAddDevice,\n  onEditDevice,\n  onDeleteDevice,\n}: DevicesSectionProps = {}) {\n  const { devices, selectedFolderId, deleteDevice, folders } =\n    useNetworkStore();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState<string>('all');\n  const [typeFilter, setTypeFilter] = useState<string>('all');\n  const [sortField, setSortField] = useState<SortField>('name');\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\n  const [viewMode, setViewMode] = useState<ViewMode>('grid');\n\n  // Filter devices\n  const filteredDevices = devices.filter((device) => {\n    const matchesSearch =\n      device.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      device.ip.includes(searchTerm) ||\n      (device.location &&\n        device.location.toLowerCase().includes(searchTerm.toLowerCase()));\n\n    const matchesStatus =\n      statusFilter === 'all' || device.status === statusFilter;\n    const matchesType = typeFilter === 'all' || device.type === typeFilter;\n\n    // Исправленная логика фильтрации по папкам и устройствам\n    let matchesFolder = true;\n    if (selectedFolderId && selectedFolderId !== 'root') {\n      // Проверяем, не выбрано ли конкретное устройство\n      const isDeviceSelected = devices.some((d) => d.id === selectedFolderId);\n\n      if (isDeviceSelected) {\n        // Если выбрано конкретное устройство, показываем только его\n        matchesFolder = device.id === selectedFolderId;\n      } else if (selectedFolderId === 'others') {\n        // Если выбрана папка \"Иные\", показываем устройства без папки или с folderId = 'root'\n        matchesFolder = !device.folderId || device.folderId === 'root';\n      } else {\n        // Для конкретной папки показываем только устройства этой папки\n        matchesFolder = device.folderId === selectedFolderId;\n      }\n    } else {\n      // Для корневой папки показываем ВСЕ устройства (включая из вложенных папок)\n      // Это позволяет видеть все устройства сети, как на топологии\n      matchesFolder = true;\n    }\n\n    return matchesSearch && matchesStatus && matchesType && matchesFolder;\n  });\n\n  // Sort devices\n  const sortedDevices = [...filteredDevices].sort((a, b) => {\n    let aValue: any = a[sortField];\n    let bValue: any = b[sortField];\n\n    if (sortField === 'lastSeen') {\n      aValue = new Date(aValue).getTime();\n      bValue = new Date(bValue).getTime();\n    }\n\n    if (typeof aValue === 'string') {\n      aValue = aValue.toLowerCase();\n      bValue = bValue.toLowerCase();\n    }\n\n    if (aValue < bValue) return sortDirection === 'asc' ? -1 : 1;\n    if (aValue > bValue) return sortDirection === 'asc' ? 1 : -1;\n    return 0;\n  });\n\n  const handleSort = (field: SortField) => {\n    if (sortField === field) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortField(field);\n      setSortDirection('asc');\n    }\n  };\n\n  // Функция для получения названия папки или устройства\n  const getFolderName = (folderId: string): string => {\n    if (!folderId || folderId === 'root') return 'Все устройства';\n    if (folderId === 'others') return 'Иные';\n\n    // Проверяем, не является ли это устройством\n    const device = devices.find((d) => d.id === folderId);\n    if (device) {\n      return `Устройство: ${device.name}`;\n    }\n\n    const findFolder = (folders: any[]): any => {\n      for (const folder of folders) {\n        if (folder.id === folderId) return folder;\n        if (folder.children) {\n          const found = findFolder(folder.children);\n          if (found) return found;\n        }\n      }\n      return null;\n    };\n\n    const folder = findFolder(folders);\n    return folder ? folder.name : 'Неизвестная папка';\n  };\n\n  const deviceTypes = Array.from(new Set(devices.map((d) => d.type)));\n  const onlineCount = filteredDevices.filter(\n    (d) => d.status === 'online'\n  ).length;\n  const offlineCount = filteredDevices.filter(\n    (d) => d.status === 'offline'\n  ).length;\n  const warningCount = filteredDevices.filter(\n    (d) => d.status === 'warning'\n  ).length;\n\n  const handleAddDevice = () => {\n    if (onAddDevice) {\n      onAddDevice();\n    } else {\n      alert(\n        'Функция добавления устройства будет реализована в следующей версии'\n      );\n    }\n  };\n\n  const handleEditDevice = (deviceId: string) => {\n    if (onEditDevice) {\n      onEditDevice(deviceId);\n    } else {\n      const device = devices.find((d) => d.id === deviceId);\n      if (device) {\n        alert(\n          `Редактирование устройства: ${device.name}\\nIP: ${device.ip}\\nСтатус: ${device.status}`\n        );\n      }\n    }\n  };\n\n  const handleDeleteDevice = (deviceId: string) => {\n    if (onDeleteDevice) {\n      onDeleteDevice(deviceId);\n    } else {\n      const device = devices.find((d) => d.id === deviceId);\n      if (\n        device &&\n        confirm(`Вы уверены, что хотите удалить устройство \"${device.name}\"?`)\n      ) {\n        deleteDevice(deviceId);\n        alert('Устройство успешно удалено');\n      }\n    }\n  };\n\n  return (\n    <Card className=\"border-slate-700 bg-slate-800/50\">\n      <div className=\"p-6\">\n        {/* Header */}\n        <div className=\"mb-6 flex items-center justify-between\">\n          <div>\n            <h3 className=\"text-lg font-semibold text-white\">\n              Сетевые устройства\n            </h3>\n            <p className=\"mb-2 text-sm text-blue-400\">\n              {getFolderName(selectedFolderId)} • {filteredDevices.length} из{' '}\n              {devices.length} устройств\n            </p>\n            <div className=\"mt-1 flex items-center space-x-4 text-sm\">\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"h-3 w-3 rounded-full bg-green-500\"></div>\n                <span className=\"text-slate-400\">Онлайн: {onlineCount}</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"h-3 w-3 rounded-full bg-red-500\"></div>\n                <span className=\"text-slate-400\">Офлайн: {offlineCount}</span>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <div className=\"h-3 w-3 rounded-full bg-yellow-500\"></div>\n                <span className=\"text-slate-400\">\n                  Предупреждения: {warningCount}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-2\">\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={() => setViewMode(viewMode === 'grid' ? 'list' : 'grid')}\n              className=\"text-slate-400 hover:bg-slate-700/50 hover:text-white\"\n            >\n              {viewMode === 'grid' ? (\n                <List className=\"h-5 w-5\" />\n              ) : (\n                <Grid3X3 className=\"h-5 w-5\" />\n              )}\n            </Button>\n            <Button\n              onClick={handleAddDevice}\n              className=\"bg-blue-600 hover:bg-blue-700\"\n            >\n              <Plus className=\"mr-2 h-4 w-4\" />\n              Добавить устройство\n            </Button>\n          </div>\n        </div>\n\n        {/* Filters and Search */}\n        <div className=\"mb-6 grid grid-cols-1 gap-4 md:grid-cols-4\">\n          <div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 transform text-slate-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Поиск устройств...\"\n              value={searchTerm}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setSearchTerm(e.target.value)\n              }\n              className=\"w-full rounded-lg border border-slate-600/50 bg-slate-700/50 py-2 pl-10 pr-4 text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-blue-500/50\"\n            />\n          </div>\n\n          <select\n            value={statusFilter}\n            onChange={(e) => setStatusFilter(e.target.value)}\n            className=\"rounded-lg border border-slate-600/50 bg-slate-700/50 px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500/50\"\n          >\n            <option value=\"all\">Все статусы</option>\n            <option value=\"online\">Онлайн</option>\n            <option value=\"offline\">Офлайн</option>\n            <option value=\"warning\">Предупреждения</option>\n          </select>\n\n          <select\n            value={typeFilter}\n            onChange={(e) => setTypeFilter(e.target.value)}\n            className=\"rounded-lg border border-slate-600/50 bg-slate-700/50 px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500/50\"\n          >\n            <option value=\"all\">Все типы</option>\n            {deviceTypes.map((type) => (\n              <option key={type} value={type}>\n                {type.charAt(0).toUpperCase() + type.slice(1)}\n              </option>\n            ))}\n          </select>\n\n          <div className=\"flex items-center space-x-2\">\n            <select\n              value={sortField}\n              onChange={(e) => setSortField(e.target.value as SortField)}\n              className=\"flex-1 rounded-lg border border-slate-600/50 bg-slate-700/50 px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500/50\"\n            >\n              <option value=\"name\">Имя</option>\n              <option value=\"ip\">IP адрес</option>\n              <option value=\"status\">Статус</option>\n              <option value=\"responseTime\">Время отклика</option>\n              <option value=\"uptime\">Время работы</option>\n              <option value=\"lastSeen\">Последний раз онлайн</option>\n            </select>\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={() =>\n                setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc')\n              }\n              className=\"text-slate-400 hover:bg-slate-700/50 hover:text-white\"\n            >\n              {sortDirection === 'asc' ? (\n                <SortAsc className=\"h-4 w-4\" />\n              ) : (\n                <SortDesc className=\"h-4 w-4\" />\n              )}\n            </Button>\n          </div>\n        </div>\n\n        {/* Device Grid/List */}\n        <div className=\"space-y-4\">\n          {viewMode === 'grid' ? (\n            <motion.div\n              layout\n              className=\"grid grid-cols-1 gap-4 md:grid-cols-2 xl:grid-cols-3 2xl:grid-cols-4\"\n            >\n              {sortedDevices.map((device) => (\n                <DeviceCard\n                  key={device.id}\n                  device={device}\n                  onEdit={handleEditDevice}\n                  onDelete={handleDeleteDevice}\n                />\n              ))}\n            </motion.div>\n          ) : (\n            <motion.div layout className=\"space-y-2\">\n              {sortedDevices.map((device) => (\n                <DeviceListRow\n                  key={device.id}\n                  device={device}\n                  onEdit={handleEditDevice}\n                  onDelete={handleDeleteDevice}\n                />\n              ))}\n            </motion.div>\n          )}\n\n          {sortedDevices.length === 0 && (\n            <div className=\"py-12 text-center\">\n              <div className=\"mb-2 text-lg text-slate-400\">\n                Устройства не найдены\n              </div>\n              <div className=\"text-slate-500\">\n                Попробуйте изменить фильтры поиска\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </Card>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4274, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4279, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/alerts-panel.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { useNetworkStore } from '@/store/network-store';\r\nimport { AlertMessage } from '@/types/schemas';\r\nimport {\r\n  AlertTriangle,\r\n  Info,\r\n  XCircle,\r\n  CheckCircle,\r\n  Clock,\r\n  Bell,\r\n  X,\r\n  Trash2,\r\n} from 'lucide-react';\r\nimport { Card } from '@/components/ui/card';\r\nimport { Button } from '@/components/ui/button';\r\nimport { Badge } from '@/components/ui/badge';\r\nimport { formatTimeAgo, formatTimeDetailed } from '@/lib/utils';\r\n\r\nconst alertIcons = {\r\n  critical: XCircle,\r\n  warning: AlertTriangle,\r\n  info: Info,\r\n  error: XCircle,\r\n};\r\n\r\nconst alertColors = {\r\n  critical: 'text-red-400 bg-red-500/10 border-red-500/20',\r\n  warning: 'text-yellow-400 bg-yellow-500/10 border-yellow-500/20',\r\n  info: 'text-blue-400 bg-blue-500/10 border-blue-500/20',\r\n  error: 'text-red-400 bg-red-500/10 border-red-500/20',\r\n};\r\n\r\nconst alertBorderColors = {\r\n  critical: 'border-l-red-500',\r\n  warning: 'border-l-yellow-500',\r\n  info: 'border-l-blue-500',\r\n  error: 'border-l-red-500',\r\n};\r\n\r\nexport function AlertsPanel() {\r\n  const { alerts, markAlertResolved, clearAlerts } = useNetworkStore();\r\n\r\n  const recentAlerts = alerts.slice(0, 10);\r\n  const unresolvedCount = alerts.filter((alert) => !alert.resolved).length;\r\n  const criticalCount = alerts.filter(\r\n    (alert) => alert.type === 'critical' && !alert.resolved\r\n  ).length;\r\n  const totalAlerts = alerts.length;\r\n\r\n  const handleResolveAlert = (alertId: string) => {\r\n    markAlertResolved(alertId);\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.5 }}\r\n      className=\"rounded-xl border border-slate-700/50 bg-slate-800/50 backdrop-blur-sm\"\r\n    >\r\n      <div className=\"p-6\">\r\n        {/* Header */}\r\n        <div className=\"mb-6 flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <div className=\"rounded-lg bg-slate-700/50 p-2\">\r\n              <Bell className=\"h-5 w-5 text-blue-400\" />\r\n            </div>\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-white\">Уведомления</h3>\r\n              <div className=\"mt-1 flex items-center space-x-3\">\r\n                <div className=\"flex items-center space-x-1\">\r\n                  <div className=\"h-2 w-2 animate-pulse rounded-full bg-red-500\"></div>\r\n                  <span className=\"text-xs text-slate-400\">Live</span>\r\n                </div>\r\n                {unresolvedCount > 0 && (\r\n                  <div className=\"flex items-center space-x-1 rounded-full border border-red-500/20 bg-red-500/20 px-2 py-1\">\r\n                    <span className=\"text-xs font-medium text-red-400\">\r\n                      {unresolvedCount} активных\r\n                    </span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {alerts.length > 0 && (\r\n            <button\r\n              onClick={clearAlerts}\r\n              className=\"flex items-center space-x-2 rounded-lg px-3 py-2 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-white\"\r\n            >\r\n              <Trash2 className=\"h-4 w-4\" />\r\n              <span className=\"text-sm\">Очистить</span>\r\n            </button>\r\n          )}\r\n        </div>\r\n\r\n        {/* Statistics */}\r\n        <div className=\"mb-6 grid grid-cols-3 gap-4\">\r\n          <motion.div\r\n            initial={{ opacity: 0, scale: 0.9 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            transition={{ duration: 0.3, delay: 0.1 }}\r\n            className=\"rounded-lg bg-slate-700/30 p-3 text-center\"\r\n          >\r\n            <div className=\"text-2xl font-bold text-white\">{totalAlerts}</div>\r\n            <div className=\"text-xs text-slate-400\">Всего</div>\r\n          </motion.div>\r\n\r\n          <motion.div\r\n            initial={{ opacity: 0, scale: 0.9 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            transition={{ duration: 0.3, delay: 0.2 }}\r\n            className=\"rounded-lg bg-slate-700/30 p-3 text-center\"\r\n          >\r\n            <div className=\"text-2xl font-bold text-red-400\">\r\n              {criticalCount}\r\n            </div>\r\n            <div className=\"text-xs text-slate-400\">Критические</div>\r\n          </motion.div>\r\n\r\n          <motion.div\r\n            initial={{ opacity: 0, scale: 0.9 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            transition={{ duration: 0.3, delay: 0.3 }}\r\n            className=\"rounded-lg bg-slate-700/30 p-3 text-center\"\r\n          >\r\n            <div className=\"text-2xl font-bold text-green-400\">\r\n              {totalAlerts - unresolvedCount}\r\n            </div>\r\n            <div className=\"text-xs text-slate-400\">Решены</div>\r\n          </motion.div>\r\n        </div>\r\n\r\n        {/* Alerts List */}\r\n        <div className=\"custom-scrollbar max-h-96 space-y-3 overflow-y-auto\">\r\n          <AnimatePresence>\r\n            {recentAlerts.map((alert, index) => {\r\n              const Icon = alertIcons[alert.type];\r\n\r\n              return (\r\n                <motion.div\r\n                  key={alert.id}\r\n                  layout\r\n                  initial={{ opacity: 0, x: -20 }}\r\n                  animate={{ opacity: 1, x: 0 }}\r\n                  exit={{ opacity: 0, x: 20 }}\r\n                  transition={{ duration: 0.3, delay: index * 0.05 }}\r\n                  className={`group relative border-l-4 bg-slate-700/30 backdrop-blur-sm ${alertBorderColors[alert.type]} rounded-lg p-4 transition-all duration-300 hover:bg-slate-700/50`}\r\n                >\r\n                  <div className=\"flex items-start space-x-3\">\r\n                    <div\r\n                      className={`rounded-lg border p-2 ${alertColors[alert.type]} flex-shrink-0`}\r\n                    >\r\n                      <Icon className=\"h-4 w-4\" />\r\n                    </div>\r\n\r\n                    <div className=\"min-w-0 flex-1\">\r\n                      <div className=\"flex items-start justify-between\">\r\n                        <div className=\"flex-1\">\r\n                          <p\r\n                            className={`text-sm font-medium ${alert.resolved ? 'text-slate-400 line-through' : 'text-white'} leading-relaxed`}\r\n                          >\r\n                            {alert.message}\r\n                          </p>\r\n\r\n                          <div className=\"mt-2 flex items-center space-x-3\">\r\n                            <div className=\"flex items-center space-x-1\">\r\n                              <Clock className=\"h-3 w-3 text-slate-400\" />\r\n                              <span\r\n                                className=\"text-xs text-slate-400\"\r\n                                title={formatTimeDetailed(alert.timestamp)}\r\n                              >\r\n                                {formatTimeAgo(alert.timestamp)}\r\n                              </span>\r\n                            </div>\r\n\r\n                            {alert.deviceId && (\r\n                              <div className=\"text-xs text-slate-500\">\r\n                                Устройство: {alert.deviceId}\r\n                              </div>\r\n                            )}\r\n\r\n                            <div\r\n                              className={`rounded-full px-2 py-1 text-xs font-medium ${alertColors[alert.type]}`}\r\n                            >\r\n                              {alert.type === 'critical'\r\n                                ? 'Критическое'\r\n                                : alert.type === 'warning'\r\n                                  ? 'Предупреждение'\r\n                                  : 'Информация'}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {alert.resolved ? (\r\n                          <div className=\"ml-3 flex items-center space-x-1 text-green-400\">\r\n                            <CheckCircle className=\"h-4 w-4\" />\r\n                            <span className=\"text-xs\">Решено</span>\r\n                          </div>\r\n                        ) : (\r\n                          <button\r\n                            onClick={() => handleResolveAlert(alert.id)}\r\n                            className=\"ml-3 rounded p-1 text-slate-400 opacity-0 transition-all hover:bg-slate-600/50 hover:text-green-400 group-hover:opacity-100\"\r\n                            title=\"Отметить как решенное\"\r\n                          >\r\n                            <CheckCircle className=\"h-4 w-4\" />\r\n                          </button>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Severity indicator */}\r\n                  <div className=\"absolute right-2 top-2\">\r\n                    {alert.type === 'critical' && (\r\n                      <div className=\"h-2 w-2 animate-pulse rounded-full bg-red-500\"></div>\r\n                    )}\r\n                  </div>\r\n                </motion.div>\r\n              );\r\n            })}\r\n          </AnimatePresence>\r\n        </div>\r\n\r\n        {/* No alerts state */}\r\n        {alerts.length === 0 && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            className=\"py-8 text-center\"\r\n          >\r\n            <CheckCircle className=\"mx-auto mb-3 h-12 w-12 text-green-400\" />\r\n            <p className=\"font-medium text-slate-300\">Нет уведомлений</p>\r\n            <p className=\"mt-1 text-xs text-slate-500\">\r\n              Все системы работают штатно\r\n            </p>\r\n          </motion.div>\r\n        )}\r\n\r\n        {/* Load more */}\r\n        {alerts.length > 10 && (\r\n          <div className=\"mt-4 text-center\">\r\n            <button className=\"text-sm text-blue-400 transition-colors hover:text-blue-300\">\r\n              Показать все уведомления ({alerts.length})\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Live indicator animation */}\r\n      {unresolvedCount > 0 && (\r\n        <div className=\"absolute -right-1 -top-1\">\r\n          <div className=\"h-3 w-3 animate-ping rounded-full bg-red-500\"></div>\r\n          <div className=\"absolute top-0 h-3 w-3 rounded-full bg-red-500\"></div>\r\n        </div>\r\n      )}\r\n    </motion.div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4888, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4893, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/system-health-card.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useNetworkStore } from '@/store/network-store';\r\nimport {\r\n  Cpu,\r\n  MemoryStick,\r\n  HardDrive,\r\n  Activity,\r\n  Thermometer,\r\n  Clock,\r\n  Zap,\r\n} from 'lucide-react';\r\n\r\ninterface ProgressBarProps {\r\n  value: number;\r\n  color: string;\r\n  label: string;\r\n  icon: React.ComponentType<any>;\r\n  unit?: string;\r\n}\r\n\r\nfunction ProgressBar({\r\n  value,\r\n  color,\r\n  label,\r\n  icon: Icon,\r\n  unit = '%',\r\n}: ProgressBarProps) {\r\n  const getColorClasses = (value: number, type: string) => {\r\n    if (type === 'temperature') {\r\n      if (value > 70) return 'bg-red-500 text-red-400';\r\n      if (value > 50) return 'bg-yellow-500 text-yellow-400';\r\n      return 'bg-green-500 text-green-400';\r\n    }\r\n\r\n    if (value > 90) return 'bg-red-500 text-red-400';\r\n    if (value > 75) return 'bg-yellow-500 text-yellow-400';\r\n    return 'bg-green-500 text-green-400';\r\n  };\r\n\r\n  const colorClasses = getColorClasses(value, label.toLowerCase());\r\n  const bgColor = colorClasses.includes('red')\r\n    ? 'bg-red-500/20'\r\n    : colorClasses.includes('yellow')\r\n      ? 'bg-yellow-500/20'\r\n      : 'bg-green-500/20';\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, x: -20 }}\r\n      animate={{ opacity: 1, x: 0 }}\r\n      transition={{ duration: 0.5 }}\r\n      className=\"space-y-3\"\r\n    >\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <Icon className={`h-4 w-4 ${colorClasses.split(' ')[1]}`} />\r\n          <span className=\"text-sm font-medium text-slate-300\">{label}</span>\r\n        </div>\r\n        <span className={`text-sm font-bold ${colorClasses.split(' ')[1]}`}>\r\n          {value}\r\n          {unit}\r\n        </span>\r\n      </div>\r\n\r\n      <div className={`relative h-2 rounded-full ${bgColor}`}>\r\n        <motion.div\r\n          initial={{ width: 0 }}\r\n          animate={{ width: `${Math.min(value, 100)}%` }}\r\n          transition={{ duration: 1, ease: 'easeOut' }}\r\n          className={`h-full rounded-full ${colorClasses.split(' ')[0]}`}\r\n        />\r\n\r\n        {/* Gradient overlay */}\r\n        <div className=\"absolute inset-0 rounded-full bg-gradient-to-r from-transparent to-white/10\" />\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport function SystemHealthCard() {\r\n  const { systemHealth } = useNetworkStore();\r\n\r\n  const formatUptime = (seconds: number) => {\r\n    const days = Math.floor(seconds / 86400);\r\n    const hours = Math.floor((seconds % 86400) / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n\r\n    if (days > 0) return `${days}д ${hours}ч`;\r\n    if (hours > 0) return `${hours}ч ${minutes}м`;\r\n    return `${minutes}м`;\r\n  };\r\n\r\n  const getOverallStatus = () => {\r\n    const values = [\r\n      systemHealth.cpu,\r\n      systemHealth.memory,\r\n      systemHealth.disk,\r\n      systemHealth.network,\r\n    ];\r\n\r\n    const maxValue = Math.max(...values);\r\n\r\n    if (maxValue > 90)\r\n      return { status: 'critical', color: 'text-red-400', bg: 'bg-red-500/10' };\r\n    if (maxValue > 75)\r\n      return {\r\n        status: 'warning',\r\n        color: 'text-yellow-400',\r\n        bg: 'bg-yellow-500/10',\r\n      };\r\n    return {\r\n      status: 'healthy',\r\n      color: 'text-green-400',\r\n      bg: 'bg-green-500/10',\r\n    };\r\n  };\r\n\r\n  const overallStatus = getOverallStatus();\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.5 }}\r\n      className=\"rounded-xl border border-slate-700/50 bg-slate-800/50 p-6 backdrop-blur-sm\"\r\n    >\r\n      {/* Header */}\r\n      <div className=\"mb-6 flex items-center justify-between\">\r\n        <div>\r\n          <h3 className=\"text-lg font-semibold text-white\">\r\n            Сервер мониторинга\r\n          </h3>\r\n          <p className=\"mt-1 text-xs text-slate-400\">\r\n            🖥️ Состояние системы, на которой запущен мониторинг сети\r\n          </p>\r\n        </div>\r\n        <div\r\n          className={`flex items-center space-x-2 rounded-full px-3 py-1 ${overallStatus.bg}`}\r\n        >\r\n          <div\r\n            className={`h-2 w-2 rounded-full ${overallStatus.color.replace('text-', 'bg-')} animate-pulse`}\r\n          ></div>\r\n          <span className={`text-xs font-medium ${overallStatus.color}`}>\r\n            {overallStatus.status === 'critical'\r\n              ? 'Критическое'\r\n              : overallStatus.status === 'warning'\r\n                ? 'Предупреждение'\r\n                : 'Норма'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Resource Monitoring */}\r\n      <div className=\"mb-6 space-y-4\">\r\n        <ProgressBar\r\n          value={systemHealth.cpu}\r\n          color=\"blue\"\r\n          label=\"Процессор\"\r\n          icon={Cpu}\r\n        />\r\n\r\n        <ProgressBar\r\n          value={systemHealth.memory}\r\n          color=\"purple\"\r\n          label=\"Память\"\r\n          icon={MemoryStick}\r\n        />\r\n\r\n        <ProgressBar\r\n          value={systemHealth.disk}\r\n          color=\"orange\"\r\n          label=\"Диск\"\r\n          icon={HardDrive}\r\n        />\r\n\r\n        <ProgressBar\r\n          value={systemHealth.network}\r\n          color=\"green\"\r\n          label=\"Сеть\"\r\n          icon={Activity}\r\n        />\r\n\r\n        {systemHealth.temperature && (\r\n          <ProgressBar\r\n            value={systemHealth.temperature}\r\n            color=\"red\"\r\n            label=\"Температура\"\r\n            icon={Thermometer}\r\n            unit=\"°C\"\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      {/* Additional System Info */}\r\n      <div className=\"grid grid-cols-2 gap-4 border-t border-slate-700/50 pt-4\">\r\n        {systemHealth.uptime && (\r\n          <motion.div\r\n            initial={{ opacity: 0, scale: 0.9 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            transition={{ duration: 0.5, delay: 0.2 }}\r\n            className=\"rounded-lg bg-slate-700/30 p-3 text-center\"\r\n          >\r\n            <div className=\"mb-2 flex items-center justify-center\">\r\n              <Clock className=\"mr-2 h-4 w-4 text-blue-400\" />\r\n              <span className=\"text-xs text-slate-400\">Время работы</span>\r\n            </div>\r\n            <div className=\"text-sm font-bold text-blue-400\">\r\n              {formatUptime(systemHealth.uptime)}\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n\r\n        {systemHealth.processes && (\r\n          <motion.div\r\n            initial={{ opacity: 0, scale: 0.9 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            transition={{ duration: 0.5, delay: 0.3 }}\r\n            className=\"rounded-lg bg-slate-700/30 p-3 text-center\"\r\n          >\r\n            <div className=\"mb-2 flex items-center justify-center\">\r\n              <Zap className=\"mr-2 h-4 w-4 text-purple-400\" />\r\n              <span className=\"text-xs text-slate-400\">Процессы</span>\r\n            </div>\r\n            <div className=\"text-sm font-bold text-purple-400\">\r\n              {systemHealth.processes}\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Last Update */}\r\n      {systemHealth.lastUpdate && (\r\n        <div className=\"mt-4 text-center\">\r\n          <div className=\"text-xs text-slate-500\">\r\n            Обновлено: {new Date(systemHealth.lastUpdate).toLocaleTimeString()}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Performance Indicator */}\r\n      <div className=\"mt-4\">\r\n        <div className=\"mb-2 flex items-center justify-between text-xs text-slate-400\">\r\n          <span>Общая производительность</span>\r\n          <span>\r\n            {100 -\r\n              Math.max(\r\n                systemHealth.cpu,\r\n                systemHealth.memory,\r\n                systemHealth.disk\r\n              )}\r\n            %\r\n          </span>\r\n        </div>\r\n        <div className=\"h-1 rounded-full bg-slate-700/50\">\r\n          <motion.div\r\n            initial={{ width: 0 }}\r\n            animate={{\r\n              width: `${100 - Math.max(systemHealth.cpu, systemHealth.memory, systemHealth.disk)}%`,\r\n            }}\r\n            transition={{ duration: 1.5, ease: 'easeOut' }}\r\n            className={`h-full rounded-full ${\r\n              100 -\r\n                Math.max(\r\n                  systemHealth.cpu,\r\n                  systemHealth.memory,\r\n                  systemHealth.disk\r\n                ) >\r\n              75\r\n                ? 'bg-green-500'\r\n                : 100 -\r\n                      Math.max(\r\n                        systemHealth.cpu,\r\n                        systemHealth.memory,\r\n                        systemHealth.disk\r\n                      ) >\r\n                    50\r\n                  ? 'bg-yellow-500'\r\n                  : 'bg-red-500'\r\n            }`}\r\n          />\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 5388, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5393, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/context-menu.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Zap,\r\n  Settings,\r\n  Terminal,\r\n  Wifi,\r\n  AlertCircle,\r\n  Trash2,\r\n  Edit3,\r\n  Activity,\r\n  Globe,\r\n  Shield,\r\n  MoreHorizontal,\r\n} from 'lucide-react';\r\nimport { NetworkDevice } from '@/types/network';\r\n\r\ninterface ContextMenuProps {\r\n  device: NetworkDevice;\r\n  position: { x: number; y: number };\r\n  isVisible: boolean;\r\n  onClose: () => void;\r\n  onAction: (action: string, device: NetworkDevice) => void;\r\n}\r\n\r\nexport const DeviceContextMenu: React.FC<ContextMenuProps> = ({\r\n  device,\r\n  position,\r\n  isVisible,\r\n  onClose,\r\n  onAction,\r\n}) => {\r\n  const menuRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    const handleEscape = (event: KeyboardEvent) => {\r\n      if (event.key === 'Escape') {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    if (isVisible) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n      document.addEventListener('keydown', handleEscape);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n      document.removeEventListener('keydown', handleEscape);\r\n    };\r\n  }, [isVisible, onClose]);\r\n\r\n  if (!isVisible) return null;\r\n\r\n  const menuItems = [\r\n    {\r\n      icon: Activity,\r\n      label: 'Пинг устройства',\r\n      action: 'ping',\r\n      color: 'text-green-400 hover:text-green-300',\r\n      disabled: device.status === 'offline',\r\n    },\r\n    {\r\n      icon: Terminal,\r\n      label: 'SSH подключение',\r\n      action: 'ssh',\r\n      color: 'text-blue-400 hover:text-blue-300',\r\n      disabled: device.status === 'offline',\r\n    },\r\n    {\r\n      icon: Globe,\r\n      label: 'Веб-интерфейс',\r\n      action: 'web',\r\n      color: 'text-purple-400 hover:text-purple-300',\r\n      disabled: device.status === 'offline',\r\n    },\r\n    { divider: true },\r\n    {\r\n      icon: Settings,\r\n      label: 'Настройки',\r\n      action: 'settings',\r\n      color: 'text-slate-400 hover:text-white',\r\n    },\r\n    {\r\n      icon: Edit3,\r\n      label: 'Редактировать',\r\n      action: 'edit',\r\n      color: 'text-slate-400 hover:text-white',\r\n    },\r\n    {\r\n      icon: Wifi,\r\n      label: 'Сканировать порты',\r\n      action: 'scan',\r\n      color: 'text-cyan-400 hover:text-cyan-300',\r\n    },\r\n    { divider: true },\r\n    {\r\n      icon: AlertCircle,\r\n      label: 'Просмотр логов',\r\n      action: 'logs',\r\n      color: 'text-yellow-400 hover:text-yellow-300',\r\n    },\r\n    {\r\n      icon: Shield,\r\n      label: 'Безопасность',\r\n      action: 'security',\r\n      color: 'text-orange-400 hover:text-orange-300',\r\n    },\r\n    { divider: true },\r\n    {\r\n      icon: Trash2,\r\n      label: 'Удалить устройство',\r\n      action: 'delete',\r\n      color: 'text-red-400 hover:text-red-300',\r\n      dangerous: true,\r\n    },\r\n  ];\r\n\r\n  // Проверяем, чтобы меню не выходило за границы экрана\r\n  const adjustedPosition = {\r\n    x: Math.min(\r\n      position.x,\r\n      (typeof window !== 'undefined' ? window.innerWidth : 1920) - 250\r\n    ),\r\n    y: Math.min(\r\n      position.y,\r\n      (typeof window !== 'undefined' ? window.innerHeight : 1080) -\r\n        menuItems.length * 40\r\n    ),\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={menuRef}\r\n      className=\"fixed z-50 min-w-[240px] rounded-lg border border-slate-600/50 bg-slate-800/95 py-2 shadow-xl backdrop-blur-sm\"\r\n      style={{\r\n        left: adjustedPosition.x,\r\n        top: adjustedPosition.y,\r\n      }}\r\n    >\r\n      {/* Заголовок меню */}\r\n      <div className=\"border-b border-slate-600/50 px-4 py-2\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div\r\n            className={`h-3 w-3 rounded-full ${\r\n              device.status === 'online'\r\n                ? 'bg-green-500'\r\n                : device.status === 'warning'\r\n                  ? 'bg-yellow-500'\r\n                  : 'bg-red-500'\r\n            }`}\r\n          />\r\n          <div>\r\n            <div className=\"text-sm font-medium text-white\">{device.name}</div>\r\n            <div className=\"text-xs text-slate-400\">{device.ip}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Элементы меню */}\r\n      <div className=\"py-1\">\r\n        {menuItems.map((item, index) => {\r\n          if ('divider' in item) {\r\n            return (\r\n              <div key={index} className=\"mx-2 my-1 h-px bg-slate-600/30\" />\r\n            );\r\n          }\r\n\r\n          const Icon = item.icon;\r\n          return (\r\n            <button\r\n              key={index}\r\n              onClick={() => {\r\n                onAction(item.action, device);\r\n                onClose();\r\n              }}\r\n              disabled={item.disabled}\r\n              className={`flex w-full items-center space-x-3 px-4 py-2 text-sm transition-colors ${\r\n                item.disabled\r\n                  ? 'cursor-not-allowed text-slate-500'\r\n                  : `${item.color} cursor-pointer hover:bg-slate-700/50`\r\n              } ${item.dangerous ? 'hover:bg-red-500/10' : ''}`}\r\n            >\r\n              <Icon className=\"h-4 w-4\" />\r\n              <span>{item.label}</span>\r\n              {item.disabled && (\r\n                <span className=\"ml-auto text-xs text-slate-500\">(офлайн)</span>\r\n              )}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Информация об устройстве */}\r\n      <div className=\"border-t border-slate-600/50 px-4 py-2 text-xs text-slate-400\">\r\n        <div className=\"flex justify-between\">\r\n          <span>Тип: {device.type}</span>\r\n          <span>Время отклика: {device.responseTime}ms</span>\r\n        </div>\r\n        <div className=\"mt-1 flex justify-between\">\r\n          <span>Uptime: {device.uptime.toFixed(1)}%</span>\r\n          <span>\r\n            Последний: {new Date(device.lastSeen).toLocaleTimeString()}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 5698, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5703, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/toast.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { X, CheckCircle, AlertCircle, Info, AlertTriangle } from 'lucide-react';\r\n\r\nexport interface Toast {\r\n  id: string;\r\n  type: 'success' | 'error' | 'warning' | 'info';\r\n  title: string;\r\n  message?: string;\r\n  duration?: number;\r\n}\r\n\r\ninterface ToastProps {\r\n  toast: Toast;\r\n  onClose: (id: string) => void;\r\n}\r\n\r\ninterface ToastContainerProps {\r\n  toasts: Toast[];\r\n  onClose: (id: string) => void;\r\n}\r\n\r\nconst ToastItem: React.FC<ToastProps> = ({ toast, onClose }) => {\r\n  useEffect(() => {\r\n    const duration = toast.duration || 5000;\r\n    const timer = setTimeout(() => {\r\n      onClose(toast.id);\r\n    }, duration);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [toast.id, toast.duration, onClose]);\r\n\r\n  const getIcon = () => {\r\n    switch (toast.type) {\r\n      case 'success':\r\n        return <CheckCircle className=\"h-5 w-5 text-green-400\" />;\r\n      case 'error':\r\n        return <AlertCircle className=\"h-5 w-5 text-red-400\" />;\r\n      case 'warning':\r\n        return <AlertTriangle className=\"h-5 w-5 text-yellow-400\" />;\r\n      default:\r\n        return <Info className=\"h-5 w-5 text-blue-400\" />;\r\n    }\r\n  };\r\n\r\n  const getBorderColor = () => {\r\n    switch (toast.type) {\r\n      case 'success':\r\n        return 'border-l-green-500';\r\n      case 'error':\r\n        return 'border-l-red-500';\r\n      case 'warning':\r\n        return 'border-l-yellow-500';\r\n      default:\r\n        return 'border-l-blue-500';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 50, scale: 0.95 }}\r\n      animate={{ opacity: 1, y: 0, scale: 1 }}\r\n      exit={{ opacity: 0, y: -50, scale: 0.95 }}\r\n      transition={{ duration: 0.2 }}\r\n      className={`border border-slate-600/50 bg-slate-800/95 backdrop-blur-sm ${getBorderColor()} w-full max-w-sm rounded-lg border-l-4 p-4 shadow-xl`}\r\n    >\r\n      <div className=\"flex items-start space-x-3\">\r\n        <div className=\"flex-shrink-0\">{getIcon()}</div>\r\n\r\n        <div className=\"min-w-0 flex-1\">\r\n          <h4 className=\"text-sm font-medium text-white\">{toast.title}</h4>\r\n          {toast.message && (\r\n            <p className=\"mt-1 text-sm text-slate-300\">{toast.message}</p>\r\n          )}\r\n        </div>\r\n\r\n        <button\r\n          onClick={() => onClose(toast.id)}\r\n          className=\"flex-shrink-0 text-slate-400 transition-colors hover:text-white\"\r\n        >\r\n          <X className=\"h-4 w-4\" />\r\n        </button>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport const ToastContainer: React.FC<ToastContainerProps> = ({\r\n  toasts,\r\n  onClose,\r\n}) => {\r\n  return (\r\n    <div className=\"fixed right-4 top-4 z-[100] space-y-2\">\r\n      <AnimatePresence>\r\n        {toasts.map((toast) => (\r\n          <ToastItem key={toast.id} toast={toast} onClose={onClose} />\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Hook для управления toast'ами\r\nexport const useToast = () => {\r\n  const [toasts, setToasts] = useState<Toast[]>([]);\r\n\r\n  const addToast = (toast: Omit<Toast, 'id'>) => {\r\n    const id = Date.now().toString();\r\n    setToasts((prev) => [...prev, { ...toast, id }]);\r\n  };\r\n\r\n  const removeToast = (id: string) => {\r\n    setToasts((prev) => prev.filter((toast) => toast.id !== id));\r\n  };\r\n\r\n  const success = (title: string, message?: string, duration?: number) => {\r\n    addToast({ type: 'success', title, message, duration });\r\n  };\r\n\r\n  const error = (title: string, message?: string, duration?: number) => {\r\n    addToast({ type: 'error', title, message, duration });\r\n  };\r\n\r\n  const warning = (title: string, message?: string, duration?: number) => {\r\n    addToast({ type: 'warning', title, message, duration });\r\n  };\r\n\r\n  const info = (title: string, message?: string, duration?: number) => {\r\n    addToast({ type: 'info', title, message, duration });\r\n  };\r\n\r\n  return {\r\n    toasts,\r\n    addToast,\r\n    removeToast,\r\n    success,\r\n    error,\r\n    warning,\r\n    info,\r\n  };\r\n};\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;;;;;AAwBA,MAAM,YAAkC,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE;IACzD,CAAA,GAAA,+XAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,WAAW,MAAM,QAAQ,IAAI;QACnC,MAAM,QAAQ,WAAW;YACvB,QAAQ,MAAM,EAAE;QAClB,GAAG;QAEH,OAAO,IAAM,aAAa;IAC5B,GAAG;QAAC,MAAM,EAAE;QAAE,MAAM,QAAQ;QAAE;KAAQ;IAEtC,MAAM,UAAU;QACd,OAAQ,MAAM,IAAI;YAChB,KAAK;gBACH,qBAAO,waAAC,wSAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;YAChC,KAAK;gBACH,qBAAO,waAAC,wSAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;YAChC,KAAK;gBACH,qBAAO,waAAC,4SAAA,CAAA,gBAAa;oBAAC,WAAU;;;;;;YAClC;gBACE,qBAAO,waAAC,sRAAA,CAAA,OAAI;oBAAC,WAAU;;;;;;QAC3B;IACF;IAEA,MAAM,iBAAiB;QACrB,OAAQ,MAAM,IAAI;YAChB,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,qBACE,waAAC,4RAAA,CAAA,SAAM,CAAC,GAAG;QACT,SAAS;YAAE,SAAS;YAAG,GAAG;YAAI,OAAO;QAAK;QAC1C,SAAS;YAAE,SAAS;YAAG,GAAG;YAAG,OAAO;QAAE;QACtC,MAAM;YAAE,SAAS;YAAG,GAAG,CAAC;YAAI,OAAO;QAAK;QACxC,YAAY;YAAE,UAAU;QAAI;QAC5B,WAAW,CAAC,4DAA4D,EAAE,iBAAiB,oDAAoD,CAAC;kBAEhJ,cAAA,waAAC;YAAI,WAAU;;8BACb,waAAC;oBAAI,WAAU;8BAAiB;;;;;;8BAEhC,waAAC;oBAAI,WAAU;;sCACb,waAAC;4BAAG,WAAU;sCAAkC,MAAM,KAAK;;;;;;wBAC1D,MAAM,OAAO,kBACZ,waAAC;4BAAE,WAAU;sCAA+B,MAAM,OAAO;;;;;;;;;;;;8BAI7D,waAAC;oBACC,SAAS,IAAM,QAAQ,MAAM,EAAE;oBAC/B,WAAU;8BAEV,cAAA,waAAC,gRAAA,CAAA,IAAC;wBAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;AAKvB;AAEO,MAAM,iBAAgD,CAAC,EAC5D,MAAM,EACN,OAAO,EACR;IACC,qBACE,waAAC;QAAI,WAAU;kBACb,cAAA,waAAC,2SAAA,CAAA,kBAAe;sBACb,OAAO,GAAG,CAAC,CAAC,sBACX,waAAC;oBAAyB,OAAO;oBAAO,SAAS;mBAAjC,MAAM,EAAE;;;;;;;;;;;;;;;AAKlC;AAGO,MAAM,WAAW;IACtB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,+XAAA,CAAA,WAAQ,AAAD,EAAW,EAAE;IAEhD,MAAM,WAAW,CAAC;QAChB,MAAM,KAAK,KAAK,GAAG,GAAG,QAAQ;QAC9B,UAAU,CAAC,OAAS;mBAAI;gBAAM;oBAAE,GAAG,KAAK;oBAAE;gBAAG;aAAE;IACjD;IAEA,MAAM,cAAc,CAAC;QACnB,UAAU,CAAC,OAAS,KAAK,MAAM,CAAC,CAAC,QAAU,MAAM,EAAE,KAAK;IAC1D;IAEA,MAAM,UAAU,CAAC,OAAe,SAAkB;QAChD,SAAS;YAAE,MAAM;YAAW;YAAO;YAAS;QAAS;IACvD;IAEA,MAAM,QAAQ,CAAC,OAAe,SAAkB;QAC9C,SAAS;YAAE,MAAM;YAAS;YAAO;YAAS;QAAS;IACrD;IAEA,MAAM,UAAU,CAAC,OAAe,SAAkB;QAChD,SAAS;YAAE,MAAM;YAAW;YAAO;YAAS;QAAS;IACvD;IAEA,MAAM,OAAO,CAAC,OAAe,SAAkB;QAC7C,SAAS;YAAE,MAAM;YAAQ;YAAO;YAAS;QAAS;IACpD;IAEA,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF"}},
    {"offset": {"line": 5945, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5950, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/network-topology.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useEffect, useCallback } from 'react';\nimport { motion } from 'framer-motion';\nimport { useRouter } from 'next/navigation';\nimport {\n  Network,\n  Settings,\n  Maximize2,\n  RotateCcw,\n  Router,\n  Wifi,\n  Monitor,\n  Server,\n  Smartphone,\n  Printer,\n  Shield,\n} from 'lucide-react';\nimport { useNetworkStore } from '@/store/network-store';\nimport { NetworkDevice } from '@/types/network';\nimport { DeviceContextMenu } from './context-menu';\nimport { ToastContainer, useToast } from './toast';\n\n// Device type configuration\nconst deviceIcons = {\n  router: Router,\n  switch: Network,\n  computer: Monitor,\n  server: Server,\n  mobile: Smartphone,\n  wifi: Wifi,\n  workstation: Monitor,\n  printer: Printer,\n  firewall: Shield,\n  access_point: Wifi,\n};\n\nconst deviceColors = {\n  router: '#3B82F6',\n  switch: '#10B981',\n  computer: '#8B5CF6',\n  server: '#F59E0B',\n  mobile: '#EF4444',\n  wifi: '#06B6D4',\n  workstation: '#6B7280',\n  printer: '#F97316',\n  firewall: '#DC2626',\n  access_point: '#10B981',\n};\n\ninterface Connection {\n  id: string;\n  sourceId: string;\n  targetId: string;\n}\n\ninterface DragState {\n  isDragging: boolean;\n  deviceId: string | null;\n  offset: { x: number; y: number };\n}\n\ninterface ConnectionState {\n  isConnecting: boolean;\n  sourceId: string | null;\n  tempLine: { x1: number; y1: number; x2: number; y2: number } | null;\n}\n\ninterface ContextMenuState {\n  isVisible: boolean;\n  device: any | null;\n  position: { x: number; y: number };\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\ninterface DeviceWithPosition extends NetworkDevice {\n  position?: Position;\n}\n\ninterface NetworkTopologyProps {\n  isFullscreen?: boolean;\n}\n\nexport function NetworkTopology({\n  isFullscreen = false,\n}: NetworkTopologyProps) {\n  const { devices, updateDevice, selectedFolderId } = useNetworkStore();\n  const { toasts, removeToast, success, error, warning, info } = useToast();\n  const router = useRouter();\n\n  const [isEditMode, setIsEditMode] = useState(false);\n\n  // Инициализируем соединения из localStorage сразу\n  const [connections, setConnections] = useState<Connection[]>(() => {\n    if (typeof window !== 'undefined') {\n      const savedConnections = localStorage.getItem('topology-connections');\n      if (savedConnections) {\n        try {\n          return JSON.parse(savedConnections);\n        } catch (e) {\n          console.error('Failed to load connections:', e);\n        }\n      }\n    }\n    return [];\n  });\n\n  const [dragState, setDragState] = useState<DragState>({\n    isDragging: false,\n    deviceId: null,\n    offset: { x: 0, y: 0 },\n  });\n  const [connectionState, setConnectionState] = useState<ConnectionState>({\n    isConnecting: false,\n    sourceId: null,\n    tempLine: null,\n  });\n  const [contextMenu, setContextMenu] = useState<ContextMenuState>({\n    isVisible: false,\n    device: null,\n    position: { x: 0, y: 0 },\n  });\n\n  // Инициализируем позиции устройств из localStorage сразу\n  const [devicePositions, setDevicePositions] = useState<\n    Record<string, Position>\n  >(() => {\n    if (typeof window !== 'undefined') {\n      const savedPositions = localStorage.getItem('topology-positions');\n      if (savedPositions) {\n        try {\n          return JSON.parse(savedPositions);\n        } catch (e) {\n          console.error('Failed to load positions:', e);\n        }\n      }\n    }\n    return {};\n  });\n\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  // Generate default positions for devices\n  const generateDefaultPositions = useCallback(\n    (devices: NetworkDevice[]): Record<string, Position> => {\n      const positions: Record<string, Position> = {};\n      const gridCols = 4;\n      const spacing = { x: 200, y: 150 };\n      const offset = { x: 100, y: 80 };\n\n      devices.forEach((device, index) => {\n        const col = index % gridCols;\n        const row = Math.floor(index / gridCols);\n        positions[device.id] = {\n          x: offset.x + col * spacing.x,\n          y: offset.y + row * spacing.y,\n        };\n      });\n\n      return positions;\n    },\n    []\n  );\n\n  // Генерируем позиции по умолчанию для новых устройств\n  useEffect(() => {\n    setDevicePositions((prev) => {\n      // Если позиции уже есть для всех устройств, не изменяем\n      const hasAllPositions = devices.every((device) => prev[device.id]);\n      if (hasAllPositions && Object.keys(prev).length > 0) {\n        return prev;\n      }\n\n      // Генерируем позиции только для новых устройств\n      const newPositions = { ...prev };\n      const defaultPositions = generateDefaultPositions(devices);\n\n      devices.forEach((device) => {\n        if (!newPositions[device.id]) {\n          newPositions[device.id] = defaultPositions[device.id];\n        }\n      });\n\n      return newPositions;\n    });\n  }, [devices, generateDefaultPositions]);\n\n  // Save positions when they change\n  useEffect(() => {\n    if (Object.keys(devicePositions).length > 0) {\n      localStorage.setItem(\n        'topology-positions',\n        JSON.stringify(devicePositions)\n      );\n    }\n  }, [devicePositions]);\n\n  // Save connections when they change\n  useEffect(() => {\n    localStorage.setItem('topology-connections', JSON.stringify(connections));\n  }, [connections]);\n\n  // Combine devices with positions\n  const devicesWithPositions: DeviceWithPosition[] = devices.map((device) => ({\n    ...device,\n    position: devicePositions[device.id] || { x: 100, y: 100 },\n  }));\n\n  // Reset layout function\n  const resetLayout = () => {\n    const defaultPositions = generateDefaultPositions(devices);\n    setDevicePositions(defaultPositions);\n    setConnections([]);\n    localStorage.removeItem('topology-positions');\n    localStorage.removeItem('topology-connections');\n    success(\n      'Макет сброшен',\n      'Расположение устройств и соединения сброшены к настройкам по умолчанию'\n    );\n  };\n\n  // Mouse handlers for dragging\n  const handleMouseDown = (e: React.MouseEvent, deviceId: string) => {\n    if (!isEditMode) return;\n\n    e.preventDefault();\n    const rect = svgRef.current?.getBoundingClientRect();\n    if (!rect) return;\n\n    const device = devicesWithPositions.find((d) => d.id === deviceId);\n    if (!device?.position) return;\n\n    setDragState({\n      isDragging: true,\n      deviceId,\n      offset: {\n        x: e.clientX - rect.left - device.position.x,\n        y: e.clientY - rect.top - device.position.y,\n      },\n    });\n  };\n\n  const handleMouseMove = (e: React.MouseEvent) => {\n    if (!isEditMode) return;\n\n    const rect = svgRef.current?.getBoundingClientRect();\n    if (!rect) return;\n\n    if (dragState.isDragging && dragState.deviceId) {\n      const newX = e.clientX - rect.left - dragState.offset.x;\n      const newY = e.clientY - rect.top - dragState.offset.y;\n\n      setDevicePositions((prev) => ({\n        ...prev,\n        [dragState.deviceId!]: { x: newX, y: newY },\n      }));\n    }\n\n    if (connectionState.isConnecting && connectionState.sourceId) {\n      setConnectionState((prev) => ({\n        ...prev,\n        tempLine: {\n          ...prev.tempLine!,\n          x2: e.clientX - rect.left,\n          y2: e.clientY - rect.top,\n        },\n      }));\n    }\n  };\n\n  const handleMouseUp = () => {\n    setDragState({\n      isDragging: false,\n      deviceId: null,\n      offset: { x: 0, y: 0 },\n    });\n  };\n\n  // Device click handler\n  const handleDeviceClick = (deviceId: string) => {\n    if (!isEditMode) return;\n\n    if (connectionState.isConnecting) {\n      if (connectionState.sourceId === deviceId) {\n        // Cancel connection\n        setConnectionState({\n          isConnecting: false,\n          sourceId: null,\n          tempLine: null,\n        });\n        info('Отменено', 'Создание соединения отменено');\n      } else {\n        // Create connection\n        const newConnection: Connection = {\n          id: `${connectionState.sourceId}-${deviceId}`,\n          sourceId: connectionState.sourceId!,\n          targetId: deviceId,\n        };\n\n        setConnections((prev) => [...prev, newConnection]);\n        setConnectionState({\n          isConnecting: false,\n          sourceId: null,\n          tempLine: null,\n        });\n        success('Соединение создано', 'Новое соединение успешно добавлено');\n      }\n    } else {\n      // Start connection\n      const device = devicesWithPositions.find((d) => d.id === deviceId);\n      if (device?.position) {\n        setConnectionState({\n          isConnecting: true,\n          sourceId: deviceId,\n          tempLine: {\n            x1: device.position.x,\n            y1: device.position.y,\n            x2: device.position.x,\n            y2: device.position.y,\n          },\n        });\n        info(\n          'Режим соединения',\n          'Кликните на другое устройство для создания соединения'\n        );\n      }\n    }\n  };\n\n  // Connection deletion\n  const handleDeleteConnection = (connectionId: string) => {\n    setConnections((prev) => prev.filter((c) => c.id !== connectionId));\n    warning('Соединение удалено', 'Соединение между устройствами удалено');\n  };\n\n  // Context menu handlers\n  const handleContextMenu = (e: React.MouseEvent, device: NetworkDevice) => {\n    e.preventDefault();\n    setContextMenu({\n      isVisible: true,\n      device,\n      position: { x: e.clientX, y: e.clientY },\n    });\n  };\n\n  const handleCloseContextMenu = () => {\n    setContextMenu({\n      isVisible: false,\n      device: null,\n      position: { x: 0, y: 0 },\n    });\n  };\n\n  const handleContextAction = (action: string, device: NetworkDevice) => {\n    handleCloseContextMenu();\n\n    switch (action) {\n      case 'ping':\n        if (device.status === 'online') {\n          success('Ping успешен', `Устройство ${device.name} отвечает`);\n        } else {\n          error('Ping неудачен', `Устройство ${device.name} не отвечает`);\n        }\n        break;\n      case 'ssh':\n        if (device.status === 'online') {\n          info('SSH соединение', `Подключение к ${device.name} через SSH...`);\n        } else {\n          error('SSH недоступен', `Устройство ${device.name} офлайн`);\n        }\n        break;\n      case 'web':\n        if (device.status === 'online') {\n          info('Веб-интерфейс', `Открытие веб-интерфейса ${device.name}...`);\n        } else {\n          error('Веб-интерфейс недоступен', `Устройство ${device.name} офлайн`);\n        }\n        break;\n      case 'edit':\n        info('Редактирование', `Редактирование настроек ${device.name}...`);\n        break;\n      case 'delete':\n        warning(\n          'Удаление устройства',\n          `Устройство ${device.name} помечено для удаления`\n        );\n        break;\n      default:\n        info(action, `Действие \"${action}\" для устройства ${device.name}`);\n    }\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n      className=\"rounded-xl border border-slate-700/50 bg-slate-800/50 p-6 backdrop-blur-sm\"\n    >\n      {/* Header */}\n      {!isFullscreen && (\n        <div className=\"mb-6 flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"rounded-lg bg-slate-700/50 p-2\">\n              <Network className=\"h-5 w-5 text-blue-400\" />\n            </div>\n            <div>\n              <h3 className=\"text-lg font-semibold text-white\">\n                Сетевая топология\n              </h3>\n              <p className=\"text-sm text-slate-400\">Интерактивная карта сети</p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={() => setIsEditMode(!isEditMode)}\n              className={`rounded-lg px-4 py-2 transition-colors ${\n                isEditMode\n                  ? 'border border-green-500/30 bg-green-500/20 text-green-400'\n                  : 'bg-slate-700/50 text-slate-400 hover:bg-slate-700 hover:text-white'\n              }`}\n            >\n              {isEditMode ? 'Выйти из редактора' : 'Режим редактирования'}\n            </button>\n            {isEditMode && (\n              <>\n                <button\n                  onClick={resetLayout}\n                  className=\"rounded-lg p-2 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-white\"\n                  title=\"Сбросить расположение\"\n                >\n                  <RotateCcw className=\"h-4 w-4\" />\n                </button>\n                <button\n                  onClick={() => {\n                    const positions =\n                      localStorage.getItem('topology-positions');\n                    const savedConnections = localStorage.getItem(\n                      'topology-connections'\n                    );\n                    // Debug info только для разработки\n                    if (process.env.NODE_ENV === 'development') {\n                      console.log('=== DEBUG localStorage ===');\n                      console.log(\n                        'Positions:',\n                        positions ? JSON.parse(positions) : 'Not found'\n                      );\n                      console.log(\n                        'Saved Connections:',\n                        savedConnections\n                          ? JSON.parse(savedConnections)\n                          : 'Not found'\n                      );\n                      console.log('Current devices:', devices.length);\n                      console.log(\n                        'Current connections count:',\n                        connections.length\n                      );\n                      info('Debug info', 'Проверьте консоль браузера (F12)');\n                    }\n                  }}\n                  className=\"rounded-lg p-2 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-white\"\n                  title=\"Отладка localStorage\"\n                >\n                  🐛\n                </button>\n              </>\n            )}\n            <button className=\"rounded-lg p-2 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-white\">\n              <Settings className=\"h-4 w-4\" />\n            </button>\n            <button\n              onClick={() => router.push('/topology-fullscreen')}\n              className=\"flex items-center space-x-2 rounded-lg border border-blue-500/30 bg-blue-500/20 px-4 py-2 text-blue-400 transition-colors hover:bg-blue-500/30\"\n              title=\"Открыть в полноэкранном режиме\"\n            >\n              <Maximize2 className=\"h-4 w-4\" />\n              <span>Полный экран</span>\n            </button>\n          </div>\n        </div>\n      )}\n\n      {isEditMode && (\n        <div className=\"mb-4 rounded-lg border border-blue-500/20 bg-blue-500/10 p-3\">\n          <p className=\"text-sm text-blue-400\">\n            <strong>Режим редактирования:</strong> Перетаскивайте устройства для\n            их перемещения. Кликайте по устройствам для создания соединений.\n            {connectionState.isConnecting && (\n              <span className=\"ml-2 text-yellow-400\">\n                Кликните на другое устройство для подключения, или на то же для\n                отмены.\n              </span>\n            )}\n          </p>\n        </div>\n      )}\n\n      {/* Topology Area */}\n      <div\n        className=\"relative w-full rounded-lg border border-slate-700/30 bg-slate-900/50\"\n        style={{ height: isFullscreen ? 'calc(100vh - 120px)' : '700px' }}\n      >\n        <svg\n          ref={svgRef}\n          width=\"100%\"\n          height=\"100%\"\n          className=\"overflow-visible\"\n          onMouseMove={handleMouseMove}\n          onMouseUp={handleMouseUp}\n          onMouseLeave={handleMouseUp}\n        >\n          {/* Background grid */}\n          <defs>\n            <pattern\n              id=\"topology-grid\"\n              width=\"20\"\n              height=\"20\"\n              patternUnits=\"userSpaceOnUse\"\n            >\n              <path\n                d=\"M 20 0 L 0 0 0 20\"\n                fill=\"none\"\n                stroke=\"#475569\"\n                strokeWidth=\"0.5\"\n                opacity=\"0.3\"\n              />\n            </pattern>\n          </defs>\n          <rect width=\"100%\" height=\"100%\" fill=\"url(#topology-grid)\" />\n\n          {/* Connections */}\n          {connections.map((connection) => {\n            const sourceDevice = devicesWithPositions.find(\n              (d) => d.id === connection.sourceId\n            );\n            const targetDevice = devicesWithPositions.find(\n              (d) => d.id === connection.targetId\n            );\n\n            if (!sourceDevice || !targetDevice) return null;\n\n            return (\n              <g key={connection.id}>\n                <line\n                  x1={sourceDevice.position!.x}\n                  y1={sourceDevice.position!.y}\n                  x2={targetDevice.position!.x}\n                  y2={targetDevice.position!.y}\n                  stroke=\"#6B7280\"\n                  strokeWidth=\"2\"\n                  strokeDasharray=\"5,5\"\n                />\n                {isEditMode && (\n                  <circle\n                    cx={\n                      (sourceDevice.position!.x + targetDevice.position!.x) / 2\n                    }\n                    cy={\n                      (sourceDevice.position!.y + targetDevice.position!.y) / 2\n                    }\n                    r=\"8\"\n                    fill=\"#EF4444\"\n                    className=\"cursor-pointer hover:fill-red-600\"\n                    onClick={() => handleDeleteConnection(connection.id)}\n                  >\n                    <title>Кликните для удаления соединения</title>\n                  </circle>\n                )}\n              </g>\n            );\n          })}\n\n          {/* Temporary connection line */}\n          {connectionState.tempLine && (\n            <line\n              x1={connectionState.tempLine.x1}\n              y1={connectionState.tempLine.y1}\n              x2={connectionState.tempLine.x2}\n              y2={connectionState.tempLine.y2}\n              stroke=\"#3B82F6\"\n              strokeWidth=\"2\"\n              strokeDasharray=\"3,3\"\n              opacity=\"0.7\"\n            />\n          )}\n\n          {/* Devices */}\n          {devicesWithPositions.map((device) => {\n            const Icon =\n              deviceIcons[device.type as keyof typeof deviceIcons] || Monitor; // Fallback to Monitor icon\n            const color =\n              deviceColors[device.type as keyof typeof deviceColors] ||\n              '#6B7280'; // Fallback to gray\n            const isConnecting = connectionState.sourceId === device.id;\n\n            // Определяем, выделено ли устройство (принадлежит выбранной папке)\n            const isHighlighted =\n              !selectedFolderId ||\n              selectedFolderId === 'root' ||\n              device.folderId === selectedFolderId;\n            const opacity = isHighlighted ? 1 : 0.3;\n\n            return (\n              <g\n                key={device.id}\n                transform={`translate(${device.position!.x}, ${device.position!.y})`}\n                className=\"cursor-pointer\"\n                style={{ opacity }}\n                onMouseDown={(e) => handleMouseDown(e, device.id)}\n                onClick={() => handleDeviceClick(device.id)}\n                onContextMenu={(e) => handleContextMenu(e, device)}\n              >\n                {/* Device background */}\n                <circle\n                  r={isConnecting ? '28' : '25'}\n                  fill={device.status === 'online' ? color : '#6B7280'}\n                  opacity=\"0.2\"\n                  stroke={isConnecting ? '#3B82F6' : 'transparent'}\n                  strokeWidth=\"2\"\n                />\n                <circle\n                  r=\"20\"\n                  fill={device.status === 'online' ? color : '#6B7280'}\n                  opacity=\"0.3\"\n                />\n\n                {/* Device icon */}\n                <foreignObject x=\"-12\" y=\"-12\" width=\"24\" height=\"24\">\n                  <Icon className=\"h-6 w-6 text-white\" />\n                </foreignObject>\n\n                {/* Device name */}\n                <text\n                  x=\"0\"\n                  y=\"40\"\n                  textAnchor=\"middle\"\n                  className=\"fill-white text-xs font-medium\"\n                >\n                  {device.name}\n                </text>\n\n                {/* Status indicator */}\n                <circle\n                  cx=\"15\"\n                  cy=\"-15\"\n                  r=\"4\"\n                  fill={\n                    device.status === 'online'\n                      ? '#10B981'\n                      : device.status === 'warning'\n                        ? '#F59E0B'\n                        : '#EF4444'\n                  }\n                />\n\n                {/* Edit mode overlay */}\n                {isEditMode && (\n                  <circle\n                    r=\"25\"\n                    fill=\"transparent\"\n                    stroke=\"#3B82F6\"\n                    strokeWidth=\"1\"\n                    strokeDasharray=\"2,2\"\n                    opacity=\"0.5\"\n                  />\n                )}\n              </g>\n            );\n          })}\n        </svg>\n      </div>\n\n      {/* Controls */}\n      <div className=\"mt-4 flex items-center justify-between\">\n        <div className=\"flex items-center space-x-6\">\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"h-3 w-3 rounded-full bg-green-500 opacity-60\"></div>\n            <span className=\"text-slate-400\">Онлайн</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"h-3 w-3 rounded-full bg-yellow-500 opacity-60\"></div>\n            <span className=\"text-slate-400\">Предупреждение</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"h-3 w-3 rounded-full bg-red-500 opacity-60\"></div>\n            <span className=\"text-slate-400\">Офлайн</span>\n          </div>\n        </div>\n\n        <div className=\"text-sm text-slate-500\">\n          {devicesWithPositions.length} устройств • {connections.length}{' '}\n          соединений\n        </div>\n      </div>\n\n      {/* Context Menu */}\n      {contextMenu.isVisible && contextMenu.device && (\n        <div\n          className=\"fixed z-50 min-w-[200px] rounded-lg border border-slate-600 bg-slate-800 p-2 shadow-xl\"\n          style={{\n            left: contextMenu.position.x,\n            top: contextMenu.position.y,\n          }}\n        >\n          <div className=\"mb-2 border-b border-slate-600 pb-2\">\n            <p className=\"font-semibold text-white\">\n              {contextMenu.device.name}\n            </p>\n            <p className=\"text-sm text-slate-400\">{contextMenu.device.ip}</p>\n          </div>\n\n          <button\n            onClick={async () => {\n              const { pingDevice } = useNetworkStore.getState();\n              try {\n                success(\n                  'Ping запущен',\n                  `Выполняется ping устройства ${contextMenu.device?.name}`\n                );\n                await pingDevice(contextMenu.device!.id);\n                success(\n                  'Ping выполнен',\n                  `Устройство ${contextMenu.device?.name} успешно пропинговано`\n                );\n              } catch (error) {\n                error(\n                  'Ошибка ping',\n                  `Не удалось выполнить ping устройства ${contextMenu.device?.name}`\n                );\n              }\n              setContextMenu({\n                isVisible: false,\n                device: null,\n                position: { x: 0, y: 0 },\n              });\n            }}\n            className=\"flex w-full items-center space-x-2 rounded px-3 py-2 text-left text-sm text-slate-300 hover:bg-slate-700\"\n          >\n            <div className=\"h-2 w-2 rounded-full bg-green-500\"></div>\n            <span>🏓 Ping устройство</span>\n          </button>\n\n          <button\n            onClick={() => {\n              info(\n                'Информация об устройстве',\n                `${contextMenu.device?.name}\\nIP: ${contextMenu.device?.ip}\\nСтатус: ${contextMenu.device?.status}\\nПоследний ответ: ${contextMenu.device?.responseTime}ms`\n              );\n              setContextMenu({\n                isVisible: false,\n                device: null,\n                position: { x: 0, y: 0 },\n              });\n            }}\n            className=\"flex w-full items-center space-x-2 rounded px-3 py-2 text-left text-sm text-slate-300 hover:bg-slate-700\"\n          >\n            <div className=\"h-2 w-2 rounded-full bg-blue-500\"></div>\n            <span>ℹ️ Информация</span>\n          </button>\n\n          <button\n            onClick={() => {\n              warning(\n                'Редактирование устройства',\n                'Функция будет реализована в следующей версии'\n              );\n              setContextMenu({\n                isVisible: false,\n                device: null,\n                position: { x: 0, y: 0 },\n              });\n            }}\n            className=\"flex w-full items-center space-x-2 rounded px-3 py-2 text-left text-sm text-slate-300 hover:bg-slate-700\"\n          >\n            <div className=\"h-2 w-2 rounded-full bg-yellow-500\"></div>\n            <span>✏️ Редактировать</span>\n          </button>\n        </div>\n      )}\n\n      {/* Toast Notifications */}\n      <ToastContainer toasts={toasts} onClose={removeToast} />\n    </motion.div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 6979, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6984, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/device-modal.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { NetworkDevice, DeviceFolder } from '@/types/schemas';\r\nimport { \r\n  X, \r\n  Router, \r\n  Server, \r\n  Monitor, \r\n  Printer, \r\n  Smartphone, \r\n  Network,\r\n  Wifi,\r\n  Shield,\r\n  Check\r\n} from 'lucide-react';\r\n\r\ninterface DeviceModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSave: (device: Omit<NetworkDevice, 'id' | 'lastSeen' | 'status'>) => void;\r\n  device?: NetworkDevice;\r\n  folders: DeviceFolder[];\r\n  defaultFolderId?: string;\r\n}\r\n\r\nconst deviceTypes = [\r\n  { value: 'router', label: 'Роутер', icon: Router },\r\n  { value: 'switch', label: 'Коммутатор', icon: Network },\r\n  { value: 'server', label: 'Сервер', icon: Server },\r\n  { value: 'workstation', label: 'Рабочая станция', icon: Monitor },\r\n  { value: 'printer', label: 'Принтер', icon: Printer },\r\n  { value: 'mobile', label: 'Мобильное устройство', icon: Smartphone },\r\n  { value: 'firewall', label: 'Firewall', icon: Shield },\r\n  { value: 'access_point', label: 'Точка доступа', icon: Wifi }\r\n] as const;\r\n\r\ntype DeviceType = typeof deviceTypes[number]['value'];\r\n\r\nexport function DeviceModal({\r\n  isOpen,\r\n  onClose,\r\n  onSave,\r\n  device,\r\n  folders,\r\n  defaultFolderId\r\n}: DeviceModalProps) {\r\n  const [formData, setFormData] = useState<{\r\n    name: string;\r\n    ip: string;\r\n    mac?: string;\r\n    type: DeviceType;\r\n    location?: string;\r\n    folderId: string;\r\n    vendor?: string;\r\n    model?: string;\r\n    osVersion?: string;\r\n    monitoring: {\r\n      ping: boolean;\r\n      snmp: boolean;\r\n      http: boolean;\r\n      ssh: boolean;\r\n    };\r\n  }>({\r\n    name: '',\r\n    ip: '',\r\n    mac: '',\r\n    type: 'workstation',\r\n    location: '',\r\n    folderId: 'root',\r\n    vendor: '',\r\n    model: '',\r\n    osVersion: '',\r\n    monitoring: {\r\n      ping: true,\r\n      snmp: false,\r\n      http: false,\r\n      ssh: false\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (device) {\r\n      setFormData({\r\n        name: device.name,\r\n        ip: device.ip,\r\n        mac: device.mac,\r\n        type: device.type as DeviceType,\r\n        location: device.location,\r\n        folderId: device.folderId || 'root',\r\n        vendor: device.vendor,\r\n        model: device.model,\r\n        osVersion: device.osVersion,\r\n        monitoring: device.monitoring || {\r\n          ping: true,\r\n          snmp: false,\r\n          http: false,\r\n          ssh: false\r\n        }\r\n      });\r\n    } else {\r\n      setFormData({\r\n        name: '',\r\n        ip: '',\r\n        mac: '',\r\n        type: 'workstation',\r\n        location: '',\r\n        folderId: defaultFolderId || 'root',\r\n        vendor: '',\r\n        model: '',\r\n        osVersion: '',\r\n        monitoring: {\r\n          ping: true,\r\n          snmp: false,\r\n          http: false,\r\n          ssh: false\r\n        }\r\n      });\r\n    }\r\n  }, [device, isOpen, defaultFolderId]);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    const deviceData: Omit<NetworkDevice, 'id' | 'lastSeen' | 'status'> = {\r\n      name: formData.name,\r\n      ip: formData.ip,\r\n      mac: formData.mac || '',\r\n      type: formData.type,\r\n      responseTime: device?.responseTime || 0,\r\n      uptime: device?.uptime || 0,\r\n      location: formData.location || '',\r\n      folderId: formData.folderId || 'root',\r\n      vendor: formData.vendor || '',\r\n      model: formData.model || '',\r\n      osVersion: formData.osVersion || '',\r\n      monitoring: formData.monitoring,\r\n      position: device?.position\r\n    };\r\n\r\n    onSave(deviceData);\r\n    onClose();\r\n  };\r\n\r\n  const getAllFolders = (folders: DeviceFolder[], prefix = ''): Array<{id: string, name: string}> => {\r\n    let result: Array<{id: string, name: string}> = [];\r\n    \r\n    folders.forEach(folder => {\r\n      result.push({\r\n        id: folder.id,\r\n        name: prefix + folder.name\r\n      });\r\n      \r\n      if (folder.children && folder.children.length > 0) {\r\n        result = result.concat(getAllFolders(folder.children, prefix + folder.name + ' / '));\r\n      }\r\n    });\r\n    \r\n    return result;\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const flatFolders = getAllFolders(folders);\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <motion.div \r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\"\r\n        onClick={onClose}\r\n      >\r\n        <motion.div\r\n          initial={{ opacity: 0, scale: 0.9, y: 20 }}\r\n          animate={{ opacity: 1, scale: 1, y: 0 }}\r\n          exit={{ opacity: 0, scale: 0.9, y: 20 }}\r\n          transition={{ duration: 0.3 }}\r\n          className=\"bg-slate-800 border border-slate-700 rounded-xl p-6 w-full max-w-3xl max-h-[90vh] overflow-y-auto mx-4\"\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          {/* Header */}\r\n          <div className=\"flex items-center justify-between mb-6\">\r\n            <h2 className=\"text-xl font-semibold text-white\">\r\n              {device ? 'Редактировать устройство' : 'Добавить новое устройство'}\r\n            </h2>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"p-2 text-slate-400 hover:text-white hover:bg-slate-700 rounded-lg transition-colors\"\r\n            >\r\n              <X className=\"h-5 w-5\" />\r\n            </button>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n            {/* Basic Information */}\r\n            <div>\r\n              <h3 className=\"text-lg font-medium text-white mb-4\">Основная информация</h3>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-slate-300 mb-2\">\r\n                    Название устройства *\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    value={formData.name}\r\n                    onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\r\n                    className=\"w-full px-4 py-3 bg-slate-700 border border-slate-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    placeholder=\"Введите название устройства\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-slate-300 mb-2\">\r\n                    IP адрес *\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    value={formData.ip}\r\n                    onChange={(e) => setFormData(prev => ({ ...prev, ip: e.target.value }))}\r\n                    className=\"w-full px-4 py-3 bg-slate-700 border border-slate-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    placeholder=\"192.168.1.100\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-slate-300 mb-2\">\r\n                    MAC адрес\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.mac || ''}\r\n                    onChange={(e) => setFormData(prev => ({ ...prev, mac: e.target.value }))}\r\n                    className=\"w-full px-4 py-3 bg-slate-700 border border-slate-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    placeholder=\"00:1B:44:11:3A:B7\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-slate-300 mb-2\">\r\n                    Расположение\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.location || ''}\r\n                    onChange={(e) => setFormData(prev => ({ ...prev, location: e.target.value }))}\r\n                    className=\"w-full px-4 py-3 bg-slate-700 border border-slate-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    placeholder=\"Серверная, 1 этаж\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"md:col-span-2\">\r\n                  <label className=\"block text-sm font-medium text-slate-300 mb-2\">\r\n                    Папка *\r\n                  </label>\r\n                  <select\r\n                    required\r\n                    value={formData.folderId}\r\n                    onChange={(e) => setFormData(prev => ({ ...prev, folderId: e.target.value }))}\r\n                    className=\"w-full px-4 py-3 bg-slate-700 border border-slate-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  >\r\n                    <option value=\"root\">Корневая папка</option>\r\n                    {flatFolders.map(folder => (\r\n                      <option key={folder.id} value={folder.id}>\r\n                        {folder.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Device Type */}\r\n            <div>\r\n              <h3 className=\"text-lg font-medium text-white mb-4\">Тип устройства *</h3>\r\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-3\">\r\n                {deviceTypes.map(type => {\r\n                  const Icon = type.icon;\r\n                  const isSelected = formData.type === type.value;\r\n                  \r\n                  return (\r\n                    <motion.button\r\n                      key={type.value}\r\n                      type=\"button\"\r\n                      whileHover={{ scale: 1.02 }}\r\n                      whileTap={{ scale: 0.98 }}\r\n                      onClick={() => setFormData(prev => ({ ...prev, type: type.value }))}\r\n                      className={`p-4 rounded-lg border-2 transition-all ${\r\n                        isSelected \r\n                          ? 'border-blue-500 bg-blue-500/20 text-blue-400' \r\n                          : 'border-slate-600 bg-slate-700/50 text-slate-300 hover:border-slate-500'\r\n                      }`}\r\n                    >\r\n                      <Icon className=\"h-8 w-8 mx-auto mb-2\" />\r\n                      <div className=\"text-sm font-medium\">{type.label}</div>\r\n                      {isSelected && (\r\n                        <div className=\"absolute top-2 right-2\">\r\n                          <Check className=\"h-4 w-4 text-blue-400\" />\r\n                        </div>\r\n                      )}\r\n                    </motion.button>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Device Details */}\r\n            <div>\r\n              <h3 className=\"text-lg font-medium text-white mb-4\">Дополнительные сведения</h3>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-slate-300 mb-2\">\r\n                    Производитель\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.vendor || ''}\r\n                    onChange={(e) => setFormData(prev => ({ ...prev, vendor: e.target.value }))}\r\n                    className=\"w-full px-4 py-3 bg-slate-700 border border-slate-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    placeholder=\"Cisco, HP, Dell\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-slate-300 mb-2\">\r\n                    Модель\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.model || ''}\r\n                    onChange={(e) => setFormData(prev => ({ ...prev, model: e.target.value }))}\r\n                    className=\"w-full px-4 py-3 bg-slate-700 border border-slate-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    placeholder=\"Номер модели\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-slate-300 mb-2\">\r\n                    Версия ОС\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.osVersion || ''}\r\n                    onChange={(e) => setFormData(prev => ({ ...prev, osVersion: e.target.value }))}\r\n                    className=\"w-full px-4 py-3 bg-slate-700 border border-slate-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    placeholder=\"Windows 11, Ubuntu 22.04\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Monitoring Settings */}\r\n            <div>\r\n              <h3 className=\"text-lg font-medium text-white mb-4\">Настройки мониторинга</h3>\r\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n                {[\r\n                  { key: 'ping', label: 'PING', description: 'Проверка доступности' },\r\n                  { key: 'snmp', label: 'SNMP', description: 'Мониторинг через SNMP' },\r\n                  { key: 'http', label: 'HTTP', description: 'Веб-сервисы' },\r\n                  { key: 'ssh', label: 'SSH', description: 'Удаленный доступ' }\r\n                ].map(monitor => (\r\n                  <motion.div\r\n                    key={monitor.key}\r\n                    whileHover={{ scale: 1.02 }}\r\n                    className={`p-4 rounded-lg border-2 cursor-pointer transition-all ${\r\n                      formData.monitoring[monitor.key as keyof typeof formData.monitoring]\r\n                        ? 'border-green-500 bg-green-500/20 text-green-400'\r\n                        : 'border-slate-600 bg-slate-700/50 text-slate-300 hover:border-slate-500'\r\n                    }`}\r\n                    onClick={() => setFormData(prev => ({\r\n                      ...prev,\r\n                      monitoring: {\r\n                        ...prev.monitoring,\r\n                        [monitor.key]: !prev.monitoring[monitor.key as keyof typeof prev.monitoring]\r\n                      }\r\n                    }))}\r\n                  >\r\n                    <div className=\"text-center\">\r\n                      <div className=\"font-semibold mb-1\">{monitor.label}</div>\r\n                      <div className=\"text-xs opacity-75\">{monitor.description}</div>\r\n                      {formData.monitoring[monitor.key as keyof typeof formData.monitoring] && (\r\n                        <div className=\"mt-2\">\r\n                          <Check className=\"h-4 w-4 mx-auto text-green-400\" />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </motion.div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Action Buttons */}\r\n            <div className=\"flex items-center justify-end space-x-4 pt-6 border-t border-slate-700\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={onClose}\r\n                className=\"px-6 py-3 text-slate-300 hover:text-white transition-colors\"\r\n              >\r\n                Отмена\r\n              </button>\r\n              <motion.button\r\n                type=\"submit\"\r\n                whileHover={{ scale: 1.02 }}\r\n                whileTap={{ scale: 0.98 }}\r\n                className=\"px-6 py-3 bg-blue-500 hover:bg-blue-600 text-white rounded-lg transition-colors font-medium\"\r\n              >\r\n                {device ? 'Сохранить изменения' : 'Добавить устройство'}\r\n              </motion.button>\r\n            </div>\r\n          </form>\r\n        </motion.div>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  );\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 7759, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7764, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/folder-modal.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { DeviceFolder } from '@/types/schemas';\r\nimport { \r\n  X, \r\n  Network,\r\n  Server,\r\n  Monitor,\r\n  Printer,\r\n  Smartphone,\r\n  Globe,\r\n  Database,\r\n  Building,\r\n  Folder,\r\n  Shield,\r\n  Wifi,\r\n  Check\r\n} from 'lucide-react';\r\n\r\ninterface FolderModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSave: (folder: Omit<DeviceFolder, 'id' | 'children'>) => void;\r\n  folder?: DeviceFolder;\r\n  parentId?: string;\r\n  folders: DeviceFolder[];\r\n}\r\n\r\nconst iconOptions = [\r\n  { value: 'Network', label: 'Сеть', icon: Network },\r\n  { value: 'Server', label: 'Сервер', icon: Server },\r\n  { value: 'Monitor', label: 'Монитор', icon: Monitor },\r\n  { value: 'Printer', label: 'Принтер', icon: Printer },\r\n  { value: 'Smartphone', label: 'Мобильные', icon: Smartphone },\r\n  { value: 'Globe', label: 'Интернет', icon: Globe },\r\n  { value: 'Database', label: 'База данных', icon: Database },\r\n  { value: 'Building', label: 'Здание', icon: Building },\r\n  { value: 'Shield', label: 'Безопасность', icon: Shield },\r\n  { value: 'Wifi', label: 'WiFi', icon: Wifi },\r\n  { value: 'Folder', label: 'Папка', icon: Folder }\r\n];\r\n\r\nconst colorOptions = [\r\n  { value: '#3B82F6', label: 'Синий' },\r\n  { value: '#10B981', label: 'Зеленый' },\r\n  { value: '#EF4444', label: 'Красный' },\r\n  { value: '#F59E0B', label: 'Желтый' },\r\n  { value: '#8B5CF6', label: 'Фиолетовый' },\r\n  { value: '#06B6D4', label: 'Голубой' },\r\n  { value: '#F97316', label: 'Оранжевый' },\r\n  { value: '#EC4899', label: 'Розовый' },\r\n  { value: '#84CC16', label: 'Лайм' },\r\n  { value: '#6B7280', label: 'Серый' }\r\n];\r\n\r\nexport function FolderModal({\r\n  isOpen,\r\n  onClose,\r\n  onSave,\r\n  folder,\r\n  parentId,\r\n  folders\r\n}: FolderModalProps) {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    color: '#3B82F6',\r\n    icon: 'Folder',\r\n    parentId: parentId || 'root'\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (folder) {\r\n      setFormData({\r\n        name: folder.name,\r\n        description: folder.description || '',\r\n        color: folder.color,\r\n        icon: folder.icon,\r\n        parentId: folder.parentId || 'root'\r\n      });\r\n    } else {\r\n      setFormData({\r\n        name: '',\r\n        description: '',\r\n        color: '#3B82F6',\r\n        icon: 'Folder',\r\n        parentId: parentId || 'root'\r\n      });\r\n    }\r\n  }, [folder, parentId, isOpen]);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    const folderData: Omit<DeviceFolder, 'id' | 'children'> = {\r\n      name: formData.name,\r\n      parentId: formData.parentId === 'root' ? undefined : formData.parentId,\r\n      color: formData.color,\r\n      icon: formData.icon,\r\n      description: formData.description || '',\r\n      expanded: true\r\n    };\r\n\r\n    onSave(folderData);\r\n    onClose();\r\n  };\r\n\r\n  const getAllFolders = (folders: DeviceFolder[], prefix = '', excludeId?: string): Array<{id: string, name: string}> => {\r\n    let result: Array<{id: string, name: string}> = [];\r\n    \r\n    folders.forEach(folder => {\r\n      if (folder.id !== excludeId) {\r\n        result.push({\r\n          id: folder.id,\r\n          name: prefix + folder.name\r\n        });\r\n        \r\n        if (folder.children && folder.children.length > 0) {\r\n          result = result.concat(getAllFolders(folder.children, prefix + folder.name + ' / ', excludeId));\r\n        }\r\n      }\r\n    });\r\n    \r\n    return result;\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const availableFolders = getAllFolders(folders, '', folder?.id);\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <motion.div \r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\"\r\n        onClick={onClose}\r\n      >\r\n        <motion.div\r\n          initial={{ opacity: 0, scale: 0.9, y: 20 }}\r\n          animate={{ opacity: 1, scale: 1, y: 0 }}\r\n          exit={{ opacity: 0, scale: 0.9, y: 20 }}\r\n          transition={{ duration: 0.3 }}\r\n          className=\"bg-slate-800 border border-slate-700 rounded-xl p-6 w-full max-w-2xl mx-4\"\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          {/* Header */}\r\n          <div className=\"flex items-center justify-between mb-6\">\r\n            <h2 className=\"text-xl font-semibold text-white\">\r\n              {folder ? 'Редактировать папку' : 'Создать новую папку'}\r\n            </h2>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"p-2 text-slate-400 hover:text-white hover:bg-slate-700 rounded-lg transition-colors\"\r\n            >\r\n              <X className=\"h-5 w-5\" />\r\n            </button>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n            {/* Basic Information */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-slate-300 mb-2\">\r\n                  Название папки *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  value={formData.name}\r\n                  onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\r\n                  className=\"w-full px-4 py-3 bg-slate-700 border border-slate-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  placeholder=\"Введите название папки\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-slate-300 mb-2\">\r\n                  Родительская папка\r\n                </label>\r\n                <select\r\n                  value={formData.parentId}\r\n                  onChange={(e) => setFormData(prev => ({ ...prev, parentId: e.target.value }))}\r\n                  className=\"w-full px-4 py-3 bg-slate-700 border border-slate-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                >\r\n                  <option value=\"root\">Корневая папка</option>\r\n                  {availableFolders.map(folder => (\r\n                    <option key={folder.id} value={folder.id}>\r\n                      {folder.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-slate-300 mb-2\">\r\n                Описание\r\n              </label>\r\n              <textarea\r\n                value={formData.description}\r\n                onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\r\n                className=\"w-full px-4 py-3 bg-slate-700 border border-slate-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                placeholder=\"Необязательное описание\"\r\n                rows={3}\r\n              />\r\n            </div>\r\n\r\n            {/* Icon Selection */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-slate-300 mb-3\">\r\n                Иконка\r\n              </label>\r\n              <div className=\"grid grid-cols-6 md:grid-cols-11 gap-2\">\r\n                {iconOptions.map(option => {\r\n                  const IconComponent = option.icon;\r\n                  const isSelected = formData.icon === option.value;\r\n                  \r\n                  return (\r\n                    <motion.button\r\n                      key={option.value}\r\n                      type=\"button\"\r\n                      whileHover={{ scale: 1.1 }}\r\n                      whileTap={{ scale: 0.95 }}\r\n                      onClick={() => setFormData(prev => ({ ...prev, icon: option.value }))}\r\n                      className={`relative p-3 rounded-lg border-2 transition-all ${\r\n                        isSelected \r\n                          ? 'border-blue-500 bg-blue-500/20 text-blue-400' \r\n                          : 'border-slate-600 bg-slate-700/50 text-slate-300 hover:border-slate-500'\r\n                      }`}\r\n                      title={option.label}\r\n                    >\r\n                      <IconComponent className=\"h-6 w-6 mx-auto\" />\r\n                      {isSelected && (\r\n                        <div className=\"absolute -top-1 -right-1\">\r\n                          <Check className=\"h-4 w-4 text-blue-400 bg-blue-500 rounded-full p-0.5\" />\r\n                        </div>\r\n                      )}\r\n                    </motion.button>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Color Selection */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-slate-300 mb-3\">\r\n                Цвет\r\n              </label>\r\n              <div className=\"grid grid-cols-5 md:grid-cols-10 gap-3\">\r\n                {colorOptions.map(color => {\r\n                  const isSelected = formData.color === color.value;\r\n                  \r\n                  return (\r\n                    <motion.button\r\n                      key={color.value}\r\n                      type=\"button\"\r\n                      whileHover={{ scale: 1.1 }}\r\n                      whileTap={{ scale: 0.95 }}\r\n                      onClick={() => setFormData(prev => ({ ...prev, color: color.value }))}\r\n                      className={`relative w-12 h-12 rounded-lg border-2 transition-all ${\r\n                        isSelected ? 'border-white' : 'border-slate-600'\r\n                      }`}\r\n                      style={{ backgroundColor: color.value }}\r\n                      title={color.label}\r\n                    >\r\n                      {isSelected && (\r\n                        <Check className=\"h-5 w-5 text-white mx-auto\" />\r\n                      )}\r\n                    </motion.button>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Preview */}\r\n            <div className=\"bg-slate-700/50 rounded-lg p-4\">\r\n              <label className=\"block text-sm font-medium text-slate-300 mb-2\">\r\n                Предварительный просмотр\r\n              </label>\r\n              <div className=\"flex items-center space-x-3\">\r\n                {React.createElement(\r\n                  iconOptions.find(icon => icon.value === formData.icon)?.icon || Folder,\r\n                  {\r\n                    className: \"h-6 w-6\",\r\n                    style: { color: formData.color }\r\n                  }\r\n                )}\r\n                <span className=\"text-white font-medium\">\r\n                  {formData.name || 'Название папки'}\r\n                </span>\r\n              </div>\r\n              {formData.description && (\r\n                <p className=\"text-slate-400 text-sm mt-2\">{formData.description}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Action Buttons */}\r\n            <div className=\"flex items-center justify-end space-x-4 pt-6 border-t border-slate-700\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={onClose}\r\n                className=\"px-6 py-3 text-slate-300 hover:text-white transition-colors\"\r\n              >\r\n                Отмена\r\n              </button>\r\n              <motion.button\r\n                type=\"submit\"\r\n                whileHover={{ scale: 1.02 }}\r\n                whileTap={{ scale: 0.98 }}\r\n                className=\"px-6 py-3 bg-blue-500 hover:bg-blue-600 text-white rounded-lg transition-colors font-medium\"\r\n              >\r\n                {folder ? 'Сохранить изменения' : 'Создать папку'}\r\n              </motion.button>\r\n            </div>\r\n          </form>\r\n        </motion.div>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  );\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 8366, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8371, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/dashboard/network-dashboard.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useNetworkStore } from '@/store/network-store';\nimport { motion } from 'framer-motion';\nimport {\n  Network,\n  Server,\n  Activity,\n  Shield,\n  Clock,\n  RefreshCw,\n  Settings,\n  FolderOpen,\n  Download,\n  AlertTriangle,\n  Monitor,\n  Plus,\n} from 'lucide-react';\nimport { FolderTree } from '../ui/folder-tree';\nimport { MetricsCard } from '../ui/metrics-card';\nimport { BandwidthChart } from '../ui/bandwidth-chart';\nimport { DevicesSection } from './devices-section';\nimport { AlertsPanel } from '../ui/alerts-panel';\nimport { SystemHealthCard } from '../ui/system-health-card';\nimport { NetworkTopology } from '../ui/network-topology';\nimport { DeviceModal } from '../ui/device-modal';\nimport { FolderModal } from '../ui/folder-modal';\n\nexport function NetworkDashboard() {\n  const [mounted, setMounted] = useState(false);\n\n  const {\n    devices,\n    folders,\n    metrics,\n    bandwidthHistory,\n    alerts,\n    systemHealth,\n    selectedFolderId,\n    sidebarCollapsed,\n    rootFolderExpanded,\n    othersExpanded,\n    useApi,\n    apiConnected,\n    setSidebarCollapsed,\n    setSelectedFolder,\n    addDevice,\n    updateDevice,\n    deleteDevice,\n    addFolder,\n    updateFolder,\n    deleteFolder,\n    refreshData,\n    exportData,\n    resetToMockData,\n    initializeApi,\n  } = useNetworkStore();\n\n  const [deviceModalOpen, setDeviceModalOpen] = useState(false);\n  const [folderModalOpen, setFolderModalOpen] = useState(false);\n  const [editingDevice, setEditingDevice] = useState<string | null>(null);\n  const [editingFolder, setEditingFolder] = useState<string | null>(null);\n  const [folderParentId, setFolderParentId] = useState<string>('root');\n  const [deviceFolderId, setDeviceFolderId] = useState<string>('root');\n\n  // Исправление hydration error и инициализация API\n  useEffect(() => {\n    setMounted(true);\n\n    // Пробуем подключиться к API при загрузке\n    const initApi = async () => {\n      try {\n        await initializeApi();\n      } catch (error) {\n        console.error('Ошибка инициализации API:', error);\n      }\n    };\n\n    initApi();\n  }, [initializeApi]);\n\n  if (!mounted) {\n    return (\n      <div className=\"flex min-h-screen items-center justify-center bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900\">\n        <div className=\"text-white\">Загрузка...</div>\n      </div>\n    );\n  }\n\n  const handleAddDevice = () => {\n    setEditingDevice(null);\n    setDeviceFolderId(selectedFolderId || 'root');\n    setDeviceModalOpen(true);\n  };\n\n  const handleAddDeviceToFolder = (folderId: string) => {\n    setEditingDevice(null);\n    setDeviceFolderId(folderId);\n    setDeviceModalOpen(true);\n  };\n\n  const handleEditDevice = (deviceId: string) => {\n    setEditingDevice(deviceId);\n    setDeviceModalOpen(true);\n  };\n\n  const handleDeleteDevice = (deviceId: string) => {\n    if (confirm('Вы уверены, что хотите удалить это устройство?')) {\n      deleteDevice(deviceId);\n    }\n  };\n\n  const handleAddFolder = (parentId: string) => {\n    setEditingFolder(null);\n    setFolderParentId(parentId);\n    setFolderModalOpen(true);\n  };\n\n  const handleEditFolder = (folderId: string) => {\n    setEditingFolder(folderId);\n    setFolderModalOpen(true);\n  };\n\n  const handleDeleteFolder = (folderId: string) => {\n    if (\n      confirm(\n        'Вы уверены, что хотите удалить эту папку? Все устройства будут перемещены в корневую папку.'\n      )\n    ) {\n      deleteFolder(folderId);\n    }\n  };\n\n  const handleRefreshData = () => {\n    refreshData();\n  };\n\n  const handleCreateBackup = () => {\n    const data = exportData();\n    const blob = new Blob([data], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `network-monitor-backup-${new Date().toISOString().split('T')[0]}.json`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const getEditingDevice = () => {\n    return editingDevice\n      ? devices.find((d) => d.id === editingDevice)\n      : undefined;\n  };\n\n  const getEditingFolder = () => {\n    if (!editingFolder) return undefined;\n\n    const findFolder = (folders: any[]): any => {\n      for (const folder of folders) {\n        if (folder.id === editingFolder) return folder;\n        if (folder.children) {\n          const found = findFolder(folder.children);\n          if (found) return found;\n        }\n      }\n      return undefined;\n    };\n\n    return findFolder(folders);\n  };\n\n  return (\n    <div className=\"flex min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900\">\n      {/* Sidebar */}\n      <div\n        className={`${sidebarCollapsed ? 'w-16' : 'w-80'} flex flex-col border-r border-slate-700/50 bg-slate-800/30 backdrop-blur-sm transition-all duration-300`}\n      >\n        <div className=\"border-b border-slate-700/50 p-4\">\n          <div className=\"flex items-center justify-between\">\n            {!sidebarCollapsed && (\n              <div className=\"flex min-w-0 flex-1 items-center space-x-2\">\n                <FolderOpen className=\"h-4 w-4 flex-shrink-0 text-blue-400\" />\n                <h2 className=\"truncate text-sm font-semibold text-white\">\n                  Папки устройств\n                </h2>\n              </div>\n            )}\n            <div className=\"flex flex-shrink-0 items-center space-x-0.5\">\n              {!sidebarCollapsed && (\n                <>\n                  <button\n                    onClick={handleAddDevice}\n                    className=\"rounded p-1 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-green-400\"\n                    title=\"Добавить устройство\"\n                  >\n                    <Monitor className=\"h-3 w-3\" />\n                  </button>\n                  <button\n                    onClick={() => handleAddFolder('root')}\n                    className=\"rounded p-1 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-blue-400\"\n                    title=\"Добавить папку\"\n                  >\n                    <Plus className=\"h-3 w-3\" />\n                  </button>\n                  <button\n                    onClick={resetToMockData}\n                    className=\"rounded p-1 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-yellow-400\"\n                    title=\"Сбросить к исходным данным\"\n                  >\n                    <RefreshCw className=\"h-3 w-3\" />\n                  </button>\n                </>\n              )}\n              <button\n                onClick={() => setSidebarCollapsed(!sidebarCollapsed)}\n                className={`rounded p-1.5 transition-colors ${\n                  sidebarCollapsed\n                    ? 'bg-blue-500/20 text-blue-400 hover:bg-blue-500/30'\n                    : 'text-slate-400 hover:bg-slate-700/50 hover:text-white'\n                }`}\n                title={sidebarCollapsed ? 'Развернуть папки' : 'Свернуть папки'}\n              >\n                <FolderOpen className=\"h-4 w-4\" />\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {!sidebarCollapsed && (\n          <div className=\"flex-1 overflow-y-auto p-4\">\n            <FolderTree\n              folders={folders}\n              devices={devices}\n              selectedFolderId={selectedFolderId}\n              rootFolderExpanded={rootFolderExpanded}\n              othersExpanded={othersExpanded}\n              onFolderSelect={setSelectedFolder}\n              onFolderToggle={(folderId) => {\n                if (folderId === 'root') {\n                  updateFolder('root', { expanded: !rootFolderExpanded });\n                } else if (folderId === 'others') {\n                  updateFolder('others', { expanded: !othersExpanded });\n                } else {\n                  // Рекурсивный поиск папки\n                  const findFolder = (folders: any[]): any => {\n                    for (const folder of folders) {\n                      if (folder.id === folderId) return folder;\n                      if (folder.children && folder.children.length > 0) {\n                        const found = findFolder(folder.children);\n                        if (found) return found;\n                      }\n                    }\n                    return null;\n                  };\n\n                  const folder = findFolder(folders);\n                  if (folder) {\n                    updateFolder(folderId, { expanded: !folder.expanded });\n                  }\n                }\n              }}\n              onAddFolder={handleAddFolder}\n              onEditFolder={handleEditFolder}\n              onDeleteFolder={handleDeleteFolder}\n              onAddDeviceToFolder={handleAddDeviceToFolder}\n            />\n          </div>\n        )}\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex flex-1 flex-col\">\n        {/* Header */}\n        <header className=\"sticky top-0 z-50 border-b border-slate-700/50 bg-slate-800/50 backdrop-blur-sm\">\n          <div className=\"px-4 sm:px-6 lg:px-8\">\n            <div className=\"flex h-16 items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"rounded-lg border border-blue-500/20 bg-blue-500/10 p-2\">\n                  <Network className=\"h-8 w-8 text-blue-400\" />\n                </div>\n                <div>\n                  <h1 className=\"text-xl font-bold text-white\">\n                    Network Monitor Pro\n                  </h1>\n                  <p className=\"text-sm text-slate-400\">\n                    Панель мониторинга сети в реальном времени\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"flex items-center space-x-2 text-sm text-slate-400\">\n                  <div className=\"h-2 w-2 animate-pulse rounded-full bg-green-500\"></div>\n                  <span>Live</span>\n                </div>\n                <button\n                  onClick={handleRefreshData}\n                  className=\"rounded-lg p-2 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-white\"\n                >\n                  <RefreshCw className=\"h-5 w-5\" />\n                </button>\n                <button className=\"rounded-lg p-2 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-white\">\n                  <Settings className=\"h-5 w-5\" />\n                </button>\n                <button\n                  onClick={handleCreateBackup}\n                  className=\"rounded-lg p-2 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-white\"\n                  title=\"Создать резервную копию\"\n                >\n                  <Download className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </header>\n\n        <main className=\"flex-1 overflow-y-auto px-2 py-6 sm:px-4 lg:px-6\">\n          {/* Key Metrics */}\n          <div className=\"mb-6 grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-5\">\n            <MetricsCard\n              title=\"Всего устройств\"\n              value={metrics.totalDevices}\n              icon={Server}\n              color=\"blue\"\n            />\n            <MetricsCard\n              title=\"Устройства онлайн\"\n              value={metrics.onlineDevices}\n              icon={Activity}\n              color=\"green\"\n            />\n            <MetricsCard\n              title=\"Предупреждения\"\n              value={metrics.warningDevices}\n              icon={AlertTriangle}\n              color=\"yellow\"\n            />\n            <MetricsCard\n              title=\"Время отклика\"\n              value={`${metrics.averageResponseTime}ms`}\n              icon={Clock}\n              color=\"purple\"\n            />\n            <MetricsCard\n              title=\"Время работы сети\"\n              value={`${metrics.networkUptime}%`}\n              icon={Shield}\n              color=\"green\"\n            />\n          </div>\n\n          {/* Main Dashboard Grid */}\n          <div className=\"mb-6 grid grid-cols-1 gap-6 lg:grid-cols-3\">\n            {/* Bandwidth Chart */}\n            <div className=\"lg:col-span-2\">\n              <BandwidthChart />\n            </div>\n\n            {/* System Health */}\n            <div>\n              <SystemHealthCard />\n            </div>\n          </div>\n\n          {/* Network Topology */}\n          <div className=\"mb-6\">\n            <NetworkTopology />\n          </div>\n\n          {/* Devices and Alerts */}\n          <div className=\"grid grid-cols-1 gap-6 xl:grid-cols-4\">\n            {/* Device Grid */}\n            <div className=\"xl:col-span-3\">\n              <DevicesSection\n                onAddDevice={handleAddDevice}\n                onEditDevice={handleEditDevice}\n                onDeleteDevice={handleDeleteDevice}\n              />\n            </div>\n\n            {/* Alerts Panel */}\n            <div className=\"xl:col-span-1\">\n              <AlertsPanel />\n            </div>\n          </div>\n        </main>\n      </div>\n\n      {/* Modals */}\n      <DeviceModal\n        isOpen={deviceModalOpen}\n        onClose={() => setDeviceModalOpen(false)}\n        onSave={(deviceData) => {\n          if (editingDevice) {\n            updateDevice(editingDevice, deviceData);\n          } else {\n            addDevice(deviceData);\n          }\n          setEditingDevice(null);\n        }}\n        device={getEditingDevice()}\n        folders={folders}\n        defaultFolderId={deviceFolderId}\n      />\n\n      <FolderModal\n        isOpen={folderModalOpen}\n        onClose={() => setFolderModalOpen(false)}\n        onSave={(folderData) => {\n          if (editingFolder) {\n            updateFolder(editingFolder, folderData);\n          } else {\n            addFolder(folderData);\n          }\n          setEditingFolder(null);\n        }}\n        folder={getEditingFolder()}\n        parentId={folderParentId}\n        folders={folders}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 9054, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9059, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/app/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { NetworkDashboard } from '@/components/dashboard/network-dashboard';\r\n\r\nexport default function HomePage() {\r\n  return (\r\n    <main className=\"min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900\">\r\n      <NetworkDashboard />\r\n    </main>\r\n  );\r\n} "],"names":[],"mappings":";;;;;;AAAA;;;AAIe,SAAS;IACtB,qBACE,waAAC;QAAK,WAAU;kBACd,cAAA,waAAC,+KAAA,CAAA,mBAAgB;;;;;;;;;;AAGvB"}},
    {"offset": {"line": 9082, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}