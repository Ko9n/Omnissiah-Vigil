{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/folder-tree.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState } from 'react';\nimport { DeviceFolder, NetworkDevice } from '@/types/schemas';\nimport { useNetworkStore } from '@/store/network-store';\nimport {\n  ChevronRight,\n  ChevronDown,\n  Folder,\n  FolderOpen,\n  Plus,\n  Edit,\n  Trash2,\n  UserPlus,\n  Network,\n  Server,\n  Monitor,\n  Printer,\n  Smartphone,\n  Globe,\n  Database,\n  Building,\n  Shield,\n} from 'lucide-react';\n\ninterface FolderTreeProps {\n  folders: DeviceFolder[];\n  devices: NetworkDevice[];\n  selectedFolderId?: string;\n  rootFolderExpanded: boolean;\n\n  onFolderSelect: (folderId: string) => void;\n  onFolderToggle: (folderId: string) => void;\n  onAddFolder: (parentId: string) => void;\n  onEditFolder: (folderId: string) => void;\n  onDeleteFolder: (folderId: string) => void;\n  onAddDeviceToFolder: (folderId: string) => void;\n  onEditDevice?: (deviceId: string) => void;\n  onDeleteDevice?: (deviceId: string) => void;\n}\n\nconst iconMap = {\n  Network,\n  Server,\n  Monitor,\n  Printer,\n  Smartphone,\n  Globe,\n  Database,\n  Building,\n  Folder,\n  Shield,\n};\n\nexport function FolderTree({\n  folders,\n  devices,\n  selectedFolderId,\n  rootFolderExpanded,\n  onFolderSelect,\n  onFolderToggle,\n  onAddFolder,\n  onEditFolder,\n  onDeleteFolder,\n  onAddDeviceToFolder,\n  onEditDevice,\n  onDeleteDevice,\n}: FolderTreeProps) {\n  const getFolderExpandedState = useNetworkStore(\n    (state) => state.getFolderExpandedState\n  );\n  const getDeviceCount = (folderId: string): number => {\n    if (folderId === 'root') {\n      // Корневая папка показывает только устройства БЕЗ папки\n      return devices.filter(\n        (device) => !device.folderId || device.folderId === 'root'\n      ).length;\n    }\n    return devices.filter((device) => device.folderId === folderId).length;\n  };\n\n  const getOnlineDeviceCount = (folderId: string): number => {\n    if (folderId === 'root') {\n      // Корневая папка показывает только устройства БЕЗ папки\n      return devices.filter(\n        (device) =>\n          (!device.folderId || device.folderId === 'root') &&\n          device.status === 'online'\n      ).length;\n    }\n    return devices.filter(\n      (device) => device.folderId === folderId && device.status === 'online'\n    ).length;\n  };\n\n  // Функция обработки клика на папку\n  const handleFolderClick = (folder: DeviceFolder) => {\n    const hasChildren = folder.children && folder.children.length > 0;\n    const folderDevices = devices.filter(\n      (device) => device.folderId === folder.id\n    );\n    const hasDevices = folderDevices.length > 0;\n    const shouldExpand = hasChildren || hasDevices;\n    const isExpanded = getFolderExpandedState(folder.id);\n\n    if (selectedFolderId === folder.id) {\n      // Если папка уже выбрана, только переключаем её состояние (развернуть/свернуть)\n      if (shouldExpand) {\n        onFolderToggle(folder.id);\n      }\n    } else {\n      // Если папка не выбрана, выбираем её и разворачиваем (если есть содержимое)\n      onFolderSelect(folder.id);\n      if (shouldExpand && !isExpanded) {\n        onFolderToggle(folder.id);\n      }\n    }\n  };\n\n  // Функция для рендеринга устройства\n  const renderDevice = (device: NetworkDevice, level: number = 0) => {\n    return (\n      <div\n        key={device.id}\n        className=\"select-none\"\n        draggable\n        onDragStart={(e) => {\n          e.dataTransfer.setData('text/plain', device.id);\n          e.dataTransfer.setData('device-id', device.id);\n        }}\n      >\n        <div\n          className={`group flex cursor-pointer items-center justify-between rounded-lg p-2 transition-all duration-200 ${\n            selectedFolderId === device.id\n              ? 'border border-green-500/30 bg-green-500/20'\n              : 'hover:bg-slate-700/50'\n          }`}\n          style={{ paddingLeft: `${level * 20 + 28}px` }}\n          onClick={() => {\n            console.log('Device clicked:', device.id, device.name);\n            onFolderSelect(device.id);\n          }}\n        >\n          <div className=\"flex flex-1 items-center space-x-2\">\n            <div\n              className=\"rounded-lg border p-1.5\"\n              style={{\n                backgroundColor:\n                  device.status === 'online'\n                    ? '#10B98120'\n                    : device.status === 'warning'\n                      ? '#F59E0B20'\n                      : '#EF444420',\n                borderColor:\n                  device.status === 'online'\n                    ? '#10B98140'\n                    : device.status === 'warning'\n                      ? '#F59E0B40'\n                      : '#EF444440',\n                color:\n                  device.status === 'online'\n                    ? '#10B981'\n                    : device.status === 'warning'\n                      ? '#F59E0B'\n                      : '#EF4444',\n              }}\n            >\n              {(() => {\n                const deviceIcons = {\n                  router: Network,\n                  switch: Network,\n                  server: Server,\n                  workstation: Monitor,\n                  printer: Printer,\n                  mobile: Smartphone,\n                  firewall: Shield,\n                  access_point: Globe,\n                };\n                const DeviceIcon =\n                  deviceIcons[device.type as keyof typeof deviceIcons] ||\n                  Monitor;\n                return <DeviceIcon className=\"h-4 w-4\" />;\n              })()}\n            </div>\n\n            <div className=\"flex-1\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-sm font-medium text-white\">\n                  {device.name}\n                </span>\n                <div className=\"flex items-center space-x-1 text-xs\">\n                  <span\n                    className={\n                      device.status === 'online'\n                        ? 'text-green-400'\n                        : device.status === 'warning'\n                          ? 'text-yellow-400'\n                          : 'text-red-400'\n                    }\n                  >\n                    {device.status}\n                  </span>\n                </div>\n              </div>\n              <p className=\"truncate text-xs text-slate-500\">{device.ip}</p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-1 opacity-0 transition-opacity group-hover:opacity-100\">\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                if (onEditDevice) {\n                  onEditDevice(device.id);\n                }\n              }}\n              className=\"rounded p-1 text-slate-400 hover:bg-slate-600/50 hover:text-white\"\n              title=\"Редактировать устройство\"\n            >\n              <Edit className=\"h-3 w-3\" />\n            </button>\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                if (onDeleteDevice) {\n                  onDeleteDevice(device.id);\n                }\n              }}\n              className=\"rounded p-1 text-slate-400 hover:bg-slate-600/50 hover:text-red-400\"\n              title=\"Удалить устройство\"\n            >\n              <Trash2 className=\"h-3 w-3\" />\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const renderFolder = (folder: DeviceFolder, level: number = 0) => {\n    const IconComponent =\n      iconMap[folder.icon as keyof typeof iconMap] || Folder;\n    const deviceCount = getDeviceCount(folder.id);\n    const onlineCount = getOnlineDeviceCount(folder.id);\n    const hasChildren = folder.children && folder.children.length > 0;\n    const folderDevices = devices.filter(\n      (device) => device.folderId === folder.id\n    );\n    const hasDevices = folderDevices.length > 0;\n    // Папки ВСЕГДА должны иметь кнопку expand (кроме возможно пустых, но лучше показывать всегда)\n    const shouldShowExpandButton = true;\n    // Используем локальное состояние раскрытия вместо folder.expanded\n    const isExpanded = getFolderExpandedState(folder.id);\n\n    return (\n      <div key={folder.id} className=\"select-none\">\n        <div\n          className={`group flex cursor-pointer items-center justify-between rounded-lg p-2 transition-all duration-200 ${\n            selectedFolderId === folder.id\n              ? 'border border-blue-500/30 bg-blue-500/20'\n              : 'hover:bg-slate-700/50'\n          }`}\n          style={{ paddingLeft: `${level * 20 + 8}px` }}\n          onClick={() => {\n            console.log('Folder clicked:', folder.id, folder.name);\n            handleFolderClick(folder);\n          }}\n          onDragOver={(e) => {\n            e.preventDefault();\n            e.currentTarget.classList.add('bg-blue-500/10');\n          }}\n          onDragLeave={(e) => {\n            e.currentTarget.classList.remove('bg-blue-500/10');\n          }}\n          onDrop={(e) => {\n            e.preventDefault();\n            e.currentTarget.classList.remove('bg-blue-500/10');\n            const deviceId = e.dataTransfer.getData('device-id');\n            if (deviceId) {\n              console.log('Moving device', deviceId, 'to folder', folder.id);\n              // TODO: Implement device move logic\n            }\n          }}\n        >\n          <div className=\"flex flex-1 items-center space-x-2\">\n            {shouldShowExpandButton && (\n              <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  console.log(\n                    'Toggle folder:',\n                    folder.id,\n                    'current expanded:',\n                    isExpanded\n                  );\n                  onFolderToggle(folder.id);\n                }}\n                className=\"rounded p-1 hover:bg-slate-600/50\"\n              >\n                {isExpanded ? (\n                  <ChevronDown className=\"h-4 w-4 text-slate-400\" />\n                ) : (\n                  <ChevronRight className=\"h-4 w-4 text-slate-400\" />\n                )}\n              </button>\n            )}\n\n            <div\n              className=\"rounded-lg border p-1.5\"\n              style={{\n                backgroundColor: `${folder.color}20`,\n                borderColor: `${folder.color}40`,\n                color: folder.color,\n              }}\n            >\n              {isExpanded && shouldShowExpandButton ? (\n                <FolderOpen className=\"h-4 w-4\" />\n              ) : (\n                <IconComponent className=\"h-4 w-4\" />\n              )}\n            </div>\n\n            <div className=\"flex-1\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-sm font-medium text-white\">\n                  {folder.name}\n                </span>\n                {deviceCount > 0 && (\n                  <div className=\"flex items-center space-x-1 text-xs\">\n                    <span className=\"text-green-400\">{onlineCount}</span>\n                    <span className=\"text-slate-500\">/</span>\n                    <span className=\"text-slate-400\">{deviceCount}</span>\n                  </div>\n                )}\n              </div>\n              {folder.description && (\n                <p className=\"truncate text-xs text-slate-500\">\n                  {folder.description}\n                </p>\n              )}\n            </div>\n          </div>\n\n          {/* Всегда видимые кнопки действий */}\n          <div className=\"flex items-center space-x-1 opacity-0 transition-opacity group-hover:opacity-100\">\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                onAddDeviceToFolder(folder.id);\n              }}\n              className=\"rounded p-1 text-slate-400 hover:bg-slate-600/50 hover:text-green-400\"\n              title=\"Добавить устройство в эту папку\"\n            >\n              <Monitor className=\"h-3 w-3\" />\n            </button>\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                onAddFolder(folder.id);\n              }}\n              className=\"rounded p-1 text-slate-400 hover:bg-slate-600/50 hover:text-blue-400\"\n              title=\"Добавить подпапку\"\n            >\n              <Plus className=\"h-3 w-3\" />\n            </button>\n            {folder.id !== 'root' && (\n              <>\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    onEditFolder(folder.id);\n                  }}\n                  className=\"rounded p-1 text-slate-400 hover:bg-slate-600/50 hover:text-white\"\n                  title=\"Редактировать папку\"\n                >\n                  <Edit className=\"h-3 w-3\" />\n                </button>\n                <button\n                  onClick={(e) => {\n                    e.stopPropagation();\n                    onDeleteFolder(folder.id);\n                  }}\n                  className=\"rounded p-1 text-slate-400 hover:bg-slate-600/50 hover:text-red-400\"\n                  title=\"Удалить папку\"\n                >\n                  <Trash2 className=\"h-3 w-3\" />\n                </button>\n              </>\n            )}\n          </div>\n        </div>\n\n        {isExpanded && (\n          <div className=\"mt-1\">\n            {/* Подпапки */}\n            {hasChildren &&\n              folder.children.map((child: DeviceFolder) =>\n                renderFolder(child, level + 1)\n              )}\n\n            {/* Устройства в этой папке */}\n            {folderDevices.length > 0 &&\n              folderDevices.map((device) => renderDevice(device, level + 1))}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  // Создаем виртуальную корневую папку\n  const rootFolder: DeviceFolder = {\n    id: 'root',\n    name: 'Корневые устройства',\n    description: 'Устройства без папки',\n    parentId: undefined,\n    color: '#3B82F6',\n    icon: 'Network',\n    expanded: rootFolderExpanded,\n    children: folders,\n  };\n\n  const totalDevices = devices.length;\n  const totalOnline = devices.filter((d) => d.status === 'online').length;\n\n  return (\n    <div className=\"space-y-1\">\n      {/* Корневая папка \"Корневые устройства\" */}\n      <div className=\"select-none\">\n        <div\n          className={`group flex cursor-pointer items-center justify-between rounded-lg p-2 transition-all duration-200 ${\n            selectedFolderId === 'root' || !selectedFolderId\n              ? 'border border-blue-500/30 bg-blue-500/20'\n              : 'hover:bg-slate-700/50'\n          }`}\n          onClick={() => {\n            console.log('Root folder clicked');\n            handleFolderClick(rootFolder);\n          }}\n        >\n          <div className=\"flex flex-1 items-center space-x-2\">\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                onFolderToggle('root');\n              }}\n              className=\"rounded p-1 hover:bg-slate-600/50\"\n            >\n              {rootFolder.expanded ? (\n                <ChevronDown className=\"h-4 w-4 text-slate-400\" />\n              ) : (\n                <ChevronRight className=\"h-4 w-4 text-slate-400\" />\n              )}\n            </button>\n\n            <div\n              className=\"rounded-lg border p-1.5\"\n              style={{\n                backgroundColor: '#3B82F620',\n                borderColor: '#3B82F640',\n                color: '#3B82F6',\n              }}\n            >\n              {rootFolder.expanded ? (\n                <FolderOpen className=\"h-4 w-4\" />\n              ) : (\n                <Network className=\"h-4 w-4\" />\n              )}\n            </div>\n\n            <div className=\"flex-1\">\n              <div className=\"flex items-center space-x-2\">\n                <span className=\"text-sm font-medium text-white\">\n                  Корневые устройства\n                </span>\n                <div className=\"flex items-center space-x-1 text-xs\">\n                  <span className=\"text-green-400\">\n                    {getOnlineDeviceCount('root')}\n                  </span>\n                  <span className=\"text-slate-500\">/</span>\n                  <span className=\"text-slate-400\">\n                    {getDeviceCount('root')}\n                  </span>\n                </div>\n              </div>\n              <p className=\"truncate text-xs text-slate-500\">\n                Устройства без папки\n              </p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-1 opacity-0 transition-opacity group-hover:opacity-100\">\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                onAddDeviceToFolder('root');\n              }}\n              className=\"rounded p-1 text-slate-400 hover:bg-slate-600/50 hover:text-green-400\"\n              title=\"Добавить устройство в корень\"\n            >\n              <Monitor className=\"h-3 w-3\" />\n            </button>\n            <button\n              onClick={(e) => {\n                e.stopPropagation();\n                onAddFolder('root');\n              }}\n              className=\"rounded p-1 text-slate-400 hover:bg-slate-600/50 hover:text-blue-400\"\n              title=\"Добавить папку\"\n            >\n              <Plus className=\"h-3 w-3\" />\n            </button>\n          </div>\n        </div>\n\n        {/* Корневые устройства и папки */}\n        {rootFolder.expanded && (\n          <div className=\"mt-1\">\n            {/* СНАЧАЛА корневые устройства (ТОЛЬКО без папки) */}\n            {(() => {\n              const rootDevices = devices.filter(\n                (device) => !device.folderId || device.folderId === 'root'\n              );\n\n              return rootDevices.map((device) => renderDevice(device, 1));\n            })()}\n\n            {/* ПОТОМ все папки */}\n            {folders.map((folder) => renderFolder(folder, 1))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 769, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 774, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/metrics-card.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { LucideIcon } from 'lucide-react';\r\nimport { Card } from './card';\r\n\r\ninterface MetricsCardProps {\r\n  title: string;\r\n  value: string | number;\r\n  icon: LucideIcon;\r\n  color: 'blue' | 'green' | 'yellow' | 'red' | 'purple' | 'indigo';\r\n  trend?: {\r\n    value: number;\r\n    isPositive: boolean;\r\n  };\r\n  loading?: boolean;\r\n}\r\n\r\nconst colorClasses = {\r\n  blue: 'text-blue-400 bg-blue-500/10',\r\n  green: 'text-green-400 bg-green-500/10',\r\n  yellow: 'text-yellow-400 bg-yellow-500/10',\r\n  red: 'text-red-400 bg-red-500/10',\r\n  purple: 'text-purple-400 bg-purple-500/10',\r\n  indigo: 'text-indigo-400 bg-indigo-500/10',\r\n};\r\n\r\nconst MetricsCard = React.memo<MetricsCardProps>(\r\n  ({ title, value, icon: Icon, color, trend, loading = false }) => {\r\n    return (\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.3 }}\r\n        whileHover={{ scale: 1.02 }}\r\n        whileTap={{ scale: 0.98 }}\r\n      >\r\n        <Card className=\"border-slate-700 bg-slate-800/50 transition-all duration-200 hover:bg-slate-800/70\">\r\n          <div className=\"p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                <div className={`rounded-lg p-2 ${colorClasses[color]}`}>\r\n                  <Icon className=\"h-5 w-5\" />\r\n                </div>\r\n                <div>\r\n                  <p className=\"text-sm font-medium text-slate-400\">{title}</p>\r\n                  <div className=\"flex items-baseline space-x-2\">\r\n                    {loading ? (\r\n                      <div className=\"h-6 w-16 animate-pulse rounded bg-slate-700\" />\r\n                    ) : (\r\n                      <motion.p\r\n                        className=\"text-2xl font-bold text-white\"\r\n                        key={value} // Re-animate when value changes\r\n                        initial={{ scale: 1.1 }}\r\n                        animate={{ scale: 1 }}\r\n                        transition={{ duration: 0.2 }}\r\n                      >\r\n                        {value}\r\n                      </motion.p>\r\n                    )}\r\n\r\n                    {trend && !loading && (\r\n                      <motion.span\r\n                        initial={{ opacity: 0, x: -10 }}\r\n                        animate={{ opacity: 1, x: 0 }}\r\n                        className={`text-xs font-medium ${\r\n                          trend.isPositive ? 'text-green-400' : 'text-red-400'\r\n                        }`}\r\n                      >\r\n                        {trend.isPositive ? '+' : ''}\r\n                        {trend.value}%\r\n                      </motion.span>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </motion.div>\r\n    );\r\n  }\r\n);\r\n\r\nMetricsCard.displayName = 'MetricsCard';\r\n\r\nexport { MetricsCard };\r\n"],"names":[],"mappings":";;;;;;;;AAAA;;;;;AAmBA,MAAM,eAAe;IACnB,MAAM;IACN,OAAO;IACP,QAAQ;IACR,KAAK;IACL,QAAQ;IACR,QAAQ;AACV;AAEA,MAAM,4BAAc,4QAAA,CAAA,UAAK,CAAC,IAAI,MAC5B,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,KAAK,EAAE;IAC1D,qBACE,4SAAC,mRAAA,CAAA,SAAM,CAAC,GAAG;QACT,SAAS;YAAE,SAAS;YAAG,GAAG;QAAG;QAC7B,SAAS;YAAE,SAAS;YAAG,GAAG;QAAE;QAC5B,YAAY;YAAE,UAAU;QAAI;QAC5B,YAAY;YAAE,OAAO;QAAK;QAC1B,UAAU;YAAE,OAAO;QAAK;kBAExB,cAAA,4SAAC,2JAAA,CAAA,OAAI;YAAC,WAAU;sBACd,cAAA,4SAAC;gBAAI,WAAU;0BACb,cAAA,4SAAC;oBAAI,WAAU;8BACb,cAAA,4SAAC;wBAAI,WAAU;;0CACb,4SAAC;gCAAI,WAAW,CAAC,eAAe,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;0CACrD,cAAA,4SAAC;oCAAK,WAAU;;;;;;;;;;;0CAElB,4SAAC;;kDACC,4SAAC;wCAAE,WAAU;kDAAsC;;;;;;kDACnD,4SAAC;wCAAI,WAAU;;4CACZ,wBACC,4SAAC;gDAAI,WAAU;;;;;qEAEf,4SAAC,mRAAA,CAAA,SAAM,CAAC,CAAC;gDACP,WAAU;gDAEV,SAAS;oDAAE,OAAO;gDAAI;gDACtB,SAAS;oDAAE,OAAO;gDAAE;gDACpB,YAAY;oDAAE,UAAU;gDAAI;0DAE3B;+CALI;;;;;4CASR,SAAS,CAAC,yBACT,4SAAC,mRAAA,CAAA,SAAM,CAAC,IAAI;gDACV,SAAS;oDAAE,SAAS;oDAAG,GAAG,CAAC;gDAAG;gDAC9B,SAAS;oDAAE,SAAS;oDAAG,GAAG;gDAAE;gDAC5B,WAAW,CAAC,oBAAoB,EAC9B,MAAM,UAAU,GAAG,mBAAmB,eACvC,CAAC;;oDAED,MAAM,UAAU,GAAG,MAAM;oDACzB,MAAM,KAAK;oDAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWnC;;AAGF,YAAY,WAAW,GAAG"}},
    {"offset": {"line": 938, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 943, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/bandwidth-chart.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useNetworkStore } from '@/store/network-store';\r\nimport { BandwidthData } from '@/types/schemas';\r\n\r\ninterface BandwidthChartProps {\r\n  data?: BandwidthData[];\r\n}\r\n\r\nexport function BandwidthChart({ data }: BandwidthChartProps) {\r\n  const { bandwidthHistory } = useNetworkStore();\r\n  const [hoveredPoint, setHoveredPoint] = useState<number | null>(null);\r\n\r\n  const chartData = data || bandwidthHistory;\r\n  const maxValue = Math.max(\r\n    ...chartData.map((d) => Math.max(d.upload, d.download, d.total)),\r\n    1\r\n  );\r\n  const chartHeight = 200;\r\n  const chartWidth = 100; // percentage\r\n\r\n  const generatePath = (values: number[]) => {\r\n    const points = values.map((value, index) => {\r\n      const x = (index / Math.max(values.length - 1, 1)) * chartWidth;\r\n      const y = chartHeight - (value / maxValue) * chartHeight;\r\n      return `${x},${y}`;\r\n    });\r\n\r\n    if (points.length === 0) return '';\r\n    if (points.length === 1) return `M${points[0]} L${points[0]}`;\r\n\r\n    return `M${points.join(' L')}`;\r\n  };\r\n\r\n  const uploadPath = generatePath(chartData.map((d) => d.upload));\r\n  const downloadPath = generatePath(chartData.map((d) => d.download));\r\n  const totalPath = generatePath(chartData.map((d) => d.total));\r\n\r\n  const formatBandwidth = (value: number) => {\r\n    if (value >= 1000) {\r\n      return `${(value / 1000).toFixed(1)} Gbps`;\r\n    }\r\n    return `${value.toFixed(1)} Mbps`;\r\n  };\r\n\r\n  const currentData = chartData[chartData.length - 1] || {\r\n    upload: 0,\r\n    download: 0,\r\n    total: 0,\r\n    timestamp: new Date(),\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.5 }}\r\n      className=\"rounded-xl border border-slate-700/50 bg-slate-800/50 p-6 backdrop-blur-sm\"\r\n    >\r\n      {/* Header */}\r\n      <div className=\"mb-6 flex items-center justify-between\">\r\n        <div>\r\n          <h3 className=\"text-lg font-semibold text-white\">\r\n            Общий сетевой трафик\r\n          </h3>\r\n          <p className=\"mt-1 text-xs text-slate-400\">\r\n            📡 Суммарная полоса пропускания всех устройств сети\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-4 text-sm\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div className=\"h-3 w-3 rounded-full bg-blue-500\"></div>\r\n            <span className=\"text-slate-400\">Отправка</span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div className=\"h-3 w-3 rounded-full bg-green-500\"></div>\r\n            <span className=\"text-slate-400\">Загрузка</span>\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <div className=\"h-3 w-3 rounded-full bg-purple-500\"></div>\r\n            <span className=\"text-slate-400\">Общий</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Chart */}\r\n      <div className=\"relative mb-6\" style={{ height: chartHeight }}>\r\n        <svg\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          viewBox={`0 0 ${chartWidth} ${chartHeight}`}\r\n          className=\"overflow-visible\"\r\n          preserveAspectRatio=\"none\"\r\n        >\r\n          {/* Grid lines */}\r\n          {[0, 0.25, 0.5, 0.75, 1].map((ratio) => (\r\n            <g key={ratio}>\r\n              <line\r\n                x1=\"0\"\r\n                y1={chartHeight * ratio}\r\n                x2={chartWidth}\r\n                y2={chartHeight * ratio}\r\n                stroke=\"#475569\"\r\n                strokeWidth=\"0.5\"\r\n                opacity=\"0.3\"\r\n              />\r\n              <text\r\n                x=\"-5\"\r\n                y={chartHeight * ratio + 3}\r\n                fill=\"#64748b\"\r\n                fontSize=\"10\"\r\n                textAnchor=\"end\"\r\n              >\r\n                {formatBandwidth(maxValue * (1 - ratio))}\r\n              </text>\r\n            </g>\r\n          ))}\r\n\r\n          {/* Chart lines */}\r\n          {chartData.length > 1 && (\r\n            <>\r\n              {/* Upload line */}\r\n              <motion.path\r\n                d={uploadPath}\r\n                fill=\"none\"\r\n                stroke=\"#3B82F6\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                initial={{ pathLength: 0 }}\r\n                animate={{ pathLength: 1 }}\r\n                transition={{ duration: 1, ease: 'easeInOut' }}\r\n                className=\"opacity-80\"\r\n              />\r\n\r\n              {/* Download line */}\r\n              <motion.path\r\n                d={downloadPath}\r\n                fill=\"none\"\r\n                stroke=\"#10B981\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                initial={{ pathLength: 0 }}\r\n                animate={{ pathLength: 1 }}\r\n                transition={{ duration: 1, delay: 0.2, ease: 'easeInOut' }}\r\n                className=\"opacity-80\"\r\n              />\r\n\r\n              {/* Total line */}\r\n              <motion.path\r\n                d={totalPath}\r\n                fill=\"none\"\r\n                stroke=\"#8B5CF6\"\r\n                strokeWidth=\"2\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                initial={{ pathLength: 0 }}\r\n                animate={{ pathLength: 1 }}\r\n                transition={{ duration: 1, delay: 0.4, ease: 'easeInOut' }}\r\n                className=\"opacity-80\"\r\n              />\r\n            </>\r\n          )}\r\n\r\n          {/* Data points */}\r\n          {chartData.map((point, index) => {\r\n            const x = (index / Math.max(chartData.length - 1, 1)) * chartWidth;\r\n            const uploadY =\r\n              chartHeight - (point.upload / maxValue) * chartHeight;\r\n            const downloadY =\r\n              chartHeight - (point.download / maxValue) * chartHeight;\r\n            const totalY = chartHeight - (point.total / maxValue) * chartHeight;\r\n\r\n            return (\r\n              <g key={index}>\r\n                <motion.circle\r\n                  cx={x}\r\n                  cy={uploadY}\r\n                  r={hoveredPoint === index ? '4' : '3'}\r\n                  fill=\"#3B82F6\"\r\n                  className=\"cursor-pointer opacity-80\"\r\n                  initial={{ scale: 0 }}\r\n                  animate={{ scale: 1 }}\r\n                  transition={{ duration: 0.3, delay: index * 0.05 }}\r\n                  onMouseEnter={() => setHoveredPoint(index)}\r\n                  onMouseLeave={() => setHoveredPoint(null)}\r\n                />\r\n                <motion.circle\r\n                  cx={x}\r\n                  cy={downloadY}\r\n                  r={hoveredPoint === index ? '4' : '3'}\r\n                  fill=\"#10B981\"\r\n                  className=\"cursor-pointer opacity-80\"\r\n                  initial={{ scale: 0 }}\r\n                  animate={{ scale: 1 }}\r\n                  transition={{ duration: 0.3, delay: index * 0.05 + 0.1 }}\r\n                  onMouseEnter={() => setHoveredPoint(index)}\r\n                  onMouseLeave={() => setHoveredPoint(null)}\r\n                />\r\n                <motion.circle\r\n                  cx={x}\r\n                  cy={totalY}\r\n                  r={hoveredPoint === index ? '4' : '3'}\r\n                  fill=\"#8B5CF6\"\r\n                  className=\"cursor-pointer opacity-80\"\r\n                  initial={{ scale: 0 }}\r\n                  animate={{ scale: 1 }}\r\n                  transition={{ duration: 0.3, delay: index * 0.05 + 0.2 }}\r\n                  onMouseEnter={() => setHoveredPoint(index)}\r\n                  onMouseLeave={() => setHoveredPoint(null)}\r\n                />\r\n              </g>\r\n            );\r\n          })}\r\n        </svg>\r\n\r\n        {/* Hover tooltip */}\r\n        {hoveredPoint !== null && chartData[hoveredPoint] && (\r\n          <motion.div\r\n            initial={{ opacity: 0, scale: 0.8 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            exit={{ opacity: 0, scale: 0.8 }}\r\n            className=\"pointer-events-none absolute z-10 rounded-lg border border-slate-600 bg-slate-900/90 p-3 text-sm backdrop-blur-sm\"\r\n            style={{\r\n              left: `${(hoveredPoint / Math.max(chartData.length - 1, 1)) * 100}%`,\r\n              top: '10px',\r\n              transform: 'translateX(-50%)',\r\n            }}\r\n          >\r\n            <div className=\"space-y-1\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <div className=\"h-2 w-2 rounded-full bg-blue-500\"></div>\r\n                <span className=\"text-blue-400\">\r\n                  Отправка: {formatBandwidth(chartData[hoveredPoint].upload)}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <div className=\"h-2 w-2 rounded-full bg-green-500\"></div>\r\n                <span className=\"text-green-400\">\r\n                  Загрузка: {formatBandwidth(chartData[hoveredPoint].download)}\r\n                </span>\r\n              </div>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <div className=\"h-2 w-2 rounded-full bg-purple-500\"></div>\r\n                <span className=\"text-purple-400\">\r\n                  Общий: {formatBandwidth(chartData[hoveredPoint].total)}\r\n                </span>\r\n              </div>\r\n              <div className=\"mt-1 border-t border-slate-600 pt-1 text-xs text-slate-400\">\r\n                {new Date(\r\n                  chartData[hoveredPoint].timestamp\r\n                ).toLocaleTimeString()}\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Current Stats */}\r\n      <div className=\"grid grid-cols-3 gap-4 text-sm\">\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5, delay: 0.2 }}\r\n          className=\"rounded-lg bg-slate-700/30 p-3 text-center\"\r\n        >\r\n          <p className=\"mb-1 text-slate-400\">Текущая отправка</p>\r\n          <p className=\"text-lg font-medium text-blue-400\">\r\n            {formatBandwidth(currentData.upload)}\r\n          </p>\r\n          <div className=\"mt-1 text-xs text-slate-500\">\r\n            ↑ {((currentData.upload / Math.max(maxValue, 1)) * 100).toFixed(1)}%\r\n            от пика\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5, delay: 0.3 }}\r\n          className=\"rounded-lg bg-slate-700/30 p-3 text-center\"\r\n        >\r\n          <p className=\"mb-1 text-slate-400\">Текущая загрузка</p>\r\n          <p className=\"text-lg font-medium text-green-400\">\r\n            {formatBandwidth(currentData.download)}\r\n          </p>\r\n          <div className=\"mt-1 text-xs text-slate-500\">\r\n            ↓{' '}\r\n            {((currentData.download / Math.max(maxValue, 1)) * 100).toFixed(1)}%\r\n            от пика\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 10 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5, delay: 0.4 }}\r\n          className=\"rounded-lg bg-slate-700/30 p-3 text-center\"\r\n        >\r\n          <p className=\"mb-1 text-slate-400\">Общее использование</p>\r\n          <p className=\"text-lg font-medium text-purple-400\">\r\n            {formatBandwidth(currentData.total)}\r\n          </p>\r\n          <div className=\"mt-1 text-xs text-slate-500\">\r\n            ⚡ {((currentData.total / Math.max(maxValue, 1)) * 100).toFixed(1)}%\r\n            от пика\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n\r\n      {/* No data state */}\r\n      {chartData.length === 0 && (\r\n        <div className=\"py-8 text-center text-slate-400\">\r\n          <div className=\"mb-2 text-4xl\">📊</div>\r\n          <p>Нет данных о полосе пропускания</p>\r\n          <p className=\"mt-1 text-sm text-slate-500\">\r\n            Данные появятся после начала мониторинга\r\n          </p>\r\n        </div>\r\n      )}\r\n    </motion.div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1666, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1671, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from 'react';\r\nimport { cva, type VariantProps } from 'class-variance-authority';\r\nimport { cn } from '@/lib/utils';\r\n\r\nconst badgeVariants = cva(\r\n  'inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2',\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default: 'border-transparent bg-primary text-primary-foreground hover:bg-primary/80',\r\n        secondary: 'border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80',\r\n        destructive: 'border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80',\r\n        outline: 'text-foreground',\r\n        success: 'border-transparent bg-green-500 text-white hover:bg-green-600',\r\n        warning: 'border-transparent bg-yellow-500 text-white hover:bg-yellow-600',\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: 'default',\r\n    },\r\n  }\r\n);\r\n\r\nexport interface BadgeProps\r\n  extends React.HTMLAttributes<HTMLDivElement>,\r\n    VariantProps<typeof badgeVariants> {}\r\n\r\nfunction Badge({ className, variant, ...props }: BadgeProps) {\r\n  return (\r\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\r\n  );\r\n}\r\n\r\nexport { Badge, badgeVariants }; "],"names":[],"mappings":";;;;;;;;;;;AAIA,MAAM,gBAAgB,CAAA,GAAA,8OAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,WAAW;YACX,aAAa;YACb,SAAS;YACT,SAAS;YACT,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,4SAAC;QAAI,WAAW,CAAA,GAAA,8IAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS"}},
    {"offset": {"line": 1713, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1718, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/toast.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { X, CheckCircle, AlertCircle, Info, AlertTriangle } from 'lucide-react';\r\n\r\nexport interface Toast {\r\n  id: string;\r\n  type: 'success' | 'error' | 'warning' | 'info';\r\n  title: string;\r\n  message?: string;\r\n  duration?: number;\r\n}\r\n\r\ninterface ToastProps {\r\n  toast: Toast;\r\n  onClose: (id: string) => void;\r\n}\r\n\r\ninterface ToastContainerProps {\r\n  toasts: Toast[];\r\n  onClose: (id: string) => void;\r\n}\r\n\r\nconst ToastItem: React.FC<ToastProps> = ({ toast, onClose }) => {\r\n  useEffect(() => {\r\n    const duration = toast.duration || 5000;\r\n    const timer = setTimeout(() => {\r\n      onClose(toast.id);\r\n    }, duration);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [toast.id, toast.duration, onClose]);\r\n\r\n  const getIcon = () => {\r\n    switch (toast.type) {\r\n      case 'success':\r\n        return <CheckCircle className=\"h-5 w-5 text-green-400\" />;\r\n      case 'error':\r\n        return <AlertCircle className=\"h-5 w-5 text-red-400\" />;\r\n      case 'warning':\r\n        return <AlertTriangle className=\"h-5 w-5 text-yellow-400\" />;\r\n      default:\r\n        return <Info className=\"h-5 w-5 text-blue-400\" />;\r\n    }\r\n  };\r\n\r\n  const getBorderColor = () => {\r\n    switch (toast.type) {\r\n      case 'success':\r\n        return 'border-l-green-500';\r\n      case 'error':\r\n        return 'border-l-red-500';\r\n      case 'warning':\r\n        return 'border-l-yellow-500';\r\n      default:\r\n        return 'border-l-blue-500';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 50, scale: 0.95 }}\r\n      animate={{ opacity: 1, y: 0, scale: 1 }}\r\n      exit={{ opacity: 0, y: -50, scale: 0.95 }}\r\n      transition={{ duration: 0.2 }}\r\n      className={`border border-slate-600/50 bg-slate-800/95 backdrop-blur-sm ${getBorderColor()} w-full max-w-sm rounded-lg border-l-4 p-4 shadow-xl`}\r\n    >\r\n      <div className=\"flex items-start space-x-3\">\r\n        <div className=\"flex-shrink-0\">{getIcon()}</div>\r\n\r\n        <div className=\"min-w-0 flex-1\">\r\n          <h4 className=\"text-sm font-medium text-white\">{toast.title}</h4>\r\n          {toast.message && (\r\n            <p className=\"mt-1 text-sm text-slate-300\">{toast.message}</p>\r\n          )}\r\n        </div>\r\n\r\n        <button\r\n          onClick={() => onClose(toast.id)}\r\n          className=\"flex-shrink-0 text-slate-400 transition-colors hover:text-white\"\r\n        >\r\n          <X className=\"h-4 w-4\" />\r\n        </button>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport const ToastContainer: React.FC<ToastContainerProps> = ({\r\n  toasts,\r\n  onClose,\r\n}) => {\r\n  return (\r\n    <div className=\"fixed right-4 top-4 z-[100] space-y-2\">\r\n      <AnimatePresence>\r\n        {toasts.map((toast) => (\r\n          <ToastItem key={toast.id} toast={toast} onClose={onClose} />\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Hook для управления toast'ами\r\nexport const useToast = () => {\r\n  const [toasts, setToasts] = useState<Toast[]>([]);\r\n\r\n  const addToast = (toast: Omit<Toast, 'id'>) => {\r\n    const id = Date.now().toString();\r\n    setToasts((prev) => [...prev, { ...toast, id }]);\r\n  };\r\n\r\n  const removeToast = (id: string) => {\r\n    setToasts((prev) => prev.filter((toast) => toast.id !== id));\r\n  };\r\n\r\n  const success = (title: string, message?: string, duration?: number) => {\r\n    addToast({ type: 'success', title, message, duration });\r\n  };\r\n\r\n  const error = (title: string, message?: string, duration?: number) => {\r\n    addToast({ type: 'error', title, message, duration });\r\n  };\r\n\r\n  const warning = (title: string, message?: string, duration?: number) => {\r\n    addToast({ type: 'warning', title, message, duration });\r\n  };\r\n\r\n  const info = (title: string, message?: string, duration?: number) => {\r\n    addToast({ type: 'info', title, message, duration });\r\n  };\r\n\r\n  return {\r\n    toasts,\r\n    addToast,\r\n    removeToast,\r\n    success,\r\n    error,\r\n    warning,\r\n    info,\r\n  };\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1970, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1975, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/dashboard/devices-section.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { useNetworkStore } from '@/store/network-store';\nimport { motion } from 'framer-motion';\nimport {\n  Search,\n  Filter,\n  Plus,\n  Grid3X3,\n  List,\n  SortAsc,\n  SortDesc,\n  Network,\n  Server,\n  Monitor,\n  Printer,\n  Smartphone,\n  Shield,\n  Router,\n  Wifi,\n} from 'lucide-react';\nimport { Button } from '@/components/ui/button';\n\nimport { Card } from '@/components/ui/card';\nimport { Badge } from '@/components/ui/badge';\nimport { NetworkDevice } from '@/types/schemas';\nimport { useToast } from '@/components/ui/toast';\n\ntype SortField =\n  | 'name'\n  | 'ip'\n  | 'type'\n  | 'status'\n  | 'responseTime'\n  | 'lastSeen';\ntype ViewMode = 'grid' | 'list';\n\nconst deviceIcons = {\n  router: Router,\n  switch: Network,\n  server: Server,\n  workstation: Monitor,\n  printer: Printer,\n  mobile: Smartphone,\n  firewall: Shield,\n  access_point: Wifi,\n};\n\nconst statusColors = {\n  online: 'bg-green-500',\n  offline: 'bg-red-500',\n  warning: 'bg-yellow-500',\n};\n\nconst statusBadgeColors = {\n  online: 'bg-green-500/20 text-green-400 border-green-500/20',\n  offline: 'bg-red-500/20 text-red-400 border-red-500/20',\n  warning: 'bg-yellow-500/20 text-yellow-400 border-yellow-500/20',\n};\n\nconst DeviceCard = React.memo<{\n  device: NetworkDevice;\n  onEdit: (id: string) => void;\n  onDelete: (id: string) => void;\n}>(({ device, onEdit, onDelete }) => {\n  const Icon = useMemo(\n    () => deviceIcons[device.type] || Network,\n    [device.type]\n  );\n\n  return (\n    <motion.div\n      layout\n      initial={{ opacity: 0, scale: 0.9 }}\n      animate={{ opacity: 1, scale: 1 }}\n      exit={{ opacity: 0, scale: 0.9 }}\n      transition={{ duration: 0.2 }}\n    >\n      <Card className=\"group cursor-pointer border-slate-700 bg-slate-800/50 transition-all duration-200 hover:bg-slate-800/70\">\n        <div className=\"p-4\">\n          {/* Header */}\n          <div className=\"mb-3 flex items-start justify-between\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"rounded-lg bg-slate-700/50 p-2\">\n                <Icon className=\"h-5 w-5 text-blue-400\" />\n              </div>\n              <div>\n                <h4 className=\"truncate font-medium text-white\">\n                  {device.name}\n                </h4>\n                <p className=\"text-sm text-slate-400\">{device.ip}</p>\n              </div>\n            </div>\n            <Badge className={statusBadgeColors[device.status]}>\n              {device.status}\n            </Badge>\n          </div>\n\n          {/* Info */}\n          <div className=\"space-y-2\">\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-slate-400\">Время отклика</span>\n              <span className=\"text-white\">{device.responseTime}ms</span>\n            </div>\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-slate-400\">Время работы</span>\n              <span className=\"text-white\">{device.uptime}%</span>\n            </div>\n            <div className=\"flex justify-between text-sm\">\n              <span className=\"text-slate-400\">Производитель</span>\n              <span className=\"text-white\">{device.vendor || 'N/A'}</span>\n            </div>\n            {device.location && (\n              <div className=\"flex justify-between text-sm\">\n                <span className=\"text-slate-400\">Локация</span>\n                <span className=\"truncate text-white\">{device.location}</span>\n              </div>\n            )}\n          </div>\n\n          {/* Actions */}\n          <div className=\"mt-4 flex justify-end space-x-2 opacity-0 transition-opacity group-hover:opacity-100\">\n            <Button\n              size=\"sm\"\n              variant=\"ghost\"\n              onClick={() => onEdit(device.id)}\n              className=\"text-blue-400 hover:bg-blue-500/10 hover:text-blue-300\"\n            >\n              Изменить\n            </Button>\n            <Button\n              size=\"sm\"\n              variant=\"ghost\"\n              onClick={() => onDelete(device.id)}\n              className=\"text-red-400 hover:bg-red-500/10 hover:text-red-300\"\n            >\n              Удалить\n            </Button>\n          </div>\n        </div>\n      </Card>\n    </motion.div>\n  );\n});\n\nDeviceCard.displayName = 'DeviceCard';\n\nconst DeviceListRow = React.memo<{\n  device: NetworkDevice;\n  onEdit: (id: string) => void;\n  onDelete: (id: string) => void;\n}>(({ device, onEdit, onDelete }) => {\n  const Icon = useMemo(\n    () => deviceIcons[device.type] || Network,\n    [device.type]\n  );\n\n  return (\n    <motion.div\n      layout\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      exit={{ opacity: 0, y: -20 }}\n      transition={{ duration: 0.2 }}\n    >\n      <Card className=\"group border-slate-700 bg-slate-800/50 transition-all duration-200 hover:bg-slate-800/70\">\n        <div className=\"p-4\">\n          <div className=\"grid grid-cols-6 items-center gap-4\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"rounded-lg bg-slate-700/50 p-2\">\n                <Icon className=\"h-4 w-4 text-blue-400\" />\n              </div>\n              <div>\n                <h4 className=\"truncate font-medium text-white\">\n                  {device.name}\n                </h4>\n                <p className=\"text-sm text-slate-400\">{device.type}</p>\n              </div>\n            </div>\n\n            <div className=\"text-sm\">\n              <p className=\"text-white\">{device.ip}</p>\n              <p className=\"text-slate-400\">{device.location || 'N/A'}</p>\n            </div>\n\n            <div className=\"flex items-center\">\n              <Badge className={statusBadgeColors[device.status]}>\n                {device.status}\n              </Badge>\n            </div>\n\n            <div className=\"text-center text-sm\">\n              <p className=\"text-white\">{device.responseTime}ms</p>\n              <p className=\"text-slate-400\">отклик</p>\n            </div>\n\n            <div className=\"text-center text-sm\">\n              <p className=\"text-white\">{device.uptime}%</p>\n              <p className=\"text-slate-400\">время работы</p>\n            </div>\n\n            <div className=\"flex justify-end space-x-2 opacity-0 transition-opacity group-hover:opacity-100\">\n              <Button\n                size=\"sm\"\n                variant=\"ghost\"\n                onClick={() => onEdit(device.id)}\n                className=\"text-blue-400 hover:bg-blue-500/10 hover:text-blue-300\"\n              >\n                Изменить\n              </Button>\n              <Button\n                size=\"sm\"\n                variant=\"ghost\"\n                onClick={() => onDelete(device.id)}\n                className=\"text-red-400 hover:bg-red-500/10 hover:text-red-300\"\n              >\n                Удалить\n              </Button>\n            </div>\n          </div>\n        </div>\n      </Card>\n    </motion.div>\n  );\n});\n\nDeviceListRow.displayName = 'DeviceListRow';\n\ninterface DevicesSectionProps {\n  onAddDevice?: () => void;\n  onEditDevice?: (deviceId: string) => void;\n  onDeleteDevice?: (deviceId: string) => void;\n}\n\nexport const DevicesSection: React.FC<DevicesSectionProps> = (props) => {\n  const {\n    devices,\n    loading,\n    error: storeError,\n    selectedFolderId,\n    folders,\n  } = useNetworkStore();\n  const { success, error, warning, info } = useToast();\n  const [searchTerm, setSearchTerm] = useState('');\n  const [statusFilter, setStatusFilter] = useState<string>('all');\n  const [typeFilter, setTypeFilter] = useState<string>('all');\n  const [sortField, setSortField] = useState<SortField>('name');\n  const [sortDirection, setSortDirection] = useState<'asc' | 'desc'>('asc');\n  const [viewMode, setViewMode] = useState<ViewMode>('grid');\n\n  const handleAddDevice = () => {\n    if (props.onAddDevice) {\n      props.onAddDevice();\n    } else {\n      warning('Добавление устройства', 'Функция добавления не настроена');\n    }\n  };\n\n  // Filter devices\n  const filteredDevices = devices.filter((device) => {\n    const matchesSearch =\n      device.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      device.ip.includes(searchTerm) ||\n      (device.location &&\n        device.location.toLowerCase().includes(searchTerm.toLowerCase()));\n\n    const matchesStatus =\n      statusFilter === 'all' || device.status === statusFilter;\n    const matchesType = typeFilter === 'all' || device.type === typeFilter;\n\n    // Логика фильтрации по папкам\n    let matchesFolder = true;\n    if (selectedFolderId && selectedFolderId !== 'root') {\n      // Проверяем, не выбрано ли конкретное устройство\n      const isDeviceSelected = devices.some((d) => d.id === selectedFolderId);\n\n      if (isDeviceSelected) {\n        // Если выбрано конкретное устройство, показываем только его\n        matchesFolder = device.id === selectedFolderId;\n      } else {\n        // Для конкретной папки показываем только устройства этой папки\n        matchesFolder = device.folderId === selectedFolderId;\n      }\n    } else {\n      // Для корневой папки (\"Все устройства\") показываем ВСЕ устройства\n      matchesFolder = true;\n    }\n\n    return matchesSearch && matchesStatus && matchesType && matchesFolder;\n  });\n\n  // Sort devices\n  const sortedDevices = [...filteredDevices].sort((a, b) => {\n    let aValue: any = a[sortField];\n    let bValue: any = b[sortField];\n\n    if (sortField === 'lastSeen') {\n      aValue = new Date(aValue).getTime();\n      bValue = new Date(bValue).getTime();\n    }\n\n    if (typeof aValue === 'string') {\n      aValue = aValue.toLowerCase();\n      bValue = bValue.toLowerCase();\n    }\n\n    if (aValue < bValue) return sortDirection === 'asc' ? -1 : 1;\n    if (aValue > bValue) return sortDirection === 'asc' ? 1 : -1;\n    return 0;\n  });\n\n  const handleSort = (field: SortField) => {\n    if (sortField === field) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortField(field);\n      setSortDirection('asc');\n    }\n  };\n\n  // Функция для получения названия папки или устройства\n  const getFolderName = (folderId: string): string => {\n    if (!folderId || folderId === 'root') return 'Все устройства';\n\n    // Проверяем, не является ли это устройством\n    const device = devices.find((d) => d.id === folderId);\n    if (device) {\n      return `Устройство: ${device.name}`;\n    }\n\n    const findFolder = (folders: any[]): any => {\n      for (const folder of folders) {\n        if (folder.id === folderId) return folder;\n        if (folder.children) {\n          const found = findFolder(folder.children);\n          if (found) return found;\n        }\n      }\n      return null;\n    };\n\n    const folder = findFolder(folders);\n    return folder ? folder.name : 'Неизвестная папка';\n  };\n\n  const deviceTypes = Array.from(new Set(devices.map((d) => d.type)));\n  const onlineCount = filteredDevices.filter(\n    (d) => d.status === 'online'\n  ).length;\n  const offlineCount = filteredDevices.filter(\n    (d) => d.status === 'offline'\n  ).length;\n  const warningCount = filteredDevices.filter(\n    (d) => d.status === 'warning'\n  ).length;\n\n  const handleEditDevice = (deviceId: string) => {\n    if (props.onEditDevice) {\n      props.onEditDevice(deviceId);\n    } else {\n      const device = devices.find((d) => d.id === deviceId);\n      if (device) {\n        warning(\n          'Редактирование устройства',\n          `Редактирование ${device.name} не настроено`\n        );\n      }\n    }\n  };\n\n  const handleDeleteDevice = (deviceId: string) => {\n    if (props.onDeleteDevice) {\n      props.onDeleteDevice(deviceId);\n    } else {\n      const device = devices.find((d) => d.id === deviceId);\n      if (device) {\n        warning('Удаление устройства', `Удаление ${device.name} не настроено`);\n      }\n    }\n  };\n\n  return (\n    <Card className=\"border-slate-700 bg-slate-800/50\">\n      <div className=\"p-6\">\n        {/* Header */}\n        <div className=\"mb-6 flex items-center justify-between\">\n          <div>\n            <h2 className=\"text-xl font-semibold text-white\">\n              {getFolderName(selectedFolderId)}\n            </h2>\n            <p className=\"text-sm text-slate-400\">\n              {selectedFolderId === 'root'\n                ? `Всего устройств: ${devices.length}`\n                : `Устройств в папке: ${filteredDevices.length}`}\n            </p>\n          </div>\n\n          <div className=\"flex items-center space-x-3\">\n            <button\n              onClick={async () => {\n                const { pingDevice } = useNetworkStore.getState();\n                try {\n                  info('Массовый ping', 'Запускается ping всех устройств...');\n                  const promises = devices.map((device) =>\n                    pingDevice(device.id)\n                  );\n                  await Promise.all(promises);\n                  success('Ping завершен', 'Все устройства проверены');\n                } catch (err) {\n                  error(\n                    'Ошибка ping',\n                    'Не удалось выполнить ping некоторых устройств'\n                  );\n                }\n              }}\n              className=\"flex items-center space-x-2 rounded-lg bg-blue-600 px-3 py-2 text-sm font-medium text-white transition-colors hover:bg-blue-700\"\n            >\n              <span>🏓</span>\n              <span>Ping всех</span>\n            </button>\n\n            <button\n              onClick={async () => {\n                const { loadDevices } = useNetworkStore.getState();\n                try {\n                  info(\n                    'Обновление',\n                    'Загружаются актуальные данные устройств...'\n                  );\n                  await loadDevices();\n                  success('Обновление завершено', 'Данные устройств обновлены');\n                } catch (err) {\n                  error(\n                    'Ошибка обновления',\n                    'Не удалось загрузить данные устройств'\n                  );\n                }\n              }}\n              className=\"flex items-center space-x-2 rounded-lg bg-slate-600 px-3 py-2 text-sm font-medium text-white transition-colors hover:bg-slate-700\"\n            >\n              <span>🔄</span>\n              <span>Обновить</span>\n            </button>\n\n            <button\n              onClick={handleAddDevice}\n              className=\"flex items-center space-x-2 rounded-lg bg-green-600 px-3 py-2 text-sm font-medium text-white transition-colors hover:bg-green-700\"\n            >\n              <span>➕</span>\n              <span>Добавить</span>\n            </button>\n          </div>\n        </div>\n\n        {/* Filters and Search */}\n        <div className=\"mb-6 grid grid-cols-1 gap-4 md:grid-cols-4\">\n          <div className=\"relative\">\n            <Search className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 transform text-slate-400\" />\n            <input\n              type=\"text\"\n              placeholder=\"Поиск устройств...\"\n              value={searchTerm}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setSearchTerm(e.target.value)\n              }\n              className=\"w-full rounded-lg border border-slate-600/50 bg-slate-700/50 py-2 pl-10 pr-4 text-white placeholder-slate-400 focus:outline-none focus:ring-2 focus:ring-blue-500/50\"\n            />\n          </div>\n\n          <select\n            value={statusFilter}\n            onChange={(e) => setStatusFilter(e.target.value)}\n            className=\"rounded-lg border border-slate-600/50 bg-slate-700/50 px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500/50\"\n          >\n            <option value=\"all\">Все статусы</option>\n            <option value=\"online\">Онлайн</option>\n            <option value=\"offline\">Офлайн</option>\n            <option value=\"warning\">Предупреждения</option>\n          </select>\n\n          <select\n            value={typeFilter}\n            onChange={(e) => setTypeFilter(e.target.value)}\n            className=\"rounded-lg border border-slate-600/50 bg-slate-700/50 px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500/50\"\n          >\n            <option value=\"all\">Все типы</option>\n            {deviceTypes.map((type) => (\n              <option key={type} value={type}>\n                {type.charAt(0).toUpperCase() + type.slice(1)}\n              </option>\n            ))}\n          </select>\n\n          <div className=\"flex items-center space-x-2\">\n            <select\n              value={sortField}\n              onChange={(e) => setSortField(e.target.value as SortField)}\n              className=\"flex-1 rounded-lg border border-slate-600/50 bg-slate-700/50 px-4 py-2 text-white focus:outline-none focus:ring-2 focus:ring-blue-500/50\"\n            >\n              <option value=\"name\">Имя</option>\n              <option value=\"ip\">IP адрес</option>\n              <option value=\"status\">Статус</option>\n              <option value=\"responseTime\">Время отклика</option>\n              <option value=\"uptime\">Время работы</option>\n              <option value=\"lastSeen\">Последний раз онлайн</option>\n            </select>\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={() =>\n                setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc')\n              }\n              className=\"text-slate-400 hover:bg-slate-700/50 hover:text-white\"\n            >\n              {sortDirection === 'asc' ? (\n                <SortAsc className=\"h-4 w-4\" />\n              ) : (\n                <SortDesc className=\"h-4 w-4\" />\n              )}\n            </Button>\n          </div>\n        </div>\n\n        {/* Device Grid/List */}\n        <div className=\"space-y-4\">\n          {viewMode === 'grid' ? (\n            <motion.div\n              layout\n              className=\"grid grid-cols-1 gap-4 md:grid-cols-2 xl:grid-cols-3 2xl:grid-cols-4\"\n            >\n              {sortedDevices.map((device) => (\n                <DeviceCard\n                  key={device.id}\n                  device={device}\n                  onEdit={handleEditDevice}\n                  onDelete={handleDeleteDevice}\n                />\n              ))}\n            </motion.div>\n          ) : (\n            <motion.div layout className=\"space-y-2\">\n              {sortedDevices.map((device) => (\n                <DeviceListRow\n                  key={device.id}\n                  device={device}\n                  onEdit={handleEditDevice}\n                  onDelete={handleDeleteDevice}\n                />\n              ))}\n            </motion.div>\n          )}\n\n          {sortedDevices.length === 0 && (\n            <div className=\"py-12 text-center\">\n              <div className=\"mb-2 text-lg text-slate-400\">\n                Устройства не найдены\n              </div>\n              <div className=\"text-slate-500\">\n                Попробуйте изменить фильтры поиска\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </Card>\n  );\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3048, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3053, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/alerts-panel.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useNetworkStore } from '@/store/network-store';\nimport { AlertMessage } from '@/types/schemas';\nimport {\n  AlertTriangle,\n  Info,\n  XCircle,\n  CheckCircle,\n  Clock,\n  Bell,\n  X,\n  Trash2,\n} from 'lucide-react';\nimport { Card } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { formatTimeAgo, formatTimeDetailed } from '@/lib/utils';\n\nconst alertIcons = {\n  critical: XCircle,\n  warning: AlertTriangle,\n  info: Info,\n  error: XCircle,\n};\n\nconst alertColors = {\n  critical: 'text-red-400 bg-red-500/10 border-red-500/20',\n  warning: 'text-yellow-400 bg-yellow-500/10 border-yellow-500/20',\n  info: 'text-blue-400 bg-blue-500/10 border-blue-500/20',\n  error: 'text-red-400 bg-red-500/10 border-red-500/20',\n};\n\nconst alertBorderColors = {\n  critical: 'border-l-red-500',\n  warning: 'border-l-yellow-500',\n  info: 'border-l-blue-500',\n  error: 'border-l-red-500',\n};\n\nexport function AlertsPanel() {\n  const { alerts, markAlertResolved, clearAlerts } = useNetworkStore();\n\n  const recentAlerts = alerts.slice(0, 10);\n  const unresolvedCount = alerts.filter((alert) => !alert.resolved).length;\n  const criticalCount = alerts.filter(\n    (alert) => alert.type === 'critical' && !alert.resolved\n  ).length;\n  const totalAlerts = alerts.length;\n\n  const handleResolveAlert = (alertId: string) => {\n    markAlertResolved(alertId);\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n      className=\"rounded-xl border border-slate-700/50 bg-slate-800/50 backdrop-blur-sm\"\n    >\n      <div className=\"p-6\">\n        {/* Header */}\n        <div className=\"mb-6 flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"rounded-lg bg-slate-700/50 p-2\">\n              <Bell className=\"h-5 w-5 text-blue-400\" />\n            </div>\n            <div>\n              <h3 className=\"text-lg font-semibold text-white\">Уведомления</h3>\n              <div className=\"mt-1 flex items-center space-x-3\">\n                <div className=\"flex items-center space-x-1\">\n                  <div className=\"h-2 w-2 animate-pulse rounded-full bg-red-500\"></div>\n                  <span className=\"text-xs text-slate-400\">Live</span>\n                </div>\n                {unresolvedCount > 0 && (\n                  <div className=\"flex items-center space-x-1 rounded-full border border-red-500/20 bg-red-500/20 px-2 py-1\">\n                    <span className=\"text-xs font-medium text-red-400\">\n                      {unresolvedCount} активных\n                    </span>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {alerts.length > 0 && (\n            <button\n              onClick={clearAlerts}\n              className=\"flex items-center space-x-2 rounded-lg px-3 py-2 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-white\"\n            >\n              <Trash2 className=\"h-4 w-4\" />\n              <span className=\"text-sm\">Очистить</span>\n            </button>\n          )}\n        </div>\n\n        {/* Statistics */}\n        <div className=\"mb-6 grid grid-cols-3 gap-4\">\n          <motion.div\n            initial={{ opacity: 0, scale: 0.9 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ duration: 0.3, delay: 0.1 }}\n            className=\"rounded-lg bg-slate-700/30 p-3 text-center\"\n          >\n            <div className=\"text-2xl font-bold text-white\">{totalAlerts}</div>\n            <div className=\"text-xs text-slate-400\">Всего</div>\n          </motion.div>\n\n          <motion.div\n            initial={{ opacity: 0, scale: 0.9 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ duration: 0.3, delay: 0.2 }}\n            className=\"rounded-lg bg-slate-700/30 p-3 text-center\"\n          >\n            <div className=\"text-2xl font-bold text-red-400\">\n              {criticalCount}\n            </div>\n            <div className=\"text-xs text-slate-400\">Критические</div>\n          </motion.div>\n\n          <motion.div\n            initial={{ opacity: 0, scale: 0.9 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{ duration: 0.3, delay: 0.3 }}\n            className=\"rounded-lg bg-slate-700/30 p-3 text-center\"\n          >\n            <div className=\"text-2xl font-bold text-green-400\">\n              {totalAlerts - unresolvedCount}\n            </div>\n            <div className=\"text-xs text-slate-400\">Решены</div>\n          </motion.div>\n        </div>\n\n        {/* Alerts List */}\n        <div className=\"custom-scrollbar max-h-96 space-y-3 overflow-y-auto\">\n          <AnimatePresence>\n            {recentAlerts.map((alert, index) => {\n              const Icon = alertIcons[alert.type];\n\n              return (\n                <motion.div\n                  key={alert.id}\n                  layout\n                  initial={{ opacity: 0, x: -20 }}\n                  animate={{ opacity: 1, x: 0 }}\n                  exit={{ opacity: 0, x: 20 }}\n                  transition={{ duration: 0.3, delay: index * 0.05 }}\n                  className={`group relative border-l-4 bg-slate-700/30 backdrop-blur-sm ${alertBorderColors[alert.type]} rounded-lg p-4 transition-all duration-300 hover:bg-slate-700/50`}\n                >\n                  <div className=\"flex items-start space-x-3\">\n                    <div\n                      className={`rounded-lg border p-2 ${alertColors[alert.type]} flex-shrink-0`}\n                    >\n                      <Icon className=\"h-4 w-4\" />\n                    </div>\n\n                    <div className=\"min-w-0 flex-1\">\n                      <div className=\"flex items-start justify-between\">\n                        <div className=\"flex-1\">\n                          <p\n                            className={`text-sm font-medium ${alert.resolved ? 'text-slate-400 line-through' : 'text-white'} leading-relaxed`}\n                          >\n                            {alert.message}\n                          </p>\n\n                          <div className=\"mt-2 flex items-center space-x-3\">\n                            <div className=\"flex items-center space-x-1\">\n                              <Clock className=\"h-3 w-3 text-slate-400\" />\n                              <span\n                                className=\"text-xs text-slate-400\"\n                                title={formatTimeDetailed(alert.timestamp)}\n                              >\n                                {formatTimeAgo(alert.timestamp)}\n                              </span>\n                            </div>\n\n                            {alert.deviceId && (\n                              <div className=\"text-xs text-slate-500\">\n                                Устройство: {alert.deviceId}\n                              </div>\n                            )}\n\n                            <div\n                              className={`rounded-full px-2 py-1 text-xs font-medium ${alertColors[alert.type]}`}\n                            >\n                              {alert.type === 'critical'\n                                ? 'Критическое'\n                                : alert.type === 'warning'\n                                  ? 'Предупреждение'\n                                  : 'Информация'}\n                            </div>\n                          </div>\n                        </div>\n\n                        {alert.resolved ? (\n                          <div className=\"ml-3 flex items-center space-x-1 text-green-400\">\n                            <CheckCircle className=\"h-4 w-4\" />\n                            <span className=\"text-xs\">Решено</span>\n                          </div>\n                        ) : (\n                          <button\n                            onClick={() => handleResolveAlert(alert.id)}\n                            className=\"ml-3 rounded p-1 text-slate-400 opacity-0 transition-all hover:bg-slate-600/50 hover:text-green-400 group-hover:opacity-100\"\n                            title=\"Отметить как решенное\"\n                          >\n                            <CheckCircle className=\"h-4 w-4\" />\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* Severity indicator */}\n                  <div className=\"absolute right-2 top-2\">\n                    {alert.type === 'critical' && (\n                      <div className=\"h-2 w-2 animate-pulse rounded-full bg-red-500\"></div>\n                    )}\n                  </div>\n                </motion.div>\n              );\n            })}\n          </AnimatePresence>\n        </div>\n\n        {/* No alerts state */}\n        {alerts.length === 0 && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            className=\"py-8 text-center\"\n          >\n            <CheckCircle className=\"mx-auto mb-3 h-12 w-12 text-green-400\" />\n            <p className=\"font-medium text-slate-300\">Нет уведомлений</p>\n            <p className=\"mt-1 text-xs text-slate-500\">\n              Все системы работают штатно\n            </p>\n          </motion.div>\n        )}\n\n        {/* Load more */}\n        {alerts.length > 10 && (\n          <div className=\"mt-4 text-center\">\n            <button className=\"text-sm text-blue-400 transition-colors hover:text-blue-300\">\n              Показать все уведомления ({alerts.length})\n            </button>\n          </div>\n        )}\n      </div>\n\n      {/* Live indicator animation */}\n      {unresolvedCount > 0 && (\n        <div className=\"absolute -right-1 -top-1\">\n          <div className=\"h-3 w-3 animate-ping rounded-full bg-red-500\"></div>\n          <div className=\"absolute top-0 h-3 w-3 rounded-full bg-red-500\"></div>\n        </div>\n      )}\n    </motion.div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3672, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3677, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/system-health-card.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useNetworkStore } from '@/store/network-store';\r\nimport {\r\n  Cpu,\r\n  MemoryStick,\r\n  HardDrive,\r\n  Activity,\r\n  Thermometer,\r\n  Clock,\r\n  Zap,\r\n} from 'lucide-react';\r\n\r\ninterface ProgressBarProps {\r\n  value: number;\r\n  color: string;\r\n  label: string;\r\n  icon: React.ComponentType<any>;\r\n  unit?: string;\r\n}\r\n\r\nfunction ProgressBar({\r\n  value,\r\n  color,\r\n  label,\r\n  icon: Icon,\r\n  unit = '%',\r\n}: ProgressBarProps) {\r\n  const getColorClasses = (value: number, type: string) => {\r\n    if (type === 'temperature') {\r\n      if (value > 70) return 'bg-red-500 text-red-400';\r\n      if (value > 50) return 'bg-yellow-500 text-yellow-400';\r\n      return 'bg-green-500 text-green-400';\r\n    }\r\n\r\n    if (value > 90) return 'bg-red-500 text-red-400';\r\n    if (value > 75) return 'bg-yellow-500 text-yellow-400';\r\n    return 'bg-green-500 text-green-400';\r\n  };\r\n\r\n  const colorClasses = getColorClasses(value, label.toLowerCase());\r\n  const bgColor = colorClasses.includes('red')\r\n    ? 'bg-red-500/20'\r\n    : colorClasses.includes('yellow')\r\n      ? 'bg-yellow-500/20'\r\n      : 'bg-green-500/20';\r\n\r\n  // Округляем проценты, кроме температуры\r\n  const displayValue = unit === '%' ? Math.round(value) : value;\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, x: -20 }}\r\n      animate={{ opacity: 1, x: 0 }}\r\n      transition={{ duration: 0.5 }}\r\n      className=\"space-y-3\"\r\n    >\r\n      <div className=\"flex items-center justify-between\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <Icon className={`h-4 w-4 ${colorClasses.split(' ')[1]}`} />\r\n          <span className=\"text-sm font-medium text-slate-300\">{label}</span>\r\n        </div>\r\n        <span className={`text-sm font-bold ${colorClasses.split(' ')[1]}`}>\r\n          {displayValue}\r\n          {unit}\r\n        </span>\r\n      </div>\r\n\r\n      <div className={`relative h-2 rounded-full ${bgColor}`}>\r\n        <motion.div\r\n          initial={{ width: 0 }}\r\n          animate={{ width: `${Math.min(value, 100)}%` }}\r\n          transition={{ duration: 1, ease: 'easeOut' }}\r\n          className={`h-full rounded-full ${colorClasses.split(' ')[0]}`}\r\n        />\r\n\r\n        {/* Gradient overlay */}\r\n        <div className=\"absolute inset-0 rounded-full bg-gradient-to-r from-transparent to-white/10\" />\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n\r\nexport function SystemHealthCard() {\r\n  const { systemHealth } = useNetworkStore();\r\n\r\n  const formatUptime = (seconds: number) => {\r\n    const days = Math.floor(seconds / 86400);\r\n    const hours = Math.floor((seconds % 86400) / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n\r\n    if (days > 0) return `${days}д ${hours}ч`;\r\n    if (hours > 0) return `${hours}ч ${minutes}м`;\r\n    return `${minutes}м`;\r\n  };\r\n\r\n  const getOverallStatus = () => {\r\n    const values = [\r\n      systemHealth.cpu,\r\n      systemHealth.memory,\r\n      systemHealth.disk,\r\n      systemHealth.network,\r\n    ];\r\n\r\n    const maxValue = Math.max(...values);\r\n\r\n    if (maxValue > 90)\r\n      return { status: 'critical', color: 'text-red-400', bg: 'bg-red-500/10' };\r\n    if (maxValue > 75)\r\n      return {\r\n        status: 'warning',\r\n        color: 'text-yellow-400',\r\n        bg: 'bg-yellow-500/10',\r\n      };\r\n    return {\r\n      status: 'healthy',\r\n      color: 'text-green-400',\r\n      bg: 'bg-green-500/10',\r\n    };\r\n  };\r\n\r\n  const overallStatus = getOverallStatus();\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.5 }}\r\n      className=\"rounded-xl border border-slate-700/50 bg-slate-800/50 p-6 backdrop-blur-sm\"\r\n    >\r\n      {/* Header */}\r\n      <div className=\"mb-6 flex items-center justify-between\">\r\n        <div>\r\n          <h3 className=\"text-lg font-semibold text-white\">\r\n            Сервер мониторинга\r\n          </h3>\r\n          <p className=\"mt-1 text-xs text-slate-400\">\r\n            🖥️ Состояние системы, на которой запущен мониторинг сети\r\n          </p>\r\n        </div>\r\n        <div\r\n          className={`flex items-center space-x-2 rounded-full px-3 py-1 ${overallStatus.bg}`}\r\n        >\r\n          <div\r\n            className={`h-2 w-2 rounded-full ${overallStatus.color.replace('text-', 'bg-')} animate-pulse`}\r\n          ></div>\r\n          <span className={`text-xs font-medium ${overallStatus.color}`}>\r\n            {overallStatus.status === 'critical'\r\n              ? 'Критическое'\r\n              : overallStatus.status === 'warning'\r\n                ? 'Предупреждение'\r\n                : 'Норма'}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Resource Monitoring */}\r\n      <div className=\"mb-6 space-y-4\">\r\n        <ProgressBar\r\n          value={systemHealth.cpu}\r\n          color=\"blue\"\r\n          label=\"Процессор\"\r\n          icon={Cpu}\r\n        />\r\n\r\n        <ProgressBar\r\n          value={systemHealth.memory}\r\n          color=\"purple\"\r\n          label=\"Память\"\r\n          icon={MemoryStick}\r\n        />\r\n\r\n        <ProgressBar\r\n          value={systemHealth.disk}\r\n          color=\"orange\"\r\n          label=\"Диск\"\r\n          icon={HardDrive}\r\n        />\r\n\r\n        <ProgressBar\r\n          value={systemHealth.network}\r\n          color=\"green\"\r\n          label=\"Сеть\"\r\n          icon={Activity}\r\n        />\r\n\r\n        {systemHealth.temperature && (\r\n          <ProgressBar\r\n            value={systemHealth.temperature}\r\n            color=\"red\"\r\n            label=\"Температура\"\r\n            icon={Thermometer}\r\n            unit=\"°C\"\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      {/* Additional System Info */}\r\n      <div className=\"grid grid-cols-2 gap-4 border-t border-slate-700/50 pt-4\">\r\n        {systemHealth.uptime && (\r\n          <motion.div\r\n            initial={{ opacity: 0, scale: 0.9 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            transition={{ duration: 0.5, delay: 0.2 }}\r\n            className=\"rounded-lg bg-slate-700/30 p-3 text-center\"\r\n          >\r\n            <div className=\"mb-2 flex items-center justify-center\">\r\n              <Clock className=\"mr-2 h-4 w-4 text-blue-400\" />\r\n              <span className=\"text-xs text-slate-400\">Время работы</span>\r\n            </div>\r\n            <div className=\"text-sm font-bold text-blue-400\">\r\n              {formatUptime(systemHealth.uptime)}\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n\r\n        {systemHealth.processes && (\r\n          <motion.div\r\n            initial={{ opacity: 0, scale: 0.9 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            transition={{ duration: 0.5, delay: 0.3 }}\r\n            className=\"rounded-lg bg-slate-700/30 p-3 text-center\"\r\n          >\r\n            <div className=\"mb-2 flex items-center justify-center\">\r\n              <Zap className=\"mr-2 h-4 w-4 text-purple-400\" />\r\n              <span className=\"text-xs text-slate-400\">Процессы</span>\r\n            </div>\r\n            <div className=\"text-sm font-bold text-purple-400\">\r\n              {systemHealth.processes}\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Last Update */}\r\n      {systemHealth.lastUpdate && (\r\n        <div className=\"mt-4 text-center\">\r\n          <div className=\"text-xs text-slate-500\">\r\n            Обновлено: {new Date(systemHealth.lastUpdate).toLocaleTimeString()}\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Performance Indicator */}\r\n      <div className=\"mt-4\">\r\n        <div className=\"mb-2 flex items-center justify-between text-xs text-slate-400\">\r\n          <span>Общая производительность</span>\r\n          <span>\r\n            {100 -\r\n              Math.max(\r\n                systemHealth.cpu,\r\n                systemHealth.memory,\r\n                systemHealth.disk\r\n              )}\r\n            %\r\n          </span>\r\n        </div>\r\n        <div className=\"h-1 rounded-full bg-slate-700/50\">\r\n          <motion.div\r\n            initial={{ width: 0 }}\r\n            animate={{\r\n              width: `${100 - Math.max(systemHealth.cpu, systemHealth.memory, systemHealth.disk)}%`,\r\n            }}\r\n            transition={{ duration: 1.5, ease: 'easeOut' }}\r\n            className={`h-full rounded-full ${\r\n              100 -\r\n                Math.max(\r\n                  systemHealth.cpu,\r\n                  systemHealth.memory,\r\n                  systemHealth.disk\r\n                ) >\r\n              75\r\n                ? 'bg-green-500'\r\n                : 100 -\r\n                      Math.max(\r\n                        systemHealth.cpu,\r\n                        systemHealth.memory,\r\n                        systemHealth.disk\r\n                      ) >\r\n                    50\r\n                  ? 'bg-yellow-500'\r\n                  : 'bg-red-500'\r\n            }`}\r\n          />\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 4186, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4191, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/network-topology.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useEffect, useCallback } from 'react';\nimport { motion } from 'framer-motion';\nimport { useRouter } from 'next/navigation';\nimport {\n  Network,\n  Settings,\n  Maximize2,\n  RotateCcw,\n  Router,\n  Wifi,\n  Monitor,\n  Server,\n  Smartphone,\n  Printer,\n  Shield,\n} from 'lucide-react';\nimport { useNetworkStore } from '@/store/network-store';\nimport { NetworkDevice } from '@/types/network';\nimport { DeviceContextMenu } from './context-menu';\nimport { ToastContainer, useToast } from './toast';\n\n// Device type configuration\nconst deviceIcons = {\n  router: Router,\n  switch: Network,\n  computer: Monitor,\n  server: Server,\n  mobile: Smartphone,\n  wifi: Wifi,\n  workstation: Monitor,\n  printer: Printer,\n  firewall: Shield,\n  access_point: Wifi,\n};\n\nconst deviceColors = {\n  router: '#3B82F6',\n  switch: '#10B981',\n  computer: '#8B5CF6',\n  server: '#F59E0B',\n  mobile: '#EF4444',\n  wifi: '#06B6D4',\n  workstation: '#6B7280',\n  printer: '#F97316',\n  firewall: '#DC2626',\n  access_point: '#10B981',\n};\n\ninterface Connection {\n  id: string;\n  sourceId: string;\n  targetId: string;\n}\n\ninterface DragState {\n  isDragging: boolean;\n  deviceId: string | null;\n  offset: { x: number; y: number };\n}\n\ninterface ConnectionState {\n  isConnecting: boolean;\n  sourceId: string | null;\n  tempLine: { x1: number; y1: number; x2: number; y2: number } | null;\n}\n\ninterface ContextMenuState {\n  isVisible: boolean;\n  device: any | null;\n  position: { x: number; y: number };\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\ninterface DeviceWithPosition extends NetworkDevice {\n  position?: Position;\n}\n\ninterface NetworkTopologyProps {\n  isFullscreen?: boolean;\n}\n\nexport function NetworkTopology({\n  isFullscreen = false,\n}: NetworkTopologyProps) {\n  const { devices, updateDevice, selectedFolderId } = useNetworkStore();\n  const { toasts, removeToast, success, error, warning, info } = useToast();\n  const router = useRouter();\n\n  const [isEditMode, setIsEditMode] = useState(false);\n\n  // Инициализируем соединения из localStorage сразу\n  const [connections, setConnections] = useState<Connection[]>(() => {\n    if (typeof window !== 'undefined') {\n      const savedConnections = localStorage.getItem('topology-connections');\n      if (savedConnections) {\n        try {\n          return JSON.parse(savedConnections);\n        } catch (e) {\n          console.error('Failed to load connections:', e);\n        }\n      }\n    }\n    return [];\n  });\n\n  const [dragState, setDragState] = useState<DragState>({\n    isDragging: false,\n    deviceId: null,\n    offset: { x: 0, y: 0 },\n  });\n  const [connectionState, setConnectionState] = useState<ConnectionState>({\n    isConnecting: false,\n    sourceId: null,\n    tempLine: null,\n  });\n  const [contextMenu, setContextMenu] = useState<ContextMenuState>({\n    isVisible: false,\n    device: null,\n    position: { x: 0, y: 0 },\n  });\n\n  // Инициализируем позиции устройств из localStorage сразу\n  const [devicePositions, setDevicePositions] = useState<\n    Record<string, Position>\n  >(() => {\n    if (typeof window !== 'undefined') {\n      const savedPositions = localStorage.getItem('topology-positions');\n      if (savedPositions) {\n        try {\n          return JSON.parse(savedPositions);\n        } catch (e) {\n          console.error('Failed to load positions:', e);\n        }\n      }\n    }\n    return {};\n  });\n\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  // Generate default positions for devices\n  const generateDefaultPositions = useCallback(\n    (devices: NetworkDevice[]): Record<string, Position> => {\n      const positions: Record<string, Position> = {};\n      const gridCols = 4;\n      const spacing = { x: 200, y: 150 };\n      const offset = { x: 100, y: 80 };\n\n      devices.forEach((device, index) => {\n        const col = index % gridCols;\n        const row = Math.floor(index / gridCols);\n        positions[device.id] = {\n          x: offset.x + col * spacing.x,\n          y: offset.y + row * spacing.y,\n        };\n      });\n\n      return positions;\n    },\n    []\n  );\n\n  // Генерируем позиции по умолчанию для новых устройств\n  useEffect(() => {\n    setDevicePositions((prev) => {\n      // Если позиции уже есть для всех устройств, не изменяем\n      const hasAllPositions = devices.every((device) => prev[device.id]);\n      if (hasAllPositions && Object.keys(prev).length > 0) {\n        return prev;\n      }\n\n      // Генерируем позиции только для новых устройств\n      const newPositions = { ...prev };\n      const defaultPositions = generateDefaultPositions(devices);\n\n      devices.forEach((device) => {\n        if (!newPositions[device.id]) {\n          newPositions[device.id] = defaultPositions[device.id];\n        }\n      });\n\n      return newPositions;\n    });\n  }, [devices, generateDefaultPositions]);\n\n  // Save positions when they change\n  useEffect(() => {\n    if (Object.keys(devicePositions).length > 0) {\n      localStorage.setItem(\n        'topology-positions',\n        JSON.stringify(devicePositions)\n      );\n    }\n  }, [devicePositions]);\n\n  // Save connections when they change\n  useEffect(() => {\n    localStorage.setItem('topology-connections', JSON.stringify(connections));\n  }, [connections]);\n\n  // Combine devices with positions\n  const devicesWithPositions: DeviceWithPosition[] = devices.map((device) => ({\n    ...device,\n    position: devicePositions[device.id] || { x: 100, y: 100 },\n  }));\n\n  // Reset layout function\n  const resetLayout = () => {\n    const defaultPositions = generateDefaultPositions(devices);\n    setDevicePositions(defaultPositions);\n    setConnections([]);\n    localStorage.removeItem('topology-positions');\n    localStorage.removeItem('topology-connections');\n    success(\n      'Макет сброшен',\n      'Расположение устройств и соединения сброшены к настройкам по умолчанию'\n    );\n  };\n\n  // Mouse handlers for dragging\n  const handleMouseDown = (e: React.MouseEvent, deviceId: string) => {\n    if (!isEditMode) return;\n\n    e.preventDefault();\n    const rect = svgRef.current?.getBoundingClientRect();\n    if (!rect) return;\n\n    const device = devicesWithPositions.find((d) => d.id === deviceId);\n    if (!device?.position) return;\n\n    setDragState({\n      isDragging: true,\n      deviceId,\n      offset: {\n        x: e.clientX - rect.left - device.position.x,\n        y: e.clientY - rect.top - device.position.y,\n      },\n    });\n  };\n\n  const handleMouseMove = (e: React.MouseEvent) => {\n    if (!isEditMode) return;\n\n    const rect = svgRef.current?.getBoundingClientRect();\n    if (!rect) return;\n\n    if (dragState.isDragging && dragState.deviceId) {\n      const newX = e.clientX - rect.left - dragState.offset.x;\n      const newY = e.clientY - rect.top - dragState.offset.y;\n\n      setDevicePositions((prev) => ({\n        ...prev,\n        [dragState.deviceId!]: { x: newX, y: newY },\n      }));\n    }\n\n    if (connectionState.isConnecting && connectionState.sourceId) {\n      setConnectionState((prev) => ({\n        ...prev,\n        tempLine: {\n          ...prev.tempLine!,\n          x2: e.clientX - rect.left,\n          y2: e.clientY - rect.top,\n        },\n      }));\n    }\n  };\n\n  const handleMouseUp = () => {\n    setDragState({\n      isDragging: false,\n      deviceId: null,\n      offset: { x: 0, y: 0 },\n    });\n  };\n\n  // Device click handler\n  const handleDeviceClick = (deviceId: string) => {\n    if (!isEditMode) return;\n\n    if (connectionState.isConnecting) {\n      if (connectionState.sourceId === deviceId) {\n        // Cancel connection\n        setConnectionState({\n          isConnecting: false,\n          sourceId: null,\n          tempLine: null,\n        });\n        info('Отменено', 'Создание соединения отменено');\n      } else {\n        // Create connection\n        const newConnection: Connection = {\n          id: `${connectionState.sourceId}-${deviceId}`,\n          sourceId: connectionState.sourceId!,\n          targetId: deviceId,\n        };\n\n        setConnections((prev) => [...prev, newConnection]);\n        setConnectionState({\n          isConnecting: false,\n          sourceId: null,\n          tempLine: null,\n        });\n        success('Соединение создано', 'Новое соединение успешно добавлено');\n      }\n    } else {\n      // Start connection\n      const device = devicesWithPositions.find((d) => d.id === deviceId);\n      if (device?.position) {\n        setConnectionState({\n          isConnecting: true,\n          sourceId: deviceId,\n          tempLine: {\n            x1: device.position.x,\n            y1: device.position.y,\n            x2: device.position.x,\n            y2: device.position.y,\n          },\n        });\n        info(\n          'Режим соединения',\n          'Кликните на другое устройство для создания соединения'\n        );\n      }\n    }\n  };\n\n  // Connection deletion\n  const handleDeleteConnection = (connectionId: string) => {\n    setConnections((prev) => prev.filter((c) => c.id !== connectionId));\n    warning('Соединение удалено', 'Соединение между устройствами удалено');\n  };\n\n  // Context menu handlers\n  const handleContextMenu = (e: React.MouseEvent, device: NetworkDevice) => {\n    e.preventDefault();\n    setContextMenu({\n      isVisible: true,\n      device,\n      position: { x: e.clientX, y: e.clientY },\n    });\n  };\n\n  const handleCloseContextMenu = () => {\n    setContextMenu({\n      isVisible: false,\n      device: null,\n      position: { x: 0, y: 0 },\n    });\n  };\n\n  const handleContextAction = (action: string, device: NetworkDevice) => {\n    handleCloseContextMenu();\n\n    switch (action) {\n      case 'ping':\n        if (device.status === 'online') {\n          success('Ping успешен', `Устройство ${device.name} отвечает`);\n        } else {\n          error('Ping неудачен', `Устройство ${device.name} не отвечает`);\n        }\n        break;\n      case 'ssh':\n        if (device.status === 'online') {\n          info('SSH соединение', `Подключение к ${device.name} через SSH...`);\n        } else {\n          error('SSH недоступен', `Устройство ${device.name} офлайн`);\n        }\n        break;\n      case 'web':\n        if (device.status === 'online') {\n          info('Веб-интерфейс', `Открытие веб-интерфейса ${device.name}...`);\n        } else {\n          error('Веб-интерфейс недоступен', `Устройство ${device.name} офлайн`);\n        }\n        break;\n      case 'edit':\n        info('Редактирование', `Редактирование настроек ${device.name}...`);\n        break;\n      case 'delete':\n        warning(\n          'Удаление устройства',\n          `Устройство ${device.name} помечено для удаления`\n        );\n        break;\n      default:\n        info(action, `Действие \"${action}\" для устройства ${device.name}`);\n    }\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n      className=\"rounded-xl border border-slate-700/50 bg-slate-800/50 p-6 backdrop-blur-sm\"\n    >\n      {/* Header */}\n      {!isFullscreen && (\n        <div className=\"mb-6 flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"rounded-lg bg-slate-700/50 p-2\">\n              <Network className=\"h-5 w-5 text-blue-400\" />\n            </div>\n            <div>\n              <h3 className=\"text-lg font-semibold text-white\">\n                Сетевая топология\n              </h3>\n              <p className=\"text-sm text-slate-400\">Интерактивная карта сети</p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={() => setIsEditMode(!isEditMode)}\n              className={`rounded-lg px-4 py-2 transition-colors ${\n                isEditMode\n                  ? 'border border-green-500/30 bg-green-500/20 text-green-400'\n                  : 'bg-slate-700/50 text-slate-400 hover:bg-slate-700 hover:text-white'\n              }`}\n            >\n              {isEditMode ? 'Выйти из редактора' : 'Режим редактирования'}\n            </button>\n            {isEditMode && (\n              <>\n                <button\n                  onClick={resetLayout}\n                  className=\"rounded-lg p-2 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-white\"\n                  title=\"Сбросить расположение\"\n                >\n                  <RotateCcw className=\"h-4 w-4\" />\n                </button>\n                <button\n                  onClick={() => {\n                    const positions =\n                      localStorage.getItem('topology-positions');\n                    const savedConnections = localStorage.getItem(\n                      'topology-connections'\n                    );\n                    // Debug info только для разработки\n                    if (process.env.NODE_ENV === 'development') {\n                      console.log('=== DEBUG localStorage ===');\n                      console.log(\n                        'Positions:',\n                        positions ? JSON.parse(positions) : 'Not found'\n                      );\n                      console.log(\n                        'Saved Connections:',\n                        savedConnections\n                          ? JSON.parse(savedConnections)\n                          : 'Not found'\n                      );\n                      console.log('Current devices:', devices.length);\n                      console.log(\n                        'Current connections count:',\n                        connections.length\n                      );\n                      info('Debug info', 'Проверьте консоль браузера (F12)');\n                    }\n                  }}\n                  className=\"rounded-lg p-2 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-white\"\n                  title=\"Отладка localStorage\"\n                >\n                  🐛\n                </button>\n              </>\n            )}\n            <button className=\"rounded-lg p-2 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-white\">\n              <Settings className=\"h-4 w-4\" />\n            </button>\n            <button\n              onClick={() => router.push('/topology-fullscreen')}\n              className=\"flex items-center space-x-2 rounded-lg border border-blue-500/30 bg-blue-500/20 px-4 py-2 text-blue-400 transition-colors hover:bg-blue-500/30\"\n              title=\"Открыть в полноэкранном режиме\"\n            >\n              <Maximize2 className=\"h-4 w-4\" />\n              <span>Полный экран</span>\n            </button>\n          </div>\n        </div>\n      )}\n\n      {isEditMode && (\n        <div className=\"mb-4 rounded-lg border border-blue-500/20 bg-blue-500/10 p-3\">\n          <p className=\"text-sm text-blue-400\">\n            <strong>Режим редактирования:</strong> Перетаскивайте устройства для\n            их перемещения. Кликайте по устройствам для создания соединений.\n            {connectionState.isConnecting && (\n              <span className=\"ml-2 text-yellow-400\">\n                Кликните на другое устройство для подключения, или на то же для\n                отмены.\n              </span>\n            )}\n          </p>\n        </div>\n      )}\n\n      {/* Topology Area */}\n      <div\n        className=\"relative w-full rounded-lg border border-slate-700/30 bg-slate-900/50\"\n        style={{ height: isFullscreen ? 'calc(100vh - 120px)' : '700px' }}\n      >\n        <svg\n          ref={svgRef}\n          width=\"100%\"\n          height=\"100%\"\n          className=\"overflow-visible\"\n          onMouseMove={handleMouseMove}\n          onMouseUp={handleMouseUp}\n          onMouseLeave={handleMouseUp}\n        >\n          {/* Background grid */}\n          <defs>\n            <pattern\n              id=\"topology-grid\"\n              width=\"20\"\n              height=\"20\"\n              patternUnits=\"userSpaceOnUse\"\n            >\n              <path\n                d=\"M 20 0 L 0 0 0 20\"\n                fill=\"none\"\n                stroke=\"#475569\"\n                strokeWidth=\"0.5\"\n                opacity=\"0.3\"\n              />\n            </pattern>\n          </defs>\n          <rect width=\"100%\" height=\"100%\" fill=\"url(#topology-grid)\" />\n\n          {/* Connections */}\n          {connections.map((connection) => {\n            const sourceDevice = devicesWithPositions.find(\n              (d) => d.id === connection.sourceId\n            );\n            const targetDevice = devicesWithPositions.find(\n              (d) => d.id === connection.targetId\n            );\n\n            if (!sourceDevice || !targetDevice) return null;\n\n            return (\n              <g key={connection.id}>\n                <line\n                  x1={sourceDevice.position!.x}\n                  y1={sourceDevice.position!.y}\n                  x2={targetDevice.position!.x}\n                  y2={targetDevice.position!.y}\n                  stroke=\"#6B7280\"\n                  strokeWidth=\"2\"\n                  strokeDasharray=\"5,5\"\n                />\n                {isEditMode && (\n                  <circle\n                    cx={\n                      (sourceDevice.position!.x + targetDevice.position!.x) / 2\n                    }\n                    cy={\n                      (sourceDevice.position!.y + targetDevice.position!.y) / 2\n                    }\n                    r=\"8\"\n                    fill=\"#EF4444\"\n                    className=\"cursor-pointer hover:fill-red-600\"\n                    onClick={() => handleDeleteConnection(connection.id)}\n                  >\n                    <title>Кликните для удаления соединения</title>\n                  </circle>\n                )}\n              </g>\n            );\n          })}\n\n          {/* Temporary connection line */}\n          {connectionState.tempLine && (\n            <line\n              x1={connectionState.tempLine.x1}\n              y1={connectionState.tempLine.y1}\n              x2={connectionState.tempLine.x2}\n              y2={connectionState.tempLine.y2}\n              stroke=\"#3B82F6\"\n              strokeWidth=\"2\"\n              strokeDasharray=\"3,3\"\n              opacity=\"0.7\"\n            />\n          )}\n\n          {/* Devices */}\n          {devicesWithPositions.map((device) => {\n            const Icon =\n              deviceIcons[device.type as keyof typeof deviceIcons] || Monitor; // Fallback to Monitor icon\n            const color =\n              deviceColors[device.type as keyof typeof deviceColors] ||\n              '#6B7280'; // Fallback to gray\n            const isConnecting = connectionState.sourceId === device.id;\n\n            // Определяем, выделено ли устройство (принадлежит выбранной папке)\n            const isHighlighted =\n              !selectedFolderId ||\n              selectedFolderId === 'root' ||\n              device.folderId === selectedFolderId;\n            const opacity = isHighlighted ? 1 : 0.3;\n\n            return (\n              <g\n                key={device.id}\n                transform={`translate(${device.position!.x}, ${device.position!.y})`}\n                className=\"cursor-pointer\"\n                style={{ opacity }}\n                onMouseDown={(e) => handleMouseDown(e, device.id)}\n                onClick={() => handleDeviceClick(device.id)}\n                onContextMenu={(e) => handleContextMenu(e, device)}\n              >\n                {/* Device background */}\n                <circle\n                  r={isConnecting ? '28' : '25'}\n                  fill={device.status === 'online' ? color : '#6B7280'}\n                  opacity=\"0.2\"\n                  stroke={isConnecting ? '#3B82F6' : 'transparent'}\n                  strokeWidth=\"2\"\n                />\n                <circle\n                  r=\"20\"\n                  fill={device.status === 'online' ? color : '#6B7280'}\n                  opacity=\"0.3\"\n                />\n\n                {/* Device icon */}\n                <foreignObject x=\"-12\" y=\"-12\" width=\"24\" height=\"24\">\n                  <Icon className=\"h-6 w-6 text-white\" />\n                </foreignObject>\n\n                {/* Device name */}\n                <text\n                  x=\"0\"\n                  y=\"40\"\n                  textAnchor=\"middle\"\n                  className=\"fill-white text-xs font-medium\"\n                >\n                  {device.name}\n                </text>\n\n                {/* Status indicator */}\n                <circle\n                  cx=\"15\"\n                  cy=\"-15\"\n                  r=\"4\"\n                  fill={\n                    device.status === 'online'\n                      ? '#10B981'\n                      : device.status === 'warning'\n                        ? '#F59E0B'\n                        : '#EF4444'\n                  }\n                />\n\n                {/* Edit mode overlay */}\n                {isEditMode && (\n                  <circle\n                    r=\"25\"\n                    fill=\"transparent\"\n                    stroke=\"#3B82F6\"\n                    strokeWidth=\"1\"\n                    strokeDasharray=\"2,2\"\n                    opacity=\"0.5\"\n                  />\n                )}\n              </g>\n            );\n          })}\n        </svg>\n      </div>\n\n      {/* Controls */}\n      <div className=\"mt-4 flex items-center justify-between\">\n        <div className=\"flex items-center space-x-6\">\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"h-3 w-3 rounded-full bg-green-500 opacity-60\"></div>\n            <span className=\"text-slate-400\">Онлайн</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"h-3 w-3 rounded-full bg-yellow-500 opacity-60\"></div>\n            <span className=\"text-slate-400\">Предупреждение</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"h-3 w-3 rounded-full bg-red-500 opacity-60\"></div>\n            <span className=\"text-slate-400\">Офлайн</span>\n          </div>\n        </div>\n\n        <div className=\"text-sm text-slate-500\">\n          {devicesWithPositions.length} устройств • {connections.length}{' '}\n          соединений\n        </div>\n      </div>\n\n      {/* Context Menu */}\n      {contextMenu.isVisible && contextMenu.device && (\n        <div\n          className=\"fixed z-50 min-w-[200px] rounded-lg border border-slate-600 bg-slate-800 p-2 shadow-xl\"\n          style={{\n            left: contextMenu.position.x,\n            top: contextMenu.position.y,\n          }}\n        >\n          <div className=\"mb-2 border-b border-slate-600 pb-2\">\n            <p className=\"font-semibold text-white\">\n              {contextMenu.device.name}\n            </p>\n            <p className=\"text-sm text-slate-400\">{contextMenu.device.ip}</p>\n          </div>\n\n          <button\n            onClick={async () => {\n              const { pingDevice } = useNetworkStore.getState();\n              try {\n                success(\n                  'Ping запущен',\n                  `Выполняется ping устройства ${contextMenu.device?.name}`\n                );\n                await pingDevice(contextMenu.device!.id);\n                success(\n                  'Ping выполнен',\n                  `Устройство ${contextMenu.device?.name} успешно пропинговано`\n                );\n              } catch (err) {\n                error(\n                  'Ошибка ping',\n                  `Не удалось выполнить ping устройства ${contextMenu.device?.name}`\n                );\n              }\n              setContextMenu({\n                isVisible: false,\n                device: null,\n                position: { x: 0, y: 0 },\n              });\n            }}\n            className=\"flex w-full items-center space-x-2 rounded px-3 py-2 text-left text-sm text-slate-300 hover:bg-slate-700\"\n          >\n            <div className=\"h-2 w-2 rounded-full bg-green-500\"></div>\n            <span>🏓 Ping устройство</span>\n          </button>\n\n          <button\n            onClick={() => {\n              info(\n                'Информация об устройстве',\n                `${contextMenu.device?.name}\\nIP: ${contextMenu.device?.ip}\\nСтатус: ${contextMenu.device?.status}\\nПоследний ответ: ${contextMenu.device?.responseTime}ms`\n              );\n              setContextMenu({\n                isVisible: false,\n                device: null,\n                position: { x: 0, y: 0 },\n              });\n            }}\n            className=\"flex w-full items-center space-x-2 rounded px-3 py-2 text-left text-sm text-slate-300 hover:bg-slate-700\"\n          >\n            <div className=\"h-2 w-2 rounded-full bg-blue-500\"></div>\n            <span>ℹ️ Информация</span>\n          </button>\n\n          <button\n            onClick={() => {\n              warning(\n                'Редактирование устройства',\n                'Функция будет реализована в следующей версии'\n              );\n              setContextMenu({\n                isVisible: false,\n                device: null,\n                position: { x: 0, y: 0 },\n              });\n            }}\n            className=\"flex w-full items-center space-x-2 rounded px-3 py-2 text-left text-sm text-slate-300 hover:bg-slate-700\"\n          >\n            <div className=\"h-2 w-2 rounded-full bg-yellow-500\"></div>\n            <span>✏️ Редактировать</span>\n          </button>\n        </div>\n      )}\n\n      {/* Toast Notifications */}\n      <ToastContainer toasts={toasts} onClose={removeToast} />\n    </motion.div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 5233, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5238, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/types/schemas.ts"],"sourcesContent":["import { z } from 'zod';\n\n// Device status enum\nexport const DeviceStatus = z.enum(['online', 'offline', 'warning']);\n\n// Device type enum\nexport const DeviceType = z.enum([\n  'router',\n  'switch',\n  'server',\n  'workstation',\n  'printer',\n  'mobile',\n  'firewall',\n  'access_point',\n]);\n\n// Alert type enum\nexport const AlertType = z.enum(['critical', 'warning', 'info']);\n\n// Connection type enum\nexport const ConnectionType = z.enum(['ethernet', 'wifi', 'fiber', 'serial']);\n\n// Position schema\nexport const PositionSchema = z.object({\n  x: z.number(),\n  y: z.number(),\n});\n\n// Credentials schema\nexport const CredentialsSchema = z.object({\n  username: z.string().optional(),\n  password: z.string().optional(),\n});\n\n// Monitoring configuration schema\nexport const MonitoringSchema = z.object({\n  ping: z.boolean(),\n  snmp: z.boolean(),\n  http: z.boolean(),\n  ssh: z.boolean(),\n});\n\n// Network device schema\nexport const NetworkDeviceSchema = z.object({\n  id: z.string(),\n  name: z.string().min(1, 'Имя устройства обязательно'),\n  ip: z.string().ip('Неверный формат IP-адреса'),\n  mac: z.string().optional(),\n  type: DeviceType,\n  status: DeviceStatus,\n  lastSeen: z.date(),\n  responseTime: z.number().min(0),\n  uptime: z.number().min(0).max(100),\n  location: z.string().optional(),\n  folderId: z.string(),\n  parentDeviceId: z.string().optional(),\n  port: z.number().optional(),\n  vendor: z.string().optional(),\n  model: z.string().optional(),\n  osVersion: z.string().optional(),\n  snmpCommunity: z.string().optional(),\n  credentials: CredentialsSchema.optional(),\n  monitoring: MonitoringSchema,\n  position: PositionSchema.optional(),\n});\n\n// Device folder schema - with proper typing for circular reference\nexport const DeviceFolderSchema: z.ZodType<{\n  id: string;\n  name: string;\n  parentId?: string;\n  color: string;\n  icon: string;\n  description?: string;\n  expanded: boolean;\n  children: any[];\n}> = z.lazy(() =>\n  z.object({\n    id: z.string(),\n    name: z.string().min(1, 'Имя папки обязательно'),\n    parentId: z.string().optional(),\n    color: z.string(),\n    icon: z.string(),\n    description: z.string().optional(),\n    expanded: z.boolean(),\n    children: z.array(DeviceFolderSchema),\n  })\n);\n\n// Network metrics schema\nexport const NetworkMetricsSchema = z.object({\n  totalDevices: z.number().min(0),\n  onlineDevices: z.number().min(0),\n  offlineDevices: z.number().min(0),\n  warningDevices: z.number().min(0),\n  averageResponseTime: z.number().min(0),\n  totalBandwidth: z.number().min(0),\n  usedBandwidth: z.number().min(0),\n  packetLoss: z.number().min(0).max(100),\n  networkUptime: z.number().min(0).max(100),\n  lastUpdate: z.date(),\n});\n\n// Bandwidth data schema\nexport const BandwidthDataSchema = z.object({\n  timestamp: z.date(),\n  upload: z.number().min(0),\n  download: z.number().min(0),\n  total: z.number().min(0),\n  deviceId: z.string().optional(),\n});\n\n// Alert message schema\nexport const AlertMessageSchema = z.object({\n  id: z.string(),\n  type: AlertType,\n  message: z.string().min(1, 'Сообщение обязательно'),\n  timestamp: z.date(),\n  deviceId: z.string().optional(),\n  folderId: z.string().optional(),\n  resolved: z.boolean(),\n  acknowledgedBy: z.string().optional(),\n  acknowledgedAt: z.date().optional(),\n});\n\n// System health schema\nexport const SystemHealthSchema = z.object({\n  cpu: z.number().min(0).max(100),\n  memory: z.number().min(0).max(100),\n  disk: z.number().min(0).max(100),\n  network: z.number().min(0).max(100),\n  temperature: z.number().min(0),\n  processes: z.number().min(0).optional(),\n  uptime: z.number().min(0).optional(),\n  lastUpdate: z.date(),\n});\n\n// Network connection schema\nexport const NetworkConnectionSchema = z.object({\n  id: z.string(),\n  sourceDeviceId: z.string(),\n  targetDeviceId: z.string(),\n  sourcePort: z.string().optional(),\n  targetPort: z.string().optional(),\n  connectionType: ConnectionType,\n  bandwidth: z.number().min(0),\n  status: z.enum(['active', 'inactive', 'error']),\n});\n\n// Monitoring config schema\nexport const MonitoringConfigSchema = z.object({\n  pingInterval: z.number().min(1000),\n  snmpInterval: z.number().min(1000),\n  httpTimeout: z.number().min(1000),\n  retryAttempts: z.number().min(1).max(10),\n  alertThresholds: z.object({\n    responseTime: z.number().min(0),\n    packetLoss: z.number().min(0).max(100),\n    cpuUsage: z.number().min(0).max(100),\n    memoryUsage: z.number().min(0).max(100),\n    diskUsage: z.number().min(0).max(100),\n  }),\n});\n\n// Complete network data schema\nexport const NetworkDataSchema = z.object({\n  devices: z.array(NetworkDeviceSchema),\n  folders: z.array(DeviceFolderSchema),\n  connections: z.array(NetworkConnectionSchema),\n  config: MonitoringConfigSchema,\n  lastBackup: z.date(),\n});\n\n// Export TypeScript types inferred from schemas\nexport type NetworkDevice = z.infer<typeof NetworkDeviceSchema>;\nexport type DeviceFolder = z.infer<typeof DeviceFolderSchema>;\nexport type NetworkMetrics = z.infer<typeof NetworkMetricsSchema>;\nexport type BandwidthData = z.infer<typeof BandwidthDataSchema>;\nexport type AlertMessage = z.infer<typeof AlertMessageSchema>;\nexport type SystemHealth = z.infer<typeof SystemHealthSchema>;\nexport type NetworkConnection = z.infer<typeof NetworkConnectionSchema>;\nexport type MonitoringConfig = z.infer<typeof MonitoringConfigSchema>;\nexport type NetworkData = z.infer<typeof NetworkDataSchema>;\n\n// Form schemas for editing\nexport const DeviceFormSchema = NetworkDeviceSchema.omit({\n  id: true,\n  lastSeen: true,\n  status: true,\n}).extend({\n  responseTime: z.number().min(0).optional(),\n  uptime: z.number().min(0).max(100).optional(),\n});\n\nexport const FolderFormSchema = z.object({\n  name: z.string().min(1, 'Имя папки обязательно'),\n  parentId: z.string().optional(),\n  color: z.string(),\n  icon: z.string(),\n  description: z.string().optional(),\n});\n\nexport type DeviceFormData = z.infer<typeof DeviceFormSchema>;\nexport type FolderFormData = z.infer<typeof FolderFormSchema>;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 5426, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5431, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/device-modal.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { NetworkDevice, DeviceFolder, DeviceFormSchema } from '@/types/schemas';\r\nimport {\r\n  X,\r\n  Router,\r\n  Server,\r\n  Monitor,\r\n  Printer,\r\n  Smartphone,\r\n  Network,\r\n  Wifi,\r\n  Shield,\r\n  Check,\r\n} from 'lucide-react';\r\n\r\ninterface DeviceModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSave: (device: Omit<NetworkDevice, 'id' | 'lastSeen' | 'status'>) => void;\r\n  device?: NetworkDevice;\r\n  folders: DeviceFolder[];\r\n  defaultFolderId?: string;\r\n}\r\n\r\nconst deviceTypes = [\r\n  { value: 'router', label: 'Роутер', icon: Router },\r\n  { value: 'switch', label: 'Коммутатор', icon: Network },\r\n  { value: 'server', label: 'Сервер', icon: Server },\r\n  { value: 'workstation', label: 'Рабочая станция', icon: Monitor },\r\n  { value: 'printer', label: 'Принтер', icon: Printer },\r\n  { value: 'mobile', label: 'Мобильное устройство', icon: Smartphone },\r\n  { value: 'firewall', label: 'Firewall', icon: Shield },\r\n  { value: 'access_point', label: 'Точка доступа', icon: Wifi },\r\n] as const;\r\n\r\ntype DeviceType = (typeof deviceTypes)[number]['value'];\r\n\r\nexport function DeviceModal({\r\n  isOpen,\r\n  onClose,\r\n  onSave,\r\n  device,\r\n  folders,\r\n  defaultFolderId,\r\n}: DeviceModalProps) {\r\n  const [formData, setFormData] = useState<{\r\n    name: string;\r\n    ip: string;\r\n    mac?: string;\r\n    type: DeviceType;\r\n    location?: string;\r\n    folderId: string;\r\n    vendor?: string;\r\n    model?: string;\r\n    osVersion?: string;\r\n    monitoring: {\r\n      ping: boolean;\r\n      snmp: boolean;\r\n      http: boolean;\r\n      ssh: boolean;\r\n    };\r\n  }>({\r\n    name: '',\r\n    ip: '',\r\n    mac: '',\r\n    type: 'workstation',\r\n    location: '',\r\n    folderId: 'root',\r\n    vendor: '',\r\n    model: '',\r\n    osVersion: '',\r\n    monitoring: {\r\n      ping: true,\r\n      snmp: false,\r\n      http: false,\r\n      ssh: false,\r\n    },\r\n  });\r\n  const [ipError, setIpError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (device) {\r\n      setFormData({\r\n        name: device.name,\r\n        ip: device.ip,\r\n        mac: device.mac,\r\n        type: device.type as DeviceType,\r\n        location: device.location,\r\n        folderId: device.folderId || 'root',\r\n        vendor: device.vendor,\r\n        model: device.model,\r\n        osVersion: device.osVersion,\r\n        monitoring: device.monitoring || {\r\n          ping: true,\r\n          snmp: false,\r\n          http: false,\r\n          ssh: false,\r\n        },\r\n      });\r\n    } else {\r\n      setFormData({\r\n        name: '',\r\n        ip: '',\r\n        mac: '',\r\n        type: 'workstation',\r\n        location: '',\r\n        folderId: defaultFolderId || 'root',\r\n        vendor: '',\r\n        model: '',\r\n        osVersion: '',\r\n        monitoring: {\r\n          ping: true,\r\n          snmp: false,\r\n          http: false,\r\n          ssh: false,\r\n        },\r\n      });\r\n    }\r\n  }, [device, isOpen, defaultFolderId]);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    console.log('🔄 Форма отправлена, данные:', formData);\r\n    setIpError(null);\r\n    try {\r\n      DeviceFormSchema.parse(formData);\r\n      console.log('✅ Валидация прошла успешно');\r\n    } catch (err: any) {\r\n      console.error('❌ Ошибка валидации:', err);\r\n      if (err.errors) {\r\n        console.log('Детали ошибок:', err.errors);\r\n        const ipErr = err.errors.find((e: any) => e.path[0] === 'ip');\r\n        if (ipErr) {\r\n          setIpError(ipErr.message);\r\n          return;\r\n        }\r\n      }\r\n      // Можно добавить обработку других ошибок\r\n      return;\r\n    }\r\n\r\n    const deviceData: Omit<NetworkDevice, 'id' | 'lastSeen' | 'status'> = {\r\n      name: formData.name,\r\n      ip: formData.ip,\r\n      mac: formData.mac || '',\r\n      type: formData.type,\r\n      responseTime: device?.responseTime || 0,\r\n      uptime: device?.uptime || 100,\r\n      location: formData.location || '',\r\n      folderId: formData.folderId || 'root',\r\n      vendor: formData.vendor || '',\r\n      model: formData.model || '',\r\n      osVersion: formData.osVersion || '',\r\n      monitoring: formData.monitoring,\r\n      position: device?.position,\r\n    };\r\n\r\n    console.log('📤 Отправляем данные устройства:', deviceData);\r\n    onSave(deviceData);\r\n    onClose();\r\n  };\r\n\r\n  const getAllFolders = (\r\n    folders: DeviceFolder[],\r\n    prefix = ''\r\n  ): Array<{ id: string; name: string }> => {\r\n    let result: Array<{ id: string; name: string }> = [];\r\n\r\n    folders.forEach((folder) => {\r\n      result.push({\r\n        id: folder.id,\r\n        name: prefix + folder.name,\r\n      });\r\n\r\n      if (folder.children && folder.children.length > 0) {\r\n        result = result.concat(\r\n          getAllFolders(folder.children, prefix + folder.name + ' / ')\r\n        );\r\n      }\r\n    });\r\n\r\n    return result;\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const flatFolders = getAllFolders(folders);\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        className=\"fixed inset-0 z-50 flex items-center justify-center bg-black/50 backdrop-blur-sm\"\r\n        onClick={onClose}\r\n      >\r\n        <motion.div\r\n          initial={{ opacity: 0, scale: 0.9, y: 20 }}\r\n          animate={{ opacity: 1, scale: 1, y: 0 }}\r\n          exit={{ opacity: 0, scale: 0.9, y: 20 }}\r\n          transition={{ duration: 0.3 }}\r\n          className=\"mx-4 max-h-[90vh] w-full max-w-3xl overflow-y-auto rounded-xl border border-slate-700 bg-slate-800 p-6\"\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          {/* Header */}\r\n          <div className=\"mb-6 flex items-center justify-between\">\r\n            <h2 className=\"text-xl font-semibold text-white\">\r\n              {device\r\n                ? 'Редактировать устройство'\r\n                : 'Добавить новое устройство'}\r\n            </h2>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"rounded-lg p-2 text-slate-400 transition-colors hover:bg-slate-700 hover:text-white\"\r\n            >\r\n              <X className=\"h-5 w-5\" />\r\n            </button>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n            {/* Basic Information */}\r\n            <div>\r\n              <h3 className=\"mb-4 text-lg font-medium text-white\">\r\n                Основная информация\r\n              </h3>\r\n              <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\r\n                <div>\r\n                  <label className=\"mb-2 block text-sm font-medium text-slate-300\">\r\n                    Название устройства *\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    value={formData.name}\r\n                    onChange={(e) =>\r\n                      setFormData((prev) => ({ ...prev, name: e.target.value }))\r\n                    }\r\n                    className=\"w-full rounded-lg border border-slate-600 bg-slate-700 px-4 py-3 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    placeholder=\"Введите название устройства\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"mb-2 block text-sm font-medium text-slate-300\">\r\n                    IP адрес *\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    value={formData.ip}\r\n                    onChange={(e) =>\r\n                      setFormData((prev) => ({ ...prev, ip: e.target.value }))\r\n                    }\r\n                    className=\"w-full rounded-lg border border-slate-600 bg-slate-700 px-4 py-3 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    placeholder=\"192.168.1.100\"\r\n                  />\r\n                  {ipError && (\r\n                    <div className=\"mt-1 text-xs text-red-400\">{ipError}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"mb-2 block text-sm font-medium text-slate-300\">\r\n                    MAC адрес\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.mac || ''}\r\n                    onChange={(e) =>\r\n                      setFormData((prev) => ({ ...prev, mac: e.target.value }))\r\n                    }\r\n                    className=\"w-full rounded-lg border border-slate-600 bg-slate-700 px-4 py-3 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    placeholder=\"00:1B:44:11:3A:B7\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"mb-2 block text-sm font-medium text-slate-300\">\r\n                    Расположение\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.location || ''}\r\n                    onChange={(e) =>\r\n                      setFormData((prev) => ({\r\n                        ...prev,\r\n                        location: e.target.value,\r\n                      }))\r\n                    }\r\n                    className=\"w-full rounded-lg border border-slate-600 bg-slate-700 px-4 py-3 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    placeholder=\"Серверная, 1 этаж\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"md:col-span-2\">\r\n                  <label className=\"mb-2 block text-sm font-medium text-slate-300\">\r\n                    Папка *\r\n                  </label>\r\n                  <select\r\n                    required\r\n                    value={formData.folderId}\r\n                    onChange={(e) =>\r\n                      setFormData((prev) => ({\r\n                        ...prev,\r\n                        folderId: e.target.value,\r\n                      }))\r\n                    }\r\n                    className=\"w-full rounded-lg border border-slate-600 bg-slate-700 px-4 py-3 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  >\r\n                    <option value=\"root\">Корневая папка</option>\r\n                    {flatFolders.map((folder) => (\r\n                      <option key={folder.id} value={folder.id}>\r\n                        {folder.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Device Type */}\r\n            <div>\r\n              <h3 className=\"mb-4 text-lg font-medium text-white\">\r\n                Тип устройства *\r\n              </h3>\r\n              <div className=\"grid grid-cols-2 gap-3 md:grid-cols-4\">\r\n                {deviceTypes.map((type) => {\r\n                  const Icon = type.icon;\r\n                  const isSelected = formData.type === type.value;\r\n\r\n                  return (\r\n                    <motion.button\r\n                      key={type.value}\r\n                      type=\"button\"\r\n                      whileHover={{ scale: 1.02 }}\r\n                      whileTap={{ scale: 0.98 }}\r\n                      onClick={() =>\r\n                        setFormData((prev) => ({ ...prev, type: type.value }))\r\n                      }\r\n                      className={`rounded-lg border-2 p-4 transition-all ${\r\n                        isSelected\r\n                          ? 'border-blue-500 bg-blue-500/20 text-blue-400'\r\n                          : 'border-slate-600 bg-slate-700/50 text-slate-300 hover:border-slate-500'\r\n                      }`}\r\n                    >\r\n                      <Icon className=\"mx-auto mb-2 h-8 w-8\" />\r\n                      <div className=\"text-sm font-medium\">{type.label}</div>\r\n                      {isSelected && (\r\n                        <div className=\"absolute right-2 top-2\">\r\n                          <Check className=\"h-4 w-4 text-blue-400\" />\r\n                        </div>\r\n                      )}\r\n                    </motion.button>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Device Details */}\r\n            <div>\r\n              <h3 className=\"mb-4 text-lg font-medium text-white\">\r\n                Дополнительные сведения\r\n              </h3>\r\n              <div className=\"grid grid-cols-1 gap-4 md:grid-cols-3\">\r\n                <div>\r\n                  <label className=\"mb-2 block text-sm font-medium text-slate-300\">\r\n                    Производитель\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.vendor || ''}\r\n                    onChange={(e) =>\r\n                      setFormData((prev) => ({\r\n                        ...prev,\r\n                        vendor: e.target.value,\r\n                      }))\r\n                    }\r\n                    className=\"w-full rounded-lg border border-slate-600 bg-slate-700 px-4 py-3 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    placeholder=\"Cisco, HP, Dell\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"mb-2 block text-sm font-medium text-slate-300\">\r\n                    Модель\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.model || ''}\r\n                    onChange={(e) =>\r\n                      setFormData((prev) => ({\r\n                        ...prev,\r\n                        model: e.target.value,\r\n                      }))\r\n                    }\r\n                    className=\"w-full rounded-lg border border-slate-600 bg-slate-700 px-4 py-3 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    placeholder=\"Номер модели\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"mb-2 block text-sm font-medium text-slate-300\">\r\n                    Версия ОС\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.osVersion || ''}\r\n                    onChange={(e) =>\r\n                      setFormData((prev) => ({\r\n                        ...prev,\r\n                        osVersion: e.target.value,\r\n                      }))\r\n                    }\r\n                    className=\"w-full rounded-lg border border-slate-600 bg-slate-700 px-4 py-3 text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    placeholder=\"Windows 11, Ubuntu 22.04\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Monitoring Settings */}\r\n            <div>\r\n              <h3 className=\"mb-4 text-lg font-medium text-white\">\r\n                Настройки мониторинга\r\n              </h3>\r\n              <div className=\"grid grid-cols-2 gap-4 md:grid-cols-4\">\r\n                {[\r\n                  {\r\n                    key: 'ping',\r\n                    label: 'PING',\r\n                    description: 'Проверка доступности',\r\n                  },\r\n                  {\r\n                    key: 'snmp',\r\n                    label: 'SNMP',\r\n                    description: 'Мониторинг через SNMP',\r\n                  },\r\n                  { key: 'http', label: 'HTTP', description: 'Веб-сервисы' },\r\n                  { key: 'ssh', label: 'SSH', description: 'Удаленный доступ' },\r\n                ].map((monitor) => (\r\n                  <motion.div\r\n                    key={monitor.key}\r\n                    whileHover={{ scale: 1.02 }}\r\n                    className={`cursor-pointer rounded-lg border-2 p-4 transition-all ${\r\n                      formData.monitoring[\r\n                        monitor.key as keyof typeof formData.monitoring\r\n                      ]\r\n                        ? 'border-green-500 bg-green-500/20 text-green-400'\r\n                        : 'border-slate-600 bg-slate-700/50 text-slate-300 hover:border-slate-500'\r\n                    }`}\r\n                    onClick={() =>\r\n                      setFormData((prev) => ({\r\n                        ...prev,\r\n                        monitoring: {\r\n                          ...prev.monitoring,\r\n                          [monitor.key]:\r\n                            !prev.monitoring[\r\n                              monitor.key as keyof typeof prev.monitoring\r\n                            ],\r\n                        },\r\n                      }))\r\n                    }\r\n                  >\r\n                    <div className=\"text-center\">\r\n                      <div className=\"mb-1 font-semibold\">{monitor.label}</div>\r\n                      <div className=\"text-xs opacity-75\">\r\n                        {monitor.description}\r\n                      </div>\r\n                      {formData.monitoring[\r\n                        monitor.key as keyof typeof formData.monitoring\r\n                      ] && (\r\n                        <div className=\"mt-2\">\r\n                          <Check className=\"mx-auto h-4 w-4 text-green-400\" />\r\n                        </div>\r\n                      )}\r\n                    </div>\r\n                  </motion.div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Action Buttons */}\r\n            <div className=\"flex items-center justify-end space-x-4 border-t border-slate-700 pt-6\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={onClose}\r\n                className=\"px-6 py-3 text-slate-300 transition-colors hover:text-white\"\r\n              >\r\n                Отмена\r\n              </button>\r\n              <motion.button\r\n                type=\"submit\"\r\n                whileHover={{ scale: 1.02 }}\r\n                whileTap={{ scale: 0.98 }}\r\n                className=\"rounded-lg bg-blue-500 px-6 py-3 font-medium text-white transition-colors hover:bg-blue-600\"\r\n              >\r\n                {device ? 'Сохранить изменения' : 'Добавить устройство'}\r\n              </motion.button>\r\n            </div>\r\n          </form>\r\n        </motion.div>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 6242, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6247, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/folder-modal.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { DeviceFolder } from '@/types/schemas';\r\nimport { \r\n  X, \r\n  Network,\r\n  Server,\r\n  Monitor,\r\n  Printer,\r\n  Smartphone,\r\n  Globe,\r\n  Database,\r\n  Building,\r\n  Folder,\r\n  Shield,\r\n  Wifi,\r\n  Check\r\n} from 'lucide-react';\r\n\r\ninterface FolderModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onSave: (folder: Omit<DeviceFolder, 'id' | 'children'>) => void;\r\n  folder?: DeviceFolder;\r\n  parentId?: string;\r\n  folders: DeviceFolder[];\r\n}\r\n\r\nconst iconOptions = [\r\n  { value: 'Network', label: 'Сеть', icon: Network },\r\n  { value: 'Server', label: 'Сервер', icon: Server },\r\n  { value: 'Monitor', label: 'Монитор', icon: Monitor },\r\n  { value: 'Printer', label: 'Принтер', icon: Printer },\r\n  { value: 'Smartphone', label: 'Мобильные', icon: Smartphone },\r\n  { value: 'Globe', label: 'Интернет', icon: Globe },\r\n  { value: 'Database', label: 'База данных', icon: Database },\r\n  { value: 'Building', label: 'Здание', icon: Building },\r\n  { value: 'Shield', label: 'Безопасность', icon: Shield },\r\n  { value: 'Wifi', label: 'WiFi', icon: Wifi },\r\n  { value: 'Folder', label: 'Папка', icon: Folder }\r\n];\r\n\r\nconst colorOptions = [\r\n  { value: '#3B82F6', label: 'Синий' },\r\n  { value: '#10B981', label: 'Зеленый' },\r\n  { value: '#EF4444', label: 'Красный' },\r\n  { value: '#F59E0B', label: 'Желтый' },\r\n  { value: '#8B5CF6', label: 'Фиолетовый' },\r\n  { value: '#06B6D4', label: 'Голубой' },\r\n  { value: '#F97316', label: 'Оранжевый' },\r\n  { value: '#EC4899', label: 'Розовый' },\r\n  { value: '#84CC16', label: 'Лайм' },\r\n  { value: '#6B7280', label: 'Серый' }\r\n];\r\n\r\nexport function FolderModal({\r\n  isOpen,\r\n  onClose,\r\n  onSave,\r\n  folder,\r\n  parentId,\r\n  folders\r\n}: FolderModalProps) {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    color: '#3B82F6',\r\n    icon: 'Folder',\r\n    parentId: parentId || 'root'\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (folder) {\r\n      setFormData({\r\n        name: folder.name,\r\n        description: folder.description || '',\r\n        color: folder.color,\r\n        icon: folder.icon,\r\n        parentId: folder.parentId || 'root'\r\n      });\r\n    } else {\r\n      setFormData({\r\n        name: '',\r\n        description: '',\r\n        color: '#3B82F6',\r\n        icon: 'Folder',\r\n        parentId: parentId || 'root'\r\n      });\r\n    }\r\n  }, [folder, parentId, isOpen]);\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    const folderData: Omit<DeviceFolder, 'id' | 'children'> = {\r\n      name: formData.name,\r\n      parentId: formData.parentId === 'root' ? undefined : formData.parentId,\r\n      color: formData.color,\r\n      icon: formData.icon,\r\n      description: formData.description || '',\r\n      expanded: true\r\n    };\r\n\r\n    onSave(folderData);\r\n    onClose();\r\n  };\r\n\r\n  const getAllFolders = (folders: DeviceFolder[], prefix = '', excludeId?: string): Array<{id: string, name: string}> => {\r\n    let result: Array<{id: string, name: string}> = [];\r\n    \r\n    folders.forEach(folder => {\r\n      if (folder.id !== excludeId) {\r\n        result.push({\r\n          id: folder.id,\r\n          name: prefix + folder.name\r\n        });\r\n        \r\n        if (folder.children && folder.children.length > 0) {\r\n          result = result.concat(getAllFolders(folder.children, prefix + folder.name + ' / ', excludeId));\r\n        }\r\n      }\r\n    });\r\n    \r\n    return result;\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  const availableFolders = getAllFolders(folders, '', folder?.id);\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <motion.div \r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        className=\"fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50\"\r\n        onClick={onClose}\r\n      >\r\n        <motion.div\r\n          initial={{ opacity: 0, scale: 0.9, y: 20 }}\r\n          animate={{ opacity: 1, scale: 1, y: 0 }}\r\n          exit={{ opacity: 0, scale: 0.9, y: 20 }}\r\n          transition={{ duration: 0.3 }}\r\n          className=\"bg-slate-800 border border-slate-700 rounded-xl p-6 w-full max-w-2xl mx-4\"\r\n          onClick={(e) => e.stopPropagation()}\r\n        >\r\n          {/* Header */}\r\n          <div className=\"flex items-center justify-between mb-6\">\r\n            <h2 className=\"text-xl font-semibold text-white\">\r\n              {folder ? 'Редактировать папку' : 'Создать новую папку'}\r\n            </h2>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"p-2 text-slate-400 hover:text-white hover:bg-slate-700 rounded-lg transition-colors\"\r\n            >\r\n              <X className=\"h-5 w-5\" />\r\n            </button>\r\n          </div>\r\n\r\n          <form onSubmit={handleSubmit} className=\"space-y-6\">\r\n            {/* Basic Information */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-slate-300 mb-2\">\r\n                  Название папки *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  required\r\n                  value={formData.name}\r\n                  onChange={(e) => setFormData(prev => ({ ...prev, name: e.target.value }))}\r\n                  className=\"w-full px-4 py-3 bg-slate-700 border border-slate-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  placeholder=\"Введите название папки\"\r\n                />\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-slate-300 mb-2\">\r\n                  Родительская папка\r\n                </label>\r\n                <select\r\n                  value={formData.parentId}\r\n                  onChange={(e) => setFormData(prev => ({ ...prev, parentId: e.target.value }))}\r\n                  className=\"w-full px-4 py-3 bg-slate-700 border border-slate-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                >\r\n                  <option value=\"root\">Корневая папка</option>\r\n                  {availableFolders.map(folder => (\r\n                    <option key={folder.id} value={folder.id}>\r\n                      {folder.name}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-slate-300 mb-2\">\r\n                Описание\r\n              </label>\r\n              <textarea\r\n                value={formData.description}\r\n                onChange={(e) => setFormData(prev => ({ ...prev, description: e.target.value }))}\r\n                className=\"w-full px-4 py-3 bg-slate-700 border border-slate-600 rounded-lg text-white focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                placeholder=\"Необязательное описание\"\r\n                rows={3}\r\n              />\r\n            </div>\r\n\r\n            {/* Icon Selection */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-slate-300 mb-3\">\r\n                Иконка\r\n              </label>\r\n              <div className=\"grid grid-cols-6 md:grid-cols-11 gap-2\">\r\n                {iconOptions.map(option => {\r\n                  const IconComponent = option.icon;\r\n                  const isSelected = formData.icon === option.value;\r\n                  \r\n                  return (\r\n                    <motion.button\r\n                      key={option.value}\r\n                      type=\"button\"\r\n                      whileHover={{ scale: 1.1 }}\r\n                      whileTap={{ scale: 0.95 }}\r\n                      onClick={() => setFormData(prev => ({ ...prev, icon: option.value }))}\r\n                      className={`relative p-3 rounded-lg border-2 transition-all ${\r\n                        isSelected \r\n                          ? 'border-blue-500 bg-blue-500/20 text-blue-400' \r\n                          : 'border-slate-600 bg-slate-700/50 text-slate-300 hover:border-slate-500'\r\n                      }`}\r\n                      title={option.label}\r\n                    >\r\n                      <IconComponent className=\"h-6 w-6 mx-auto\" />\r\n                      {isSelected && (\r\n                        <div className=\"absolute -top-1 -right-1\">\r\n                          <Check className=\"h-4 w-4 text-blue-400 bg-blue-500 rounded-full p-0.5\" />\r\n                        </div>\r\n                      )}\r\n                    </motion.button>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Color Selection */}\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-slate-300 mb-3\">\r\n                Цвет\r\n              </label>\r\n              <div className=\"grid grid-cols-5 md:grid-cols-10 gap-3\">\r\n                {colorOptions.map(color => {\r\n                  const isSelected = formData.color === color.value;\r\n                  \r\n                  return (\r\n                    <motion.button\r\n                      key={color.value}\r\n                      type=\"button\"\r\n                      whileHover={{ scale: 1.1 }}\r\n                      whileTap={{ scale: 0.95 }}\r\n                      onClick={() => setFormData(prev => ({ ...prev, color: color.value }))}\r\n                      className={`relative w-12 h-12 rounded-lg border-2 transition-all ${\r\n                        isSelected ? 'border-white' : 'border-slate-600'\r\n                      }`}\r\n                      style={{ backgroundColor: color.value }}\r\n                      title={color.label}\r\n                    >\r\n                      {isSelected && (\r\n                        <Check className=\"h-5 w-5 text-white mx-auto\" />\r\n                      )}\r\n                    </motion.button>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n\r\n            {/* Preview */}\r\n            <div className=\"bg-slate-700/50 rounded-lg p-4\">\r\n              <label className=\"block text-sm font-medium text-slate-300 mb-2\">\r\n                Предварительный просмотр\r\n              </label>\r\n              <div className=\"flex items-center space-x-3\">\r\n                {React.createElement(\r\n                  iconOptions.find(icon => icon.value === formData.icon)?.icon || Folder,\r\n                  {\r\n                    className: \"h-6 w-6\",\r\n                    style: { color: formData.color }\r\n                  }\r\n                )}\r\n                <span className=\"text-white font-medium\">\r\n                  {formData.name || 'Название папки'}\r\n                </span>\r\n              </div>\r\n              {formData.description && (\r\n                <p className=\"text-slate-400 text-sm mt-2\">{formData.description}</p>\r\n              )}\r\n            </div>\r\n\r\n            {/* Action Buttons */}\r\n            <div className=\"flex items-center justify-end space-x-4 pt-6 border-t border-slate-700\">\r\n              <button\r\n                type=\"button\"\r\n                onClick={onClose}\r\n                className=\"px-6 py-3 text-slate-300 hover:text-white transition-colors\"\r\n              >\r\n                Отмена\r\n              </button>\r\n              <motion.button\r\n                type=\"submit\"\r\n                whileHover={{ scale: 1.02 }}\r\n                whileTap={{ scale: 0.98 }}\r\n                className=\"px-6 py-3 bg-blue-500 hover:bg-blue-600 text-white rounded-lg transition-colors font-medium\"\r\n              >\r\n                {folder ? 'Сохранить изменения' : 'Создать папку'}\r\n              </motion.button>\r\n            </div>\r\n          </form>\r\n        </motion.div>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  );\r\n} "],"names":[],"mappings":"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"}},
    {"offset": {"line": 6855, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6860, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/realtime-monitor.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { Activity, Clock, Wifi, Server, Zap, Pause, Play } from 'lucide-react';\r\nimport { Card } from './card';\r\nimport { Badge } from './badge';\r\nimport { useNetworkStore } from '@/store/network-store';\r\n\r\ninterface RealtimeMonitorProps {\r\n  className?: string;\r\n}\r\n\r\nexport const RealtimeMonitor: React.FC<RealtimeMonitorProps> = ({\r\n  className = '',\r\n}) => {\r\n  const { webSocketConnected, devices, metrics, systemLogs } =\r\n    useNetworkStore();\r\n  const [secondsUntilNext, setSecondsUntilNext] = useState(30);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [lastUpdate, setLastUpdate] = useState<Date | null>(null);\r\n  const [updateCount, setUpdateCount] = useState(0);\r\n\r\n  // Симулируем 30-секундный цикл для отображения\r\n  useEffect(() => {\r\n    if (!webSocketConnected) {\r\n      setIsActive(false);\r\n      return;\r\n    }\r\n\r\n    setIsActive(true);\r\n    setLastUpdate(new Date());\r\n\r\n    const interval = setInterval(() => {\r\n      setSecondsUntilNext((prev) => {\r\n        if (prev <= 1) {\r\n          setLastUpdate(new Date());\r\n          return 30; // Сброс до 30 секунд\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [webSocketConnected]);\r\n\r\n  // Обновляем последнее время при изменении метрик\r\n  useEffect(() => {\r\n    if (metrics.lastUpdate) {\r\n      setLastUpdate(metrics.lastUpdate);\r\n    }\r\n  }, [metrics.lastUpdate]);\r\n\r\n  // Отслеживаем обновления через системные логи\r\n  useEffect(() => {\r\n    const recentLogs = systemLogs.filter(\r\n      (log) =>\r\n        log.message.includes('Обновлены метрики') &&\r\n        log.timestamp &&\r\n        Date.now() - log.timestamp.getTime() < 2000 // последние 2 секунды\r\n    );\r\n\r\n    if (recentLogs.length > 0) {\r\n      setUpdateCount((prev) => prev + 1);\r\n      setLastUpdate(new Date());\r\n    }\r\n  }, [systemLogs]);\r\n\r\n  const formatTime = (date: Date | null) => {\r\n    if (!date) return '--:--:--';\r\n    return date.toLocaleTimeString();\r\n  };\r\n\r\n  const getStatusColor = () => {\r\n    if (!webSocketConnected) return 'text-red-400';\r\n    if (isActive) return 'text-green-400';\r\n    return 'text-yellow-400';\r\n  };\r\n\r\n  const getStatusText = () => {\r\n    if (!webSocketConnected) return 'WebSocket отключен';\r\n    if (isActive) return 'Активный мониторинг';\r\n    return 'Мониторинг приостановлен';\r\n  };\r\n\r\n  return (\r\n    <Card className={`border-slate-700 bg-slate-800/50 ${className}`}>\r\n      <div className=\"p-4\">\r\n        <div className=\"mb-4 flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <motion.div\r\n              animate={\r\n                isActive\r\n                  ? {\r\n                      scale: [1, 1.1, 1],\r\n                      rotate: [0, 180, 360],\r\n                    }\r\n                  : {}\r\n              }\r\n              transition={{\r\n                duration: 2,\r\n                repeat: isActive ? Infinity : 0,\r\n                ease: 'easeInOut',\r\n              }}\r\n            >\r\n              <Activity className={`h-5 w-5 ${getStatusColor()}`} />\r\n            </motion.div>\r\n            <h3 className=\"text-lg font-semibold text-white\">\r\n              Real-time Monitor\r\n            </h3>\r\n          </div>\r\n\r\n          <Badge\r\n            className={`${\r\n              webSocketConnected\r\n                ? 'border-green-500/20 bg-green-500/20 text-green-400'\r\n                : 'border-red-500/20 bg-red-500/20 text-red-400'\r\n            }`}\r\n          >\r\n            {webSocketConnected ? 'Подключен' : 'Отключен'}\r\n          </Badge>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 gap-4 md:grid-cols-2\">\r\n          {/* Статус мониторинга */}\r\n          <div className=\"space-y-3\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm text-slate-400\">Статус:</span>\r\n              <span className={`text-sm font-medium ${getStatusColor()}`}>\r\n                {getStatusText()}\r\n              </span>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm text-slate-400\">Устройств:</span>\r\n              <span className=\"text-sm font-medium text-white\">\r\n                {devices.length} под мониторингом\r\n              </span>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm text-slate-400\">Онлайн:</span>\r\n              <span className=\"text-sm font-medium text-green-400\">\r\n                {devices.filter((d) => d.status === 'online').length}\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Таймер и обновления */}\r\n          <div className=\"space-y-3\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm text-slate-400\">До обновления:</span>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <Clock className=\"h-4 w-4 text-blue-400\" />\r\n                <motion.span\r\n                  className=\"font-mono text-sm text-blue-400\"\r\n                  animate={\r\n                    secondsUntilNext <= 5\r\n                      ? {\r\n                          color: ['#60a5fa', '#ef4444', '#60a5fa'],\r\n                        }\r\n                      : {}\r\n                  }\r\n                  transition={{\r\n                    duration: 0.5,\r\n                    repeat: secondsUntilNext <= 5 ? Infinity : 0,\r\n                  }}\r\n                >\r\n                  {secondsUntilNext}с\r\n                </motion.span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm text-slate-400\">Последнее:</span>\r\n              <span className=\"font-mono text-sm text-white\">\r\n                {formatTime(lastUpdate)}\r\n              </span>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm text-slate-400\">Интервал:</span>\r\n              <span className=\"text-sm font-medium text-white\">30 секунд</span>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-sm text-slate-400\">Обновлений:</span>\r\n              <motion.span\r\n                className=\"text-sm font-medium text-blue-400\"\r\n                animate={updateCount > 0 ? { scale: [1, 1.2, 1] } : {}}\r\n                transition={{ duration: 0.3 }}\r\n              >\r\n                {updateCount}\r\n              </motion.span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Прогресс бар */}\r\n        {webSocketConnected && (\r\n          <div className=\"mt-4\">\r\n            <div className=\"mb-2 flex items-center justify-between text-xs text-slate-400\">\r\n              <span>Прогресс цикла</span>\r\n              <span>{Math.round(((30 - secondsUntilNext) / 30) * 100)}%</span>\r\n            </div>\r\n            <div className=\"h-2 w-full rounded-full bg-slate-700\">\r\n              <motion.div\r\n                className=\"h-2 rounded-full bg-gradient-to-r from-blue-500 to-green-500\"\r\n                animate={{\r\n                  width: `${((30 - secondsUntilNext) / 30) * 100}%`,\r\n                }}\r\n                transition={{ duration: 0.5, ease: 'easeOut' }}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Активность в реальном времени */}\r\n        {webSocketConnected && isActive && (\r\n          <div className=\"mt-4 flex items-center space-x-4 text-xs text-slate-400\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <motion.div\r\n                className=\"h-2 w-2 rounded-full bg-green-400\"\r\n                animate={{ opacity: [1, 0.3, 1] }}\r\n                transition={{ duration: 1, repeat: Infinity }}\r\n              />\r\n              <span>Пингуем устройства</span>\r\n            </div>\r\n\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Wifi className=\"h-3 w-3\" />\r\n              <span>WebSocket активен</span>\r\n            </div>\r\n\r\n            <div className=\"flex items-center space-x-2\">\r\n              <Server className=\"h-3 w-3\" />\r\n              <span>Сервер: localhost:5000</span>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 7423, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7428, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/websocket-debug.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { Card } from './card';\nimport { Badge } from './badge';\nimport { useWebSocket } from '@/hooks/useWebSocket';\nimport { useNetworkStore } from '@/store/network-store';\nimport { Button } from './button';\n\nexport const WebSocketDebug: React.FC = () => {\n  const { socket, connected, connect, disconnect } = useWebSocket();\n  const { webSocketConnected, apiConnected } = useNetworkStore();\n  const [logs, setLogs] = useState<string[]>([]);\n\n  // Перехватываем console.log для отображения логов WebSocket\n  useEffect(() => {\n    const originalLog = console.log;\n    const originalError = console.error;\n\n    console.log = (...args) => {\n      const message = args.join(' ');\n      if (\n        message.includes('WebSocket') ||\n        message.includes('🔌') ||\n        message.includes('📡')\n      ) {\n        setLogs((prev) => [\n          `${new Date().toLocaleTimeString()} | ${message}`,\n          ...prev.slice(0, 9),\n        ]);\n      }\n      originalLog(...args);\n    };\n\n    console.error = (...args) => {\n      const message = args.join(' ');\n      if (message.includes('WebSocket') || message.includes('❌')) {\n        setLogs((prev) => [\n          `${new Date().toLocaleTimeString()} | ERROR: ${message}`,\n          ...prev.slice(0, 9),\n        ]);\n      }\n      originalError(...args);\n    };\n\n    return () => {\n      console.log = originalLog;\n      console.error = originalError;\n    };\n  }, []);\n\n  const handleConnect = () => {\n    console.log('🔧 Ручное подключение WebSocket...');\n    connect();\n  };\n\n  const handleDisconnect = () => {\n    console.log('🔧 Ручное отключение WebSocket...');\n    disconnect();\n  };\n\n  const testConnection = async () => {\n    try {\n      console.log('🧪 Тестирование подключения к localhost:5000...');\n      const response = await fetch('http://localhost:5000/api/health');\n      if (response.ok) {\n        const data = await response.text();\n        console.log('✅ Бэкенд доступен:', data);\n      } else {\n        console.log('❌ Бэкенд недоступен, статус:', response.status);\n      }\n    } catch (error) {\n      console.log('❌ Ошибка подключения к бэкенду:', error);\n    }\n  };\n\n  return (\n    <Card className=\"border-slate-700 bg-slate-800/50\">\n      <div className=\"p-4\">\n        <h3 className=\"mb-4 text-lg font-semibold text-white\">\n          WebSocket Debug\n        </h3>\n\n        {/* Статусы */}\n        <div className=\"mb-4 grid grid-cols-2 gap-4\">\n          <div>\n            <span className=\"text-sm text-slate-400\">Socket Connected:</span>\n            <Badge\n              className={\n                connected\n                  ? 'ml-2 bg-green-500/20 text-green-400'\n                  : 'ml-2 bg-red-500/20 text-red-400'\n              }\n            >\n              {connected ? 'Да' : 'Нет'}\n            </Badge>\n          </div>\n\n          <div>\n            <span className=\"text-sm text-slate-400\">Store WebSocket:</span>\n            <Badge\n              className={\n                webSocketConnected\n                  ? 'ml-2 bg-green-500/20 text-green-400'\n                  : 'ml-2 bg-red-500/20 text-red-400'\n              }\n            >\n              {webSocketConnected ? 'Да' : 'Нет'}\n            </Badge>\n          </div>\n\n          <div>\n            <span className=\"text-sm text-slate-400\">API Connected:</span>\n            <Badge\n              className={\n                apiConnected\n                  ? 'ml-2 bg-green-500/20 text-green-400'\n                  : 'ml-2 bg-red-500/20 text-red-400'\n              }\n            >\n              {apiConnected ? 'Да' : 'Нет'}\n            </Badge>\n          </div>\n\n          <div>\n            <span className=\"text-sm text-slate-400\">Socket ID:</span>\n            <span className=\"ml-2 font-mono text-xs text-white\">\n              {socket?.id || 'N/A'}\n            </span>\n          </div>\n        </div>\n\n        {/* Кнопки управления */}\n        <div className=\"mb-4 flex space-x-2\">\n          <Button size=\"sm\" onClick={handleConnect} disabled={connected}>\n            Подключить\n          </Button>\n          <Button size=\"sm\" onClick={handleDisconnect} disabled={!connected}>\n            Отключить\n          </Button>\n          <Button size=\"sm\" onClick={testConnection} variant=\"outline\">\n            Тест API\n          </Button>\n        </div>\n\n        {/* Логи */}\n        <div className=\"h-48 overflow-y-auto rounded bg-slate-900/50 p-3\">\n          <div className=\"font-mono text-xs text-slate-300\">\n            {logs.length === 0 ? (\n              <div className=\"text-slate-500\">\n                Логи WebSocket появятся здесь...\n              </div>\n            ) : (\n              logs.map((log, index) => (\n                <div key={index} className=\"mb-1\">\n                  {log}\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n    </Card>\n  );\n};\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 7711, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7716, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/system-status.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { CheckCircle, Clock, Zap, Activity } from 'lucide-react';\r\nimport { Card } from './card';\r\nimport { Badge } from './badge';\r\nimport { useNetworkStore } from '@/store/network-store';\r\n\r\nexport const SystemStatus: React.FC = () => {\r\n  const { webSocketConnected, apiConnected, devices, metrics } =\r\n    useNetworkStore();\r\n\r\n  const getOverallStatus = () => {\r\n    if (webSocketConnected && apiConnected) {\r\n      return {\r\n        status: 'Real-time Active',\r\n        color: 'text-green-400',\r\n        bg: 'bg-green-500/20 border-green-500/20',\r\n        icon: CheckCircle,\r\n      };\r\n    } else if (apiConnected) {\r\n      return {\r\n        status: 'API Only',\r\n        color: 'text-yellow-400',\r\n        bg: 'bg-yellow-500/20 border-yellow-500/20',\r\n        icon: Clock,\r\n      };\r\n    } else {\r\n      return {\r\n        status: 'Demo Mode',\r\n        color: 'text-red-400',\r\n        bg: 'bg-red-500/20 border-red-500/20',\r\n        icon: Activity,\r\n      };\r\n    }\r\n  };\r\n\r\n  const status = getOverallStatus();\r\n  const StatusIcon = status.icon;\r\n\r\n  const onlineDevices = devices.filter((d) => d.status === 'online').length;\r\n  const offlineDevices = devices.filter((d) => d.status === 'offline').length;\r\n\r\n  return (\r\n    <Card className=\"border-slate-700 bg-slate-800/50\">\r\n      <div className=\"p-4\">\r\n        <div className=\"mb-4 flex items-center justify-between\">\r\n          <h3 className=\"text-lg font-semibold text-white\">Статус системы</h3>\r\n          <Badge className={status.bg}>\r\n            <StatusIcon className=\"mr-2 h-4 w-4\" />\r\n            {status.status}\r\n          </Badge>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-2 gap-4\">\r\n          {/* Подключения */}\r\n          <div className=\"space-y-2\">\r\n            <h4 className=\"text-sm font-medium text-slate-300\">Подключения</h4>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-xs text-slate-400\">WebSocket:</span>\r\n              <div className=\"flex items-center space-x-1\">\r\n                <div\r\n                  className={`h-2 w-2 rounded-full ${webSocketConnected ? 'bg-green-400' : 'bg-red-400'}`}\r\n                />\r\n                <span className=\"text-xs text-white\">\r\n                  {webSocketConnected ? 'Активен' : 'Отключен'}\r\n                </span>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-xs text-slate-400\">API:</span>\r\n              <div className=\"flex items-center space-x-1\">\r\n                <div\r\n                  className={`h-2 w-2 rounded-full ${apiConnected ? 'bg-green-400' : 'bg-red-400'}`}\r\n                />\r\n                <span className=\"text-xs text-white\">\r\n                  {apiConnected ? 'Подключен' : 'Недоступен'}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Устройства */}\r\n          <div className=\"space-y-2\">\r\n            <h4 className=\"text-sm font-medium text-slate-300\">Устройства</h4>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-xs text-slate-400\">Онлайн:</span>\r\n              <motion.span\r\n                className=\"text-xs font-medium text-green-400\"\r\n                animate={onlineDevices > 0 ? { scale: [1, 1.1, 1] } : {}}\r\n                transition={{ duration: 0.5 }}\r\n              >\r\n                {onlineDevices}\r\n              </motion.span>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-xs text-slate-400\">Офлайн:</span>\r\n              <span className=\"text-xs font-medium text-red-400\">\r\n                {offlineDevices}\r\n              </span>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <span className=\"text-xs text-slate-400\">Всего:</span>\r\n              <span className=\"text-xs font-medium text-white\">\r\n                {devices.length}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Возможности */}\r\n        <div className=\"mt-4 border-t border-slate-700 pt-3\">\r\n          <div className=\"grid grid-cols-2 gap-2 text-xs\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <div\r\n                className={`h-2 w-2 rounded-full ${webSocketConnected ? 'animate-pulse bg-green-400' : 'bg-slate-600'}`}\r\n              />\r\n              <span className=\"text-slate-400\">Real-time пинг</span>\r\n            </div>\r\n\r\n            <div className=\"flex items-center space-x-2\">\r\n              <div\r\n                className={`h-2 w-2 rounded-full ${webSocketConnected ? 'animate-pulse bg-blue-400' : 'bg-slate-600'}`}\r\n              />\r\n              <span className=\"text-slate-400\">Live графики</span>\r\n            </div>\r\n\r\n            <div className=\"flex items-center space-x-2\">\r\n              <div\r\n                className={`h-2 w-2 rounded-full ${apiConnected ? 'bg-purple-400' : 'bg-slate-600'}`}\r\n              />\r\n              <span className=\"text-slate-400\">API интеграция</span>\r\n            </div>\r\n\r\n            <div className=\"flex items-center space-x-2\">\r\n              <div\r\n                className={`h-2 w-2 rounded-full ${webSocketConnected ? 'animate-pulse bg-orange-400' : 'bg-slate-600'}`}\r\n              />\r\n              <span className=\"text-slate-400\">Auto мониторинг</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Индикатор активности */}\r\n        {webSocketConnected && (\r\n          <div className=\"mt-3 flex items-center justify-center\">\r\n            <motion.div\r\n              className=\"flex items-center space-x-2 text-xs text-green-400\"\r\n              animate={{ opacity: [1, 0.6, 1] }}\r\n              transition={{ duration: 2, repeat: Infinity }}\r\n            >\r\n              <Zap className=\"h-3 w-3\" />\r\n              <span>Система активна</span>\r\n            </motion.div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 8190, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8195, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/dashboard/network-dashboard.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useNetworkStore } from '@/store/network-store';\nimport { motion } from 'framer-motion';\nimport {\n  Network,\n  Server,\n  Activity,\n  Shield,\n  Clock,\n  RefreshCw,\n  Settings,\n  FolderOpen,\n  Download,\n  AlertTriangle,\n  Monitor,\n  Plus,\n} from 'lucide-react';\nimport { FolderTree } from '../ui/folder-tree';\nimport { MetricsCard } from '../ui/metrics-card';\nimport { BandwidthChart } from '../ui/bandwidth-chart';\nimport { DevicesSection } from './devices-section';\nimport { AlertsPanel } from '../ui/alerts-panel';\nimport { SystemHealthCard } from '../ui/system-health-card';\nimport { NetworkTopology } from '../ui/network-topology';\nimport { DeviceModal } from '../ui/device-modal';\nimport { FolderModal } from '../ui/folder-modal';\nimport { RealtimeMonitor } from '../ui/realtime-monitor';\nimport { WebSocketDebug } from '../ui/websocket-debug';\nimport { SystemStatus } from '../ui/system-status';\n\nexport function NetworkDashboard() {\n  const [mounted, setMounted] = useState(false);\n\n  const {\n    devices,\n    folders,\n    metrics,\n    bandwidthHistory,\n    alerts,\n    systemHealth,\n    selectedFolderId,\n    sidebarCollapsed,\n    rootFolderExpanded,\n\n    useApi,\n    apiConnected,\n    setSidebarCollapsed,\n    setSelectedFolder,\n    addDevice,\n    updateDevice,\n    deleteDevice,\n    addFolder,\n    updateFolder,\n    deleteFolder,\n    refreshData,\n    exportData,\n    resetToMockData,\n    initializeApi,\n    getFolderExpandedState,\n  } = useNetworkStore();\n\n  const [deviceModalOpen, setDeviceModalOpen] = useState(false);\n  const [folderModalOpen, setFolderModalOpen] = useState(false);\n  const [editingDevice, setEditingDevice] = useState<string | null>(null);\n  const [editingFolder, setEditingFolder] = useState<string | null>(null);\n  const [folderParentId, setFolderParentId] = useState<string>('root');\n  const [deviceFolderId, setDeviceFolderId] = useState<string>('root');\n\n  // Исправление hydration error и инициализация API\n  useEffect(() => {\n    setMounted(true);\n\n    // Пробуем подключиться к API при загрузке\n    const initApi = async () => {\n      try {\n        await initializeApi();\n      } catch (error) {\n        console.error('Ошибка инициализации API:', error);\n      }\n    };\n\n    initApi();\n  }, [initializeApi]);\n\n  if (!mounted) {\n    return (\n      <div className=\"flex min-h-screen items-center justify-center bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900\">\n        <div className=\"text-white\">Загрузка...</div>\n      </div>\n    );\n  }\n\n  const handleAddDevice = () => {\n    setEditingDevice(null);\n    setDeviceFolderId(selectedFolderId || 'root');\n    setDeviceModalOpen(true);\n  };\n\n  const handleAddDeviceToFolder = (folderId: string) => {\n    setEditingDevice(null);\n    setDeviceFolderId(folderId);\n    setDeviceModalOpen(true);\n  };\n\n  const handleEditDevice = (deviceId: string) => {\n    setEditingDevice(deviceId);\n    setDeviceModalOpen(true);\n  };\n\n  const handleDeleteDevice = (deviceId: string) => {\n    if (confirm('Вы уверены, что хотите удалить это устройство?')) {\n      deleteDevice(deviceId);\n    }\n  };\n\n  const handleAddFolder = (parentId: string) => {\n    setEditingFolder(null);\n    setFolderParentId(parentId);\n    setFolderModalOpen(true);\n  };\n\n  const handleEditFolder = (folderId: string) => {\n    setEditingFolder(folderId);\n    setFolderModalOpen(true);\n  };\n\n  const handleDeleteFolder = (folderId: string) => {\n    if (\n      confirm(\n        'Вы уверены, что хотите удалить эту папку? Устройства из неё будут перемещены в корневые устройства.'\n      )\n    ) {\n      deleteFolder(folderId);\n    }\n  };\n\n  const handleRefreshData = () => {\n    refreshData();\n  };\n\n  const handleCreateBackup = () => {\n    const data = exportData();\n    const blob = new Blob([data], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `network-monitor-backup-${new Date().toISOString().split('T')[0]}.json`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  };\n\n  const getEditingDevice = () => {\n    return editingDevice\n      ? devices.find((d) => d.id === editingDevice)\n      : undefined;\n  };\n\n  const getEditingFolder = () => {\n    if (!editingFolder) return undefined;\n\n    const findFolder = (folders: any[]): any => {\n      for (const folder of folders) {\n        if (folder.id === editingFolder) return folder;\n        if (folder.children) {\n          const found = findFolder(folder.children);\n          if (found) return found;\n        }\n      }\n      return undefined;\n    };\n\n    return findFolder(folders);\n  };\n\n  return (\n    <div className=\"flex min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900\">\n      {/* Sidebar */}\n      <div\n        className={`${sidebarCollapsed ? 'w-16' : 'w-80'} flex flex-col border-r border-slate-700/50 bg-slate-800/30 backdrop-blur-sm transition-all duration-300`}\n      >\n        <div className=\"border-b border-slate-700/50 p-4\">\n          <div className=\"flex items-center justify-between\">\n            {!sidebarCollapsed && (\n              <div className=\"flex min-w-0 flex-1 items-center space-x-2\">\n                <FolderOpen className=\"h-4 w-4 flex-shrink-0 text-blue-400\" />\n                <h2 className=\"truncate text-sm font-semibold text-white\">\n                  Папки устройств\n                </h2>\n              </div>\n            )}\n            <div className=\"flex flex-shrink-0 items-center space-x-0.5\">\n              {!sidebarCollapsed && (\n                <>\n                  <button\n                    onClick={handleAddDevice}\n                    className=\"rounded p-1 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-green-400\"\n                    title=\"Добавить устройство\"\n                  >\n                    <Monitor className=\"h-3 w-3\" />\n                  </button>\n                  <button\n                    onClick={() => handleAddFolder('root')}\n                    className=\"rounded p-1 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-blue-400\"\n                    title=\"Добавить папку\"\n                  >\n                    <Plus className=\"h-3 w-3\" />\n                  </button>\n                  <button\n                    onClick={resetToMockData}\n                    className=\"rounded p-1 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-yellow-400\"\n                    title=\"Сбросить к исходным данным\"\n                  >\n                    <RefreshCw className=\"h-3 w-3\" />\n                  </button>\n                </>\n              )}\n              <button\n                onClick={() => setSidebarCollapsed(!sidebarCollapsed)}\n                className={`rounded p-1.5 transition-colors ${\n                  sidebarCollapsed\n                    ? 'bg-blue-500/20 text-blue-400 hover:bg-blue-500/30'\n                    : 'text-slate-400 hover:bg-slate-700/50 hover:text-white'\n                }`}\n                title={sidebarCollapsed ? 'Развернуть папки' : 'Свернуть папки'}\n              >\n                <FolderOpen className=\"h-4 w-4\" />\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {!sidebarCollapsed && (\n          <div className=\"flex-1 overflow-y-auto p-4\">\n            <FolderTree\n              folders={folders}\n              devices={devices}\n              selectedFolderId={selectedFolderId}\n              rootFolderExpanded={rootFolderExpanded}\n              onFolderSelect={setSelectedFolder}\n              onFolderToggle={(folderId) => {\n                if (folderId === 'root') {\n                  updateFolder('root', { expanded: !rootFolderExpanded });\n                } else {\n                  const isExpanded = getFolderExpandedState(folderId);\n                  updateFolder(folderId, { expanded: !isExpanded });\n                }\n              }}\n              onAddFolder={handleAddFolder}\n              onEditFolder={handleEditFolder}\n              onDeleteFolder={handleDeleteFolder}\n              onAddDeviceToFolder={handleAddDeviceToFolder}\n              onEditDevice={handleEditDevice}\n              onDeleteDevice={handleDeleteDevice}\n            />\n          </div>\n        )}\n      </div>\n\n      {/* Main Content */}\n      <div className=\"flex flex-1 flex-col\">\n        {/* Header */}\n        <header className=\"sticky top-0 z-50 border-b border-slate-700/50 bg-slate-800/50 backdrop-blur-sm\">\n          <div className=\"px-4 sm:px-6 lg:px-8\">\n            <div className=\"flex h-16 items-center justify-between\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"rounded-lg border border-blue-500/20 bg-blue-500/10 p-2\">\n                  <Network className=\"h-8 w-8 text-blue-400\" />\n                </div>\n                <div>\n                  <h1 className=\"text-xl font-bold text-white\">\n                    Network Monitor Pro\n                  </h1>\n                  <p className=\"text-sm text-slate-400\">\n                    Панель мониторинга сети в реальном времени\n                  </p>\n                </div>\n              </div>\n\n              <div className=\"flex items-center space-x-4\">\n                <div className=\"flex items-center space-x-2 text-sm text-slate-400\">\n                  <div className=\"h-2 w-2 animate-pulse rounded-full bg-green-500\"></div>\n                  <span>Live</span>\n                </div>\n                <button\n                  onClick={handleRefreshData}\n                  className=\"rounded-lg p-2 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-white\"\n                >\n                  <RefreshCw className=\"h-5 w-5\" />\n                </button>\n                <button className=\"rounded-lg p-2 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-white\">\n                  <Settings className=\"h-5 w-5\" />\n                </button>\n                <button\n                  onClick={handleCreateBackup}\n                  className=\"rounded-lg p-2 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-white\"\n                  title=\"Создать резервную копию\"\n                >\n                  <Download className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </header>\n\n        <main className=\"flex-1 overflow-y-auto px-2 py-6 sm:px-4 lg:px-6\">\n          {/* Key Metrics */}\n          <div className=\"mb-6 grid grid-cols-1 gap-4 md:grid-cols-2 lg:grid-cols-5\">\n            <MetricsCard\n              title=\"Всего устройств\"\n              value={metrics.totalDevices}\n              icon={Server}\n              color=\"blue\"\n            />\n            <MetricsCard\n              title=\"Устройства онлайн\"\n              value={metrics.onlineDevices}\n              icon={Activity}\n              color=\"green\"\n            />\n            <MetricsCard\n              title=\"Предупреждения\"\n              value={metrics.warningDevices}\n              icon={AlertTriangle}\n              color=\"yellow\"\n            />\n            <MetricsCard\n              title=\"Время отклика\"\n              value={`${metrics.averageResponseTime}ms`}\n              icon={Clock}\n              color=\"purple\"\n            />\n            <MetricsCard\n              title=\"Время работы сети\"\n              value={`${metrics.networkUptime}%`}\n              icon={Shield}\n              color=\"green\"\n            />\n          </div>\n\n          {/* Real-time Monitor and Debug */}\n          <div className=\"mb-6 grid grid-cols-1 gap-6 lg:grid-cols-3\">\n            <RealtimeMonitor />\n            <WebSocketDebug />\n            <SystemStatus />\n          </div>\n\n          {/* Main Dashboard Grid */}\n          <div className=\"mb-6 grid grid-cols-1 gap-6 lg:grid-cols-3\">\n            {/* Bandwidth Chart */}\n            <div className=\"lg:col-span-2\">\n              <BandwidthChart />\n            </div>\n\n            {/* System Health */}\n            <div>\n              <SystemHealthCard />\n            </div>\n          </div>\n\n          {/* Network Topology */}\n          <div className=\"mb-6\">\n            <NetworkTopology />\n          </div>\n\n          {/* Devices and Alerts */}\n          <div className=\"grid grid-cols-1 gap-6 xl:grid-cols-4\">\n            {/* Device Grid */}\n            <div className=\"xl:col-span-3\">\n              <DevicesSection\n                onAddDevice={handleAddDevice}\n                onEditDevice={handleEditDevice}\n                onDeleteDevice={handleDeleteDevice}\n              />\n            </div>\n\n            {/* Alerts Panel */}\n            <div className=\"xl:col-span-1\">\n              <AlertsPanel />\n            </div>\n          </div>\n        </main>\n      </div>\n\n      {/* Modals */}\n      <DeviceModal\n        isOpen={deviceModalOpen}\n        onClose={() => setDeviceModalOpen(false)}\n        onSave={(deviceData) => {\n          if (editingDevice) {\n            updateDevice(editingDevice, deviceData);\n          } else {\n            addDevice(deviceData);\n          }\n          setEditingDevice(null);\n        }}\n        device={getEditingDevice()}\n        folders={folders}\n        defaultFolderId={deviceFolderId}\n      />\n\n      <FolderModal\n        isOpen={folderModalOpen}\n        onClose={() => setFolderModalOpen(false)}\n        onSave={(folderData) => {\n          if (editingFolder) {\n            updateFolder(editingFolder, folderData);\n          } else {\n            addFolder(folderData);\n          }\n          setEditingFolder(null);\n        }}\n        folder={getEditingFolder()}\n        parentId={folderParentId}\n        folders={folders}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 8902, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8907, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/app/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { NetworkDashboard } from '@/components/dashboard/network-dashboard';\r\n\r\nexport default function HomePage() {\r\n  return (\r\n    <main className=\"min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900\">\r\n      <NetworkDashboard />\r\n    </main>\r\n  );\r\n} "],"names":[],"mappings":";;;;;;AAAA;;;AAIe,SAAS;IACtB,qBACE,4SAAC;QAAK,WAAU;kBACd,cAAA,4SAAC,kLAAA,CAAA,mBAAgB;;;;;;;;;;AAGvB;KANwB"}},
    {"offset": {"line": 8933, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}