{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/toast.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { X, CheckCircle, AlertCircle, Info, AlertTriangle } from 'lucide-react';\r\n\r\nexport interface Toast {\r\n  id: string;\r\n  type: 'success' | 'error' | 'warning' | 'info';\r\n  title: string;\r\n  message?: string;\r\n  duration?: number;\r\n}\r\n\r\ninterface ToastProps {\r\n  toast: Toast;\r\n  onClose: (id: string) => void;\r\n}\r\n\r\ninterface ToastContainerProps {\r\n  toasts: Toast[];\r\n  onClose: (id: string) => void;\r\n}\r\n\r\nconst ToastItem: React.FC<ToastProps> = ({ toast, onClose }) => {\r\n  useEffect(() => {\r\n    const duration = toast.duration || 5000;\r\n    const timer = setTimeout(() => {\r\n      onClose(toast.id);\r\n    }, duration);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [toast.id, toast.duration, onClose]);\r\n\r\n  const getIcon = () => {\r\n    switch (toast.type) {\r\n      case 'success':\r\n        return <CheckCircle className=\"h-5 w-5 text-green-400\" />;\r\n      case 'error':\r\n        return <AlertCircle className=\"h-5 w-5 text-red-400\" />;\r\n      case 'warning':\r\n        return <AlertTriangle className=\"h-5 w-5 text-yellow-400\" />;\r\n      default:\r\n        return <Info className=\"h-5 w-5 text-blue-400\" />;\r\n    }\r\n  };\r\n\r\n  const getBorderColor = () => {\r\n    switch (toast.type) {\r\n      case 'success':\r\n        return 'border-l-green-500';\r\n      case 'error':\r\n        return 'border-l-red-500';\r\n      case 'warning':\r\n        return 'border-l-yellow-500';\r\n      default:\r\n        return 'border-l-blue-500';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 50, scale: 0.95 }}\r\n      animate={{ opacity: 1, y: 0, scale: 1 }}\r\n      exit={{ opacity: 0, y: -50, scale: 0.95 }}\r\n      transition={{ duration: 0.2 }}\r\n      className={`border border-slate-600/50 bg-slate-800/95 backdrop-blur-sm ${getBorderColor()} w-full max-w-sm rounded-lg border-l-4 p-4 shadow-xl`}\r\n    >\r\n      <div className=\"flex items-start space-x-3\">\r\n        <div className=\"flex-shrink-0\">{getIcon()}</div>\r\n\r\n        <div className=\"min-w-0 flex-1\">\r\n          <h4 className=\"text-sm font-medium text-white\">{toast.title}</h4>\r\n          {toast.message && (\r\n            <p className=\"mt-1 text-sm text-slate-300\">{toast.message}</p>\r\n          )}\r\n        </div>\r\n\r\n        <button\r\n          onClick={() => onClose(toast.id)}\r\n          className=\"flex-shrink-0 text-slate-400 transition-colors hover:text-white\"\r\n        >\r\n          <X className=\"h-4 w-4\" />\r\n        </button>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport const ToastContainer: React.FC<ToastContainerProps> = ({\r\n  toasts,\r\n  onClose,\r\n}) => {\r\n  return (\r\n    <div className=\"fixed right-4 top-4 z-[100] space-y-2\">\r\n      <AnimatePresence>\r\n        {toasts.map((toast) => (\r\n          <ToastItem key={toast.id} toast={toast} onClose={onClose} />\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Hook для управления toast'ами\r\nexport const useToast = () => {\r\n  const [toasts, setToasts] = useState<Toast[]>([]);\r\n\r\n  const addToast = (toast: Omit<Toast, 'id'>) => {\r\n    const id = Date.now().toString();\r\n    setToasts((prev) => [...prev, { ...toast, id }]);\r\n  };\r\n\r\n  const removeToast = (id: string) => {\r\n    setToasts((prev) => prev.filter((toast) => toast.id !== id));\r\n  };\r\n\r\n  const success = (title: string, message?: string, duration?: number) => {\r\n    addToast({ type: 'success', title, message, duration });\r\n  };\r\n\r\n  const error = (title: string, message?: string, duration?: number) => {\r\n    addToast({ type: 'error', title, message, duration });\r\n  };\r\n\r\n  const warning = (title: string, message?: string, duration?: number) => {\r\n    addToast({ type: 'warning', title, message, duration });\r\n  };\r\n\r\n  const info = (title: string, message?: string, duration?: number) => {\r\n    addToast({ type: 'info', title, message, duration });\r\n  };\r\n\r\n  return {\r\n    toasts,\r\n    addToast,\r\n    removeToast,\r\n    success,\r\n    error,\r\n    warning,\r\n    info,\r\n  };\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 257, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/src/components/ui/network-topology.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useEffect, useCallback } from 'react';\nimport { motion } from 'framer-motion';\nimport { useRouter } from 'next/navigation';\nimport {\n  Network,\n  Settings,\n  Maximize2,\n  RotateCcw,\n  Router,\n  Wifi,\n  Monitor,\n  Server,\n  Smartphone,\n  Printer,\n  Shield,\n} from 'lucide-react';\nimport { useNetworkStore } from '@/store/network-store';\nimport { NetworkDevice } from '@/types/network';\nimport { DeviceContextMenu } from './context-menu';\nimport { ToastContainer, useToast } from './toast';\n\n// Device type configuration\nconst deviceIcons = {\n  router: Router,\n  switch: Network,\n  computer: Monitor,\n  server: Server,\n  mobile: Smartphone,\n  wifi: Wifi,\n  workstation: Monitor,\n  printer: Printer,\n  firewall: Shield,\n  access_point: Wifi,\n};\n\nconst deviceColors = {\n  router: '#3B82F6',\n  switch: '#10B981',\n  computer: '#8B5CF6',\n  server: '#F59E0B',\n  mobile: '#EF4444',\n  wifi: '#06B6D4',\n  workstation: '#6B7280',\n  printer: '#F97316',\n  firewall: '#DC2626',\n  access_point: '#10B981',\n};\n\ninterface Connection {\n  id: string;\n  sourceId: string;\n  targetId: string;\n}\n\ninterface DragState {\n  isDragging: boolean;\n  deviceId: string | null;\n  offset: { x: number; y: number };\n}\n\ninterface ConnectionState {\n  isConnecting: boolean;\n  sourceId: string | null;\n  tempLine: { x1: number; y1: number; x2: number; y2: number } | null;\n}\n\ninterface ContextMenuState {\n  isVisible: boolean;\n  device: any | null;\n  position: { x: number; y: number };\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\ninterface DeviceWithPosition extends NetworkDevice {\n  position?: Position;\n}\n\ninterface NetworkTopologyProps {\n  isFullscreen?: boolean;\n}\n\nexport function NetworkTopology({\n  isFullscreen = false,\n}: NetworkTopologyProps) {\n  const { devices, updateDevice, selectedFolderId } = useNetworkStore();\n  const { toasts, removeToast, success, error, warning, info } = useToast();\n  const router = useRouter();\n\n  const [isEditMode, setIsEditMode] = useState(false);\n\n  // Инициализируем соединения из localStorage сразу\n  const [connections, setConnections] = useState<Connection[]>(() => {\n    if (typeof window !== 'undefined') {\n      const savedConnections = localStorage.getItem('topology-connections');\n      if (savedConnections) {\n        try {\n          return JSON.parse(savedConnections);\n        } catch (e) {\n          console.error('Failed to load connections:', e);\n        }\n      }\n    }\n    return [];\n  });\n\n  const [dragState, setDragState] = useState<DragState>({\n    isDragging: false,\n    deviceId: null,\n    offset: { x: 0, y: 0 },\n  });\n  const [connectionState, setConnectionState] = useState<ConnectionState>({\n    isConnecting: false,\n    sourceId: null,\n    tempLine: null,\n  });\n  const [contextMenu, setContextMenu] = useState<ContextMenuState>({\n    isVisible: false,\n    device: null,\n    position: { x: 0, y: 0 },\n  });\n\n  // Инициализируем позиции устройств из localStorage сразу\n  const [devicePositions, setDevicePositions] = useState<\n    Record<string, Position>\n  >(() => {\n    if (typeof window !== 'undefined') {\n      const savedPositions = localStorage.getItem('topology-positions');\n      if (savedPositions) {\n        try {\n          return JSON.parse(savedPositions);\n        } catch (e) {\n          console.error('Failed to load positions:', e);\n        }\n      }\n    }\n    return {};\n  });\n\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  // Generate default positions for devices\n  const generateDefaultPositions = useCallback(\n    (devices: NetworkDevice[]): Record<string, Position> => {\n      const positions: Record<string, Position> = {};\n      const gridCols = 4;\n      const spacing = { x: 200, y: 150 };\n      const offset = { x: 100, y: 80 };\n\n      devices.forEach((device, index) => {\n        const col = index % gridCols;\n        const row = Math.floor(index / gridCols);\n        positions[device.id] = {\n          x: offset.x + col * spacing.x,\n          y: offset.y + row * spacing.y,\n        };\n      });\n\n      return positions;\n    },\n    []\n  );\n\n  // Генерируем позиции по умолчанию для новых устройств\n  useEffect(() => {\n    setDevicePositions((prev) => {\n      // Если позиции уже есть для всех устройств, не изменяем\n      const hasAllPositions = devices.every((device) => prev[device.id]);\n      if (hasAllPositions && Object.keys(prev).length > 0) {\n        return prev;\n      }\n\n      // Генерируем позиции только для новых устройств\n      const newPositions = { ...prev };\n      const defaultPositions = generateDefaultPositions(devices);\n\n      devices.forEach((device) => {\n        if (!newPositions[device.id]) {\n          newPositions[device.id] = defaultPositions[device.id];\n        }\n      });\n\n      return newPositions;\n    });\n  }, [devices, generateDefaultPositions]);\n\n  // Save positions when they change\n  useEffect(() => {\n    if (Object.keys(devicePositions).length > 0) {\n      localStorage.setItem(\n        'topology-positions',\n        JSON.stringify(devicePositions)\n      );\n    }\n  }, [devicePositions]);\n\n  // Save connections when they change\n  useEffect(() => {\n    localStorage.setItem('topology-connections', JSON.stringify(connections));\n  }, [connections]);\n\n  // Combine devices with positions\n  const devicesWithPositions: DeviceWithPosition[] = devices.map((device) => ({\n    ...device,\n    position: devicePositions[device.id] || { x: 100, y: 100 },\n  }));\n\n  // Reset layout function\n  const resetLayout = () => {\n    const defaultPositions = generateDefaultPositions(devices);\n    setDevicePositions(defaultPositions);\n    setConnections([]);\n    localStorage.removeItem('topology-positions');\n    localStorage.removeItem('topology-connections');\n    success(\n      'Макет сброшен',\n      'Расположение устройств и соединения сброшены к настройкам по умолчанию'\n    );\n  };\n\n  // Mouse handlers for dragging\n  const handleMouseDown = (e: React.MouseEvent, deviceId: string) => {\n    if (!isEditMode) return;\n\n    e.preventDefault();\n    const rect = svgRef.current?.getBoundingClientRect();\n    if (!rect) return;\n\n    const device = devicesWithPositions.find((d) => d.id === deviceId);\n    if (!device?.position) return;\n\n    setDragState({\n      isDragging: true,\n      deviceId,\n      offset: {\n        x: e.clientX - rect.left - device.position.x,\n        y: e.clientY - rect.top - device.position.y,\n      },\n    });\n  };\n\n  const handleMouseMove = (e: React.MouseEvent) => {\n    if (!isEditMode) return;\n\n    const rect = svgRef.current?.getBoundingClientRect();\n    if (!rect) return;\n\n    if (dragState.isDragging && dragState.deviceId) {\n      const newX = e.clientX - rect.left - dragState.offset.x;\n      const newY = e.clientY - rect.top - dragState.offset.y;\n\n      setDevicePositions((prev) => ({\n        ...prev,\n        [dragState.deviceId!]: { x: newX, y: newY },\n      }));\n    }\n\n    if (connectionState.isConnecting && connectionState.sourceId) {\n      setConnectionState((prev) => ({\n        ...prev,\n        tempLine: {\n          ...prev.tempLine!,\n          x2: e.clientX - rect.left,\n          y2: e.clientY - rect.top,\n        },\n      }));\n    }\n  };\n\n  const handleMouseUp = () => {\n    setDragState({\n      isDragging: false,\n      deviceId: null,\n      offset: { x: 0, y: 0 },\n    });\n  };\n\n  // Device click handler\n  const handleDeviceClick = (deviceId: string) => {\n    if (!isEditMode) return;\n\n    if (connectionState.isConnecting) {\n      if (connectionState.sourceId === deviceId) {\n        // Cancel connection\n        setConnectionState({\n          isConnecting: false,\n          sourceId: null,\n          tempLine: null,\n        });\n        info('Отменено', 'Создание соединения отменено');\n      } else {\n        // Create connection\n        const newConnection: Connection = {\n          id: `${connectionState.sourceId}-${deviceId}`,\n          sourceId: connectionState.sourceId!,\n          targetId: deviceId,\n        };\n\n        setConnections((prev) => [...prev, newConnection]);\n        setConnectionState({\n          isConnecting: false,\n          sourceId: null,\n          tempLine: null,\n        });\n        success('Соединение создано', 'Новое соединение успешно добавлено');\n      }\n    } else {\n      // Start connection\n      const device = devicesWithPositions.find((d) => d.id === deviceId);\n      if (device?.position) {\n        setConnectionState({\n          isConnecting: true,\n          sourceId: deviceId,\n          tempLine: {\n            x1: device.position.x,\n            y1: device.position.y,\n            x2: device.position.x,\n            y2: device.position.y,\n          },\n        });\n        info(\n          'Режим соединения',\n          'Кликните на другое устройство для создания соединения'\n        );\n      }\n    }\n  };\n\n  // Connection deletion\n  const handleDeleteConnection = (connectionId: string) => {\n    setConnections((prev) => prev.filter((c) => c.id !== connectionId));\n    warning('Соединение удалено', 'Соединение между устройствами удалено');\n  };\n\n  // Context menu handlers\n  const handleContextMenu = (e: React.MouseEvent, device: NetworkDevice) => {\n    e.preventDefault();\n    setContextMenu({\n      isVisible: true,\n      device,\n      position: { x: e.clientX, y: e.clientY },\n    });\n  };\n\n  const handleCloseContextMenu = () => {\n    setContextMenu({\n      isVisible: false,\n      device: null,\n      position: { x: 0, y: 0 },\n    });\n  };\n\n  const handleContextAction = (action: string, device: NetworkDevice) => {\n    handleCloseContextMenu();\n\n    switch (action) {\n      case 'ping':\n        if (device.status === 'online') {\n          success('Ping успешен', `Устройство ${device.name} отвечает`);\n        } else {\n          error('Ping неудачен', `Устройство ${device.name} не отвечает`);\n        }\n        break;\n      case 'ssh':\n        if (device.status === 'online') {\n          info('SSH соединение', `Подключение к ${device.name} через SSH...`);\n        } else {\n          error('SSH недоступен', `Устройство ${device.name} офлайн`);\n        }\n        break;\n      case 'web':\n        if (device.status === 'online') {\n          info('Веб-интерфейс', `Открытие веб-интерфейса ${device.name}...`);\n        } else {\n          error('Веб-интерфейс недоступен', `Устройство ${device.name} офлайн`);\n        }\n        break;\n      case 'edit':\n        info('Редактирование', `Редактирование настроек ${device.name}...`);\n        break;\n      case 'delete':\n        warning(\n          'Удаление устройства',\n          `Устройство ${device.name} помечено для удаления`\n        );\n        break;\n      default:\n        info(action, `Действие \"${action}\" для устройства ${device.name}`);\n    }\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n      className=\"rounded-xl border border-slate-700/50 bg-slate-800/50 p-6 backdrop-blur-sm\"\n    >\n      {/* Header */}\n      {!isFullscreen && (\n        <div className=\"mb-6 flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"rounded-lg bg-slate-700/50 p-2\">\n              <Network className=\"h-5 w-5 text-blue-400\" />\n            </div>\n            <div>\n              <h3 className=\"text-lg font-semibold text-white\">\n                Сетевая топология\n              </h3>\n              <p className=\"text-sm text-slate-400\">Интерактивная карта сети</p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={() => setIsEditMode(!isEditMode)}\n              className={`rounded-lg px-4 py-2 transition-colors ${\n                isEditMode\n                  ? 'border border-green-500/30 bg-green-500/20 text-green-400'\n                  : 'bg-slate-700/50 text-slate-400 hover:bg-slate-700 hover:text-white'\n              }`}\n            >\n              {isEditMode ? 'Выйти из редактора' : 'Режим редактирования'}\n            </button>\n            {isEditMode && (\n              <>\n                <button\n                  onClick={resetLayout}\n                  className=\"rounded-lg p-2 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-white\"\n                  title=\"Сбросить расположение\"\n                >\n                  <RotateCcw className=\"h-4 w-4\" />\n                </button>\n                <button\n                  onClick={() => {\n                    const positions =\n                      localStorage.getItem('topology-positions');\n                    const savedConnections = localStorage.getItem(\n                      'topology-connections'\n                    );\n                    // Debug info только для разработки\n                    if (process.env.NODE_ENV === 'development') {\n                      console.log('=== DEBUG localStorage ===');\n                      console.log(\n                        'Positions:',\n                        positions ? JSON.parse(positions) : 'Not found'\n                      );\n                      console.log(\n                        'Saved Connections:',\n                        savedConnections\n                          ? JSON.parse(savedConnections)\n                          : 'Not found'\n                      );\n                      console.log('Current devices:', devices.length);\n                      console.log(\n                        'Current connections count:',\n                        connections.length\n                      );\n                      info('Debug info', 'Проверьте консоль браузера (F12)');\n                    }\n                  }}\n                  className=\"rounded-lg p-2 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-white\"\n                  title=\"Отладка localStorage\"\n                >\n                  🐛\n                </button>\n              </>\n            )}\n            <button className=\"rounded-lg p-2 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-white\">\n              <Settings className=\"h-4 w-4\" />\n            </button>\n            <button\n              onClick={() => router.push('/topology-fullscreen')}\n              className=\"flex items-center space-x-2 rounded-lg border border-blue-500/30 bg-blue-500/20 px-4 py-2 text-blue-400 transition-colors hover:bg-blue-500/30\"\n              title=\"Открыть в полноэкранном режиме\"\n            >\n              <Maximize2 className=\"h-4 w-4\" />\n              <span>Полный экран</span>\n            </button>\n          </div>\n        </div>\n      )}\n\n      {isEditMode && (\n        <div className=\"mb-4 rounded-lg border border-blue-500/20 bg-blue-500/10 p-3\">\n          <p className=\"text-sm text-blue-400\">\n            <strong>Режим редактирования:</strong> Перетаскивайте устройства для\n            их перемещения. Кликайте по устройствам для создания соединений.\n            {connectionState.isConnecting && (\n              <span className=\"ml-2 text-yellow-400\">\n                Кликните на другое устройство для подключения, или на то же для\n                отмены.\n              </span>\n            )}\n          </p>\n        </div>\n      )}\n\n      {/* Topology Area */}\n      <div\n        className=\"relative w-full rounded-lg border border-slate-700/30 bg-slate-900/50\"\n        style={{ height: isFullscreen ? 'calc(100vh - 120px)' : '700px' }}\n      >\n        <svg\n          ref={svgRef}\n          width=\"100%\"\n          height=\"100%\"\n          className=\"overflow-visible\"\n          onMouseMove={handleMouseMove}\n          onMouseUp={handleMouseUp}\n          onMouseLeave={handleMouseUp}\n        >\n          {/* Background grid */}\n          <defs>\n            <pattern\n              id=\"topology-grid\"\n              width=\"20\"\n              height=\"20\"\n              patternUnits=\"userSpaceOnUse\"\n            >\n              <path\n                d=\"M 20 0 L 0 0 0 20\"\n                fill=\"none\"\n                stroke=\"#475569\"\n                strokeWidth=\"0.5\"\n                opacity=\"0.3\"\n              />\n            </pattern>\n          </defs>\n          <rect width=\"100%\" height=\"100%\" fill=\"url(#topology-grid)\" />\n\n          {/* Connections */}\n          {connections.map((connection) => {\n            const sourceDevice = devicesWithPositions.find(\n              (d) => d.id === connection.sourceId\n            );\n            const targetDevice = devicesWithPositions.find(\n              (d) => d.id === connection.targetId\n            );\n\n            if (!sourceDevice || !targetDevice) return null;\n\n            return (\n              <g key={connection.id}>\n                <line\n                  x1={sourceDevice.position!.x}\n                  y1={sourceDevice.position!.y}\n                  x2={targetDevice.position!.x}\n                  y2={targetDevice.position!.y}\n                  stroke=\"#6B7280\"\n                  strokeWidth=\"2\"\n                  strokeDasharray=\"5,5\"\n                />\n                {isEditMode && (\n                  <circle\n                    cx={\n                      (sourceDevice.position!.x + targetDevice.position!.x) / 2\n                    }\n                    cy={\n                      (sourceDevice.position!.y + targetDevice.position!.y) / 2\n                    }\n                    r=\"8\"\n                    fill=\"#EF4444\"\n                    className=\"cursor-pointer hover:fill-red-600\"\n                    onClick={() => handleDeleteConnection(connection.id)}\n                  >\n                    <title>Кликните для удаления соединения</title>\n                  </circle>\n                )}\n              </g>\n            );\n          })}\n\n          {/* Temporary connection line */}\n          {connectionState.tempLine && (\n            <line\n              x1={connectionState.tempLine.x1}\n              y1={connectionState.tempLine.y1}\n              x2={connectionState.tempLine.x2}\n              y2={connectionState.tempLine.y2}\n              stroke=\"#3B82F6\"\n              strokeWidth=\"2\"\n              strokeDasharray=\"3,3\"\n              opacity=\"0.7\"\n            />\n          )}\n\n          {/* Devices */}\n          {devicesWithPositions.map((device) => {\n            const Icon =\n              deviceIcons[device.type as keyof typeof deviceIcons] || Monitor; // Fallback to Monitor icon\n            const color =\n              deviceColors[device.type as keyof typeof deviceColors] ||\n              '#6B7280'; // Fallback to gray\n            const isConnecting = connectionState.sourceId === device.id;\n\n            // Определяем, выделено ли устройство (принадлежит выбранной папке)\n            const isHighlighted =\n              !selectedFolderId ||\n              selectedFolderId === 'root' ||\n              device.folderId === selectedFolderId;\n            const opacity = isHighlighted ? 1 : 0.3;\n\n            return (\n              <g\n                key={device.id}\n                transform={`translate(${device.position!.x}, ${device.position!.y})`}\n                className=\"cursor-pointer\"\n                style={{ opacity }}\n                onMouseDown={(e) => handleMouseDown(e, device.id)}\n                onClick={() => handleDeviceClick(device.id)}\n                onContextMenu={(e) => handleContextMenu(e, device)}\n              >\n                {/* Device background */}\n                <circle\n                  r={isConnecting ? '28' : '25'}\n                  fill={device.status === 'online' ? color : '#6B7280'}\n                  opacity=\"0.2\"\n                  stroke={isConnecting ? '#3B82F6' : 'transparent'}\n                  strokeWidth=\"2\"\n                />\n                <circle\n                  r=\"20\"\n                  fill={device.status === 'online' ? color : '#6B7280'}\n                  opacity=\"0.3\"\n                />\n\n                {/* Device icon */}\n                <foreignObject x=\"-12\" y=\"-12\" width=\"24\" height=\"24\">\n                  <Icon className=\"h-6 w-6 text-white\" />\n                </foreignObject>\n\n                {/* Device name */}\n                <text\n                  x=\"0\"\n                  y=\"40\"\n                  textAnchor=\"middle\"\n                  className=\"fill-white text-xs font-medium\"\n                >\n                  {device.name}\n                </text>\n\n                {/* Status indicator */}\n                <circle\n                  cx=\"15\"\n                  cy=\"-15\"\n                  r=\"4\"\n                  fill={\n                    device.status === 'online'\n                      ? '#10B981'\n                      : device.status === 'warning'\n                        ? '#F59E0B'\n                        : '#EF4444'\n                  }\n                />\n\n                {/* Edit mode overlay */}\n                {isEditMode && (\n                  <circle\n                    r=\"25\"\n                    fill=\"transparent\"\n                    stroke=\"#3B82F6\"\n                    strokeWidth=\"1\"\n                    strokeDasharray=\"2,2\"\n                    opacity=\"0.5\"\n                  />\n                )}\n              </g>\n            );\n          })}\n        </svg>\n      </div>\n\n      {/* Controls */}\n      <div className=\"mt-4 flex items-center justify-between\">\n        <div className=\"flex items-center space-x-6\">\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"h-3 w-3 rounded-full bg-green-500 opacity-60\"></div>\n            <span className=\"text-slate-400\">Онлайн</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"h-3 w-3 rounded-full bg-yellow-500 opacity-60\"></div>\n            <span className=\"text-slate-400\">Предупреждение</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"h-3 w-3 rounded-full bg-red-500 opacity-60\"></div>\n            <span className=\"text-slate-400\">Офлайн</span>\n          </div>\n        </div>\n\n        <div className=\"text-sm text-slate-500\">\n          {devicesWithPositions.length} устройств • {connections.length}{' '}\n          соединений\n        </div>\n      </div>\n\n      {/* Context Menu */}\n      {contextMenu.isVisible && contextMenu.device && (\n        <div\n          className=\"fixed z-50 min-w-[200px] rounded-lg border border-slate-600 bg-slate-800 p-2 shadow-xl\"\n          style={{\n            left: contextMenu.position.x,\n            top: contextMenu.position.y,\n          }}\n        >\n          <div className=\"mb-2 border-b border-slate-600 pb-2\">\n            <p className=\"font-semibold text-white\">\n              {contextMenu.device.name}\n            </p>\n            <p className=\"text-sm text-slate-400\">{contextMenu.device.ip}</p>\n          </div>\n\n          <button\n            onClick={async () => {\n              const { pingDevice } = useNetworkStore.getState();\n              try {\n                success(\n                  'Ping запущен',\n                  `Выполняется ping устройства ${contextMenu.device?.name}`\n                );\n                await pingDevice(contextMenu.device!.id);\n                success(\n                  'Ping выполнен',\n                  `Устройство ${contextMenu.device?.name} успешно пропинговано`\n                );\n              } catch (err) {\n                error(\n                  'Ошибка ping',\n                  `Не удалось выполнить ping устройства ${contextMenu.device?.name}`\n                );\n              }\n              setContextMenu({\n                isVisible: false,\n                device: null,\n                position: { x: 0, y: 0 },\n              });\n            }}\n            className=\"flex w-full items-center space-x-2 rounded px-3 py-2 text-left text-sm text-slate-300 hover:bg-slate-700\"\n          >\n            <div className=\"h-2 w-2 rounded-full bg-green-500\"></div>\n            <span>🏓 Ping устройство</span>\n          </button>\n\n          <button\n            onClick={() => {\n              info(\n                'Информация об устройстве',\n                `${contextMenu.device?.name}\\nIP: ${contextMenu.device?.ip}\\nСтатус: ${contextMenu.device?.status}\\nПоследний ответ: ${contextMenu.device?.responseTime}ms`\n              );\n              setContextMenu({\n                isVisible: false,\n                device: null,\n                position: { x: 0, y: 0 },\n              });\n            }}\n            className=\"flex w-full items-center space-x-2 rounded px-3 py-2 text-left text-sm text-slate-300 hover:bg-slate-700\"\n          >\n            <div className=\"h-2 w-2 rounded-full bg-blue-500\"></div>\n            <span>ℹ️ Информация</span>\n          </button>\n\n          <button\n            onClick={() => {\n              warning(\n                'Редактирование устройства',\n                'Функция будет реализована в следующей версии'\n              );\n              setContextMenu({\n                isVisible: false,\n                device: null,\n                position: { x: 0, y: 0 },\n              });\n            }}\n            className=\"flex w-full items-center space-x-2 rounded px-3 py-2 text-left text-sm text-slate-300 hover:bg-slate-700\"\n          >\n            <div className=\"h-2 w-2 rounded-full bg-yellow-500\"></div>\n            <span>✏️ Редактировать</span>\n          </button>\n        </div>\n      )}\n\n      {/* Toast Notifications */}\n      <ToastContainer toasts={toasts} onClose={removeToast} />\n    </motion.div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;AAuBA,4BAA4B;AAC5B,MAAM,cAAc;IAClB,QAAQ,6RAAA,CAAA,SAAM;IACd,QAAQ,+RAAA,CAAA,UAAO;IACf,UAAU,+RAAA,CAAA,UAAO;IACjB,QAAQ,6RAAA,CAAA,SAAM;IACd,QAAQ,qSAAA,CAAA,aAAU;IAClB,MAAM,yRAAA,CAAA,OAAI;IACV,aAAa,+RAAA,CAAA,UAAO;IACpB,SAAS,+RAAA,CAAA,UAAO;IAChB,UAAU,6RAAA,CAAA,SAAM;IAChB,cAAc,yRAAA,CAAA,OAAI;AACpB;AAEA,MAAM,eAAe;IACnB,QAAQ;IACR,QAAQ;IACR,UAAU;IACV,QAAQ;IACR,QAAQ;IACR,MAAM;IACN,aAAa;IACb,SAAS;IACT,UAAU;IACV,cAAc;AAChB;AAuCO,SAAS,gBAAgB,EAC9B,eAAe,KAAK,EACC;;IACrB,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,gBAAgB,EAAE,GAAG,CAAA,GAAA,2JAAA,CAAA,kBAAe,AAAD;IAClE,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,4JAAA,CAAA,WAAQ,AAAD;IACtE,MAAM,SAAS,CAAA,GAAA,qTAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6UAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,kDAAkD;IAClD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6UAAA,CAAA,WAAQ,AAAD,EAAgB;QAC3D,IAAI,OAAO,WAAW,aAAa;YACjC,MAAM,mBAAmB,aAAa,OAAO,CAAC;YAC9C,IAAI,kBAAkB;gBACpB,IAAI;oBACF,OAAO,KAAK,KAAK,CAAC;gBACpB,EAAE,OAAO,GAAG;oBACV,QAAQ,KAAK,CAAC,+BAA+B;gBAC/C;YACF;QACF;QACA,OAAO,EAAE;IACX;IAEA,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6UAAA,CAAA,WAAQ,AAAD,EAAa;QACpD,YAAY;QACZ,UAAU;QACV,QAAQ;YAAE,GAAG;YAAG,GAAG;QAAE;IACvB;IACA,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6UAAA,CAAA,WAAQ,AAAD,EAAmB;QACtE,cAAc;QACd,UAAU;QACV,UAAU;IACZ;IACA,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6UAAA,CAAA,WAAQ,AAAD,EAAoB;QAC/D,WAAW;QACX,QAAQ;QACR,UAAU;YAAE,GAAG;YAAG,GAAG;QAAE;IACzB;IAEA,yDAAyD;IACzD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6UAAA,CAAA,WAAQ,AAAD,EAEnD;QACA,IAAI,OAAO,WAAW,aAAa;YACjC,MAAM,iBAAiB,aAAa,OAAO,CAAC;YAC5C,IAAI,gBAAgB;gBAClB,IAAI;oBACF,OAAO,KAAK,KAAK,CAAC;gBACpB,EAAE,OAAO,GAAG;oBACV,QAAQ,KAAK,CAAC,6BAA6B;gBAC7C;YACF;QACF;QACA,OAAO,CAAC;IACV;IAEA,MAAM,SAAS,CAAA,GAAA,6UAAA,CAAA,SAAM,AAAD,EAAiB;IAErC,yCAAyC;IACzC,MAAM,2BAA2B,CAAA,GAAA,6UAAA,CAAA,cAAW,AAAD,EACzC,CAAC;QACC,MAAM,YAAsC,CAAC;QAC7C,MAAM,WAAW;QACjB,MAAM,UAAU;YAAE,GAAG;YAAK,GAAG;QAAI;QACjC,MAAM,SAAS;YAAE,GAAG;YAAK,GAAG;QAAG;QAE/B,QAAQ,OAAO,CAAC,CAAC,QAAQ;YACvB,MAAM,MAAM,QAAQ;YACpB,MAAM,MAAM,KAAK,KAAK,CAAC,QAAQ;YAC/B,SAAS,CAAC,OAAO,EAAE,CAAC,GAAG;gBACrB,GAAG,OAAO,CAAC,GAAG,MAAM,QAAQ,CAAC;gBAC7B,GAAG,OAAO,CAAC,GAAG,MAAM,QAAQ,CAAC;YAC/B;QACF;QAEA,OAAO;IACT,GACA,EAAE;IAGJ,sDAAsD;IACtD,CAAA,GAAA,6UAAA,CAAA,YAAS,AAAD,EAAE;QACR,mBAAmB,CAAC;YAClB,wDAAwD;YACxD,MAAM,kBAAkB,QAAQ,KAAK,CAAC,CAAC,SAAW,IAAI,CAAC,OAAO,EAAE,CAAC;YACjE,IAAI,mBAAmB,OAAO,IAAI,CAAC,MAAM,MAAM,GAAG,GAAG;gBACnD,OAAO;YACT;YAEA,gDAAgD;YAChD,MAAM,eAAe;gBAAE,GAAG,IAAI;YAAC;YAC/B,MAAM,mBAAmB,yBAAyB;YAElD,QAAQ,OAAO,CAAC,CAAC;gBACf,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,EAAE;oBAC5B,YAAY,CAAC,OAAO,EAAE,CAAC,GAAG,gBAAgB,CAAC,OAAO,EAAE,CAAC;gBACvD;YACF;YAEA,OAAO;QACT;IACF,GAAG;QAAC;QAAS;KAAyB;IAEtC,kCAAkC;IAClC,CAAA,GAAA,6UAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,OAAO,IAAI,CAAC,iBAAiB,MAAM,GAAG,GAAG;YAC3C,aAAa,OAAO,CAClB,sBACA,KAAK,SAAS,CAAC;QAEnB;IACF,GAAG;QAAC;KAAgB;IAEpB,oCAAoC;IACpC,CAAA,GAAA,6UAAA,CAAA,YAAS,AAAD,EAAE;QACR,aAAa,OAAO,CAAC,wBAAwB,KAAK,SAAS,CAAC;IAC9D,GAAG;QAAC;KAAY;IAEhB,iCAAiC;IACjC,MAAM,uBAA6C,QAAQ,GAAG,CAAC,CAAC,SAAW,CAAC;YAC1E,GAAG,MAAM;YACT,UAAU,eAAe,CAAC,OAAO,EAAE,CAAC,IAAI;gBAAE,GAAG;gBAAK,GAAG;YAAI;QAC3D,CAAC;IAED,wBAAwB;IACxB,MAAM,cAAc;QAClB,MAAM,mBAAmB,yBAAyB;QAClD,mBAAmB;QACnB,eAAe,EAAE;QACjB,aAAa,UAAU,CAAC;QACxB,aAAa,UAAU,CAAC;QACxB,QACE,iBACA;IAEJ;IAEA,8BAA8B;IAC9B,MAAM,kBAAkB,CAAC,GAAqB;QAC5C,IAAI,CAAC,YAAY;QAEjB,EAAE,cAAc;QAChB,MAAM,OAAO,OAAO,OAAO,EAAE;QAC7B,IAAI,CAAC,MAAM;QAEX,MAAM,SAAS,qBAAqB,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;QACzD,IAAI,CAAC,QAAQ,UAAU;QAEvB,aAAa;YACX,YAAY;YACZ;YACA,QAAQ;gBACN,GAAG,EAAE,OAAO,GAAG,KAAK,IAAI,GAAG,OAAO,QAAQ,CAAC,CAAC;gBAC5C,GAAG,EAAE,OAAO,GAAG,KAAK,GAAG,GAAG,OAAO,QAAQ,CAAC,CAAC;YAC7C;QACF;IACF;IAEA,MAAM,kBAAkB,CAAC;QACvB,IAAI,CAAC,YAAY;QAEjB,MAAM,OAAO,OAAO,OAAO,EAAE;QAC7B,IAAI,CAAC,MAAM;QAEX,IAAI,UAAU,UAAU,IAAI,UAAU,QAAQ,EAAE;YAC9C,MAAM,OAAO,EAAE,OAAO,GAAG,KAAK,IAAI,GAAG,UAAU,MAAM,CAAC,CAAC;YACvD,MAAM,OAAO,EAAE,OAAO,GAAG,KAAK,GAAG,GAAG,UAAU,MAAM,CAAC,CAAC;YAEtD,mBAAmB,CAAC,OAAS,CAAC;oBAC5B,GAAG,IAAI;oBACP,CAAC,UAAU,QAAQ,CAAE,EAAE;wBAAE,GAAG;wBAAM,GAAG;oBAAK;gBAC5C,CAAC;QACH;QAEA,IAAI,gBAAgB,YAAY,IAAI,gBAAgB,QAAQ,EAAE;YAC5D,mBAAmB,CAAC,OAAS,CAAC;oBAC5B,GAAG,IAAI;oBACP,UAAU;wBACR,GAAG,KAAK,QAAQ;wBAChB,IAAI,EAAE,OAAO,GAAG,KAAK,IAAI;wBACzB,IAAI,EAAE,OAAO,GAAG,KAAK,GAAG;oBAC1B;gBACF,CAAC;QACH;IACF;IAEA,MAAM,gBAAgB;QACpB,aAAa;YACX,YAAY;YACZ,UAAU;YACV,QAAQ;gBAAE,GAAG;gBAAG,GAAG;YAAE;QACvB;IACF;IAEA,uBAAuB;IACvB,MAAM,oBAAoB,CAAC;QACzB,IAAI,CAAC,YAAY;QAEjB,IAAI,gBAAgB,YAAY,EAAE;YAChC,IAAI,gBAAgB,QAAQ,KAAK,UAAU;gBACzC,oBAAoB;gBACpB,mBAAmB;oBACjB,cAAc;oBACd,UAAU;oBACV,UAAU;gBACZ;gBACA,KAAK,YAAY;YACnB,OAAO;gBACL,oBAAoB;gBACpB,MAAM,gBAA4B;oBAChC,IAAI,CAAC,EAAE,gBAAgB,QAAQ,CAAC,CAAC,EAAE,SAAS,CAAC;oBAC7C,UAAU,gBAAgB,QAAQ;oBAClC,UAAU;gBACZ;gBAEA,eAAe,CAAC,OAAS;2BAAI;wBAAM;qBAAc;gBACjD,mBAAmB;oBACjB,cAAc;oBACd,UAAU;oBACV,UAAU;gBACZ;gBACA,QAAQ,sBAAsB;YAChC;QACF,OAAO;YACL,mBAAmB;YACnB,MAAM,SAAS,qBAAqB,IAAI,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;YACzD,IAAI,QAAQ,UAAU;gBACpB,mBAAmB;oBACjB,cAAc;oBACd,UAAU;oBACV,UAAU;wBACR,IAAI,OAAO,QAAQ,CAAC,CAAC;wBACrB,IAAI,OAAO,QAAQ,CAAC,CAAC;wBACrB,IAAI,OAAO,QAAQ,CAAC,CAAC;wBACrB,IAAI,OAAO,QAAQ,CAAC,CAAC;oBACvB;gBACF;gBACA,KACE,oBACA;YAEJ;QACF;IACF;IAEA,sBAAsB;IACtB,MAAM,yBAAyB,CAAC;QAC9B,eAAe,CAAC,OAAS,KAAK,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK;QACrD,QAAQ,sBAAsB;IAChC;IAEA,wBAAwB;IACxB,MAAM,oBAAoB,CAAC,GAAqB;QAC9C,EAAE,cAAc;QAChB,eAAe;YACb,WAAW;YACX;YACA,UAAU;gBAAE,GAAG,EAAE,OAAO;gBAAE,GAAG,EAAE,OAAO;YAAC;QACzC;IACF;IAEA,MAAM,yBAAyB;QAC7B,eAAe;YACb,WAAW;YACX,QAAQ;YACR,UAAU;gBAAE,GAAG;gBAAG,GAAG;YAAE;QACzB;IACF;IAEA,MAAM,sBAAsB,CAAC,QAAgB;QAC3C;QAEA,OAAQ;YACN,KAAK;gBACH,IAAI,OAAO,MAAM,KAAK,UAAU;oBAC9B,QAAQ,gBAAgB,CAAC,WAAW,EAAE,OAAO,IAAI,CAAC,SAAS,CAAC;gBAC9D,OAAO;oBACL,MAAM,iBAAiB,CAAC,WAAW,EAAE,OAAO,IAAI,CAAC,YAAY,CAAC;gBAChE;gBACA;YACF,KAAK;gBACH,IAAI,OAAO,MAAM,KAAK,UAAU;oBAC9B,KAAK,kBAAkB,CAAC,cAAc,EAAE,OAAO,IAAI,CAAC,aAAa,CAAC;gBACpE,OAAO;oBACL,MAAM,kBAAkB,CAAC,WAAW,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC;gBAC5D;gBACA;YACF,KAAK;gBACH,IAAI,OAAO,MAAM,KAAK,UAAU;oBAC9B,KAAK,iBAAiB,CAAC,wBAAwB,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC;gBACnE,OAAO;oBACL,MAAM,4BAA4B,CAAC,WAAW,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC;gBACtE;gBACA;YACF,KAAK;gBACH,KAAK,kBAAkB,CAAC,wBAAwB,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC;gBAClE;YACF,KAAK;gBACH,QACE,uBACA,CAAC,WAAW,EAAE,OAAO,IAAI,CAAC,sBAAsB,CAAC;gBAEnD;YACF;gBACE,KAAK,QAAQ,CAAC,UAAU,EAAE,OAAO,iBAAiB,EAAE,OAAO,IAAI,CAAC,CAAC;QACrE;IACF;IAEA,qBACE,6WAAC,+RAAA,CAAA,SAAM,CAAC,GAAG;QACT,SAAS;YAAE,SAAS;YAAG,GAAG;QAAG;QAC7B,SAAS;YAAE,SAAS;YAAG,GAAG;QAAE;QAC5B,YAAY;YAAE,UAAU;QAAI;QAC5B,WAAU;;YAGT,CAAC,8BACA,6WAAC;gBAAI,WAAU;;kCACb,6WAAC;wBAAI,WAAU;;0CACb,6WAAC;gCAAI,WAAU;0CACb,cAAA,6WAAC,+RAAA,CAAA,UAAO;oCAAC,WAAU;;;;;;;;;;;0CAErB,6WAAC;;kDACC,6WAAC;wCAAG,WAAU;kDAAmC;;;;;;kDAGjD,6WAAC;wCAAE,WAAU;kDAAyB;;;;;;;;;;;;;;;;;;kCAI1C,6WAAC;wBAAI,WAAU;;0CACb,6WAAC;gCACC,SAAS,IAAM,cAAc,CAAC;gCAC9B,WAAW,CAAC,uCAAuC,EACjD,aACI,8DACA,qEACL,CAAC;0CAED,aAAa,uBAAuB;;;;;;4BAEtC,4BACC;;kDACE,6WAAC;wCACC,SAAS;wCACT,WAAU;wCACV,OAAM;kDAEN,cAAA,6WAAC,uSAAA,CAAA,YAAS;4CAAC,WAAU;;;;;;;;;;;kDAEvB,6WAAC;wCACC,SAAS;4CACP,MAAM,YACJ,aAAa,OAAO,CAAC;4CACvB,MAAM,mBAAmB,aAAa,OAAO,CAC3C;4CAEF,mCAAmC;4CACnC,wCAA4C;gDAC1C,QAAQ,GAAG,CAAC;gDACZ,QAAQ,GAAG,CACT,cACA,YAAY,KAAK,KAAK,CAAC,aAAa;gDAEtC,QAAQ,GAAG,CACT,sBACA,mBACI,KAAK,KAAK,CAAC,oBACX;gDAEN,QAAQ,GAAG,CAAC,oBAAoB,QAAQ,MAAM;gDAC9C,QAAQ,GAAG,CACT,8BACA,YAAY,MAAM;gDAEpB,KAAK,cAAc;4CACrB;wCACF;wCACA,WAAU;wCACV,OAAM;kDACP;;;;;;;;0CAKL,6WAAC;gCAAO,WAAU;0CAChB,cAAA,6WAAC,iSAAA,CAAA,WAAQ;oCAAC,WAAU;;;;;;;;;;;0CAEtB,6WAAC;gCACC,SAAS,IAAM,OAAO,IAAI,CAAC;gCAC3B,WAAU;gCACV,OAAM;;kDAEN,6WAAC,uSAAA,CAAA,YAAS;wCAAC,WAAU;;;;;;kDACrB,6WAAC;kDAAK;;;;;;;;;;;;;;;;;;;;;;;;YAMb,4BACC,6WAAC;gBAAI,WAAU;0BACb,cAAA,6WAAC;oBAAE,WAAU;;sCACX,6WAAC;sCAAO;;;;;;wBAA8B;wBAErC,gBAAgB,YAAY,kBAC3B,6WAAC;4BAAK,WAAU;sCAAuB;;;;;;;;;;;;;;;;;0BAU/C,6WAAC;gBACC,WAAU;gBACV,OAAO;oBAAE,QAAQ,eAAe,wBAAwB;gBAAQ;0BAEhE,cAAA,6WAAC;oBACC,KAAK;oBACL,OAAM;oBACN,QAAO;oBACP,WAAU;oBACV,aAAa;oBACb,WAAW;oBACX,cAAc;;sCAGd,6WAAC;sCACC,cAAA,6WAAC;gCACC,IAAG;gCACH,OAAM;gCACN,QAAO;gCACP,cAAa;0CAEb,cAAA,6WAAC;oCACC,GAAE;oCACF,MAAK;oCACL,QAAO;oCACP,aAAY;oCACZ,SAAQ;;;;;;;;;;;;;;;;sCAId,6WAAC;4BAAK,OAAM;4BAAO,QAAO;4BAAO,MAAK;;;;;;wBAGrC,YAAY,GAAG,CAAC,CAAC;4BAChB,MAAM,eAAe,qBAAqB,IAAI,CAC5C,CAAC,IAAM,EAAE,EAAE,KAAK,WAAW,QAAQ;4BAErC,MAAM,eAAe,qBAAqB,IAAI,CAC5C,CAAC,IAAM,EAAE,EAAE,KAAK,WAAW,QAAQ;4BAGrC,IAAI,CAAC,gBAAgB,CAAC,cAAc,OAAO;4BAE3C,qBACE,6WAAC;;kDACC,6WAAC;wCACC,IAAI,aAAa,QAAQ,CAAE,CAAC;wCAC5B,IAAI,aAAa,QAAQ,CAAE,CAAC;wCAC5B,IAAI,aAAa,QAAQ,CAAE,CAAC;wCAC5B,IAAI,aAAa,QAAQ,CAAE,CAAC;wCAC5B,QAAO;wCACP,aAAY;wCACZ,iBAAgB;;;;;;oCAEjB,4BACC,6WAAC;wCACC,IACE,CAAC,aAAa,QAAQ,CAAE,CAAC,GAAG,aAAa,QAAQ,CAAE,CAAC,IAAI;wCAE1D,IACE,CAAC,aAAa,QAAQ,CAAE,CAAC,GAAG,aAAa,QAAQ,CAAE,CAAC,IAAI;wCAE1D,GAAE;wCACF,MAAK;wCACL,WAAU;wCACV,SAAS,IAAM,uBAAuB,WAAW,EAAE;kDAEnD,cAAA,6WAAC;sDAAM;;;;;;;;;;;;+BAvBL,WAAW,EAAE;;;;;wBA4BzB;wBAGC,gBAAgB,QAAQ,kBACvB,6WAAC;4BACC,IAAI,gBAAgB,QAAQ,CAAC,EAAE;4BAC/B,IAAI,gBAAgB,QAAQ,CAAC,EAAE;4BAC/B,IAAI,gBAAgB,QAAQ,CAAC,EAAE;4BAC/B,IAAI,gBAAgB,QAAQ,CAAC,EAAE;4BAC/B,QAAO;4BACP,aAAY;4BACZ,iBAAgB;4BAChB,SAAQ;;;;;;wBAKX,qBAAqB,GAAG,CAAC,CAAC;4BACzB,MAAM,OACJ,WAAW,CAAC,OAAO,IAAI,CAA6B,IAAI,+RAAA,CAAA,UAAO,EAAE,2BAA2B;4BAC9F,MAAM,QACJ,YAAY,CAAC,OAAO,IAAI,CAA8B,IACtD,WAAW,mBAAmB;4BAChC,MAAM,eAAe,gBAAgB,QAAQ,KAAK,OAAO,EAAE;4BAE3D,mEAAmE;4BACnE,MAAM,gBACJ,CAAC,oBACD,qBAAqB,UACrB,OAAO,QAAQ,KAAK;4BACtB,MAAM,UAAU,gBAAgB,IAAI;4BAEpC,qBACE,6WAAC;gCAEC,WAAW,CAAC,UAAU,EAAE,OAAO,QAAQ,CAAE,CAAC,CAAC,EAAE,EAAE,OAAO,QAAQ,CAAE,CAAC,CAAC,CAAC,CAAC;gCACpE,WAAU;gCACV,OAAO;oCAAE;gCAAQ;gCACjB,aAAa,CAAC,IAAM,gBAAgB,GAAG,OAAO,EAAE;gCAChD,SAAS,IAAM,kBAAkB,OAAO,EAAE;gCAC1C,eAAe,CAAC,IAAM,kBAAkB,GAAG;;kDAG3C,6WAAC;wCACC,GAAG,eAAe,OAAO;wCACzB,MAAM,OAAO,MAAM,KAAK,WAAW,QAAQ;wCAC3C,SAAQ;wCACR,QAAQ,eAAe,YAAY;wCACnC,aAAY;;;;;;kDAEd,6WAAC;wCACC,GAAE;wCACF,MAAM,OAAO,MAAM,KAAK,WAAW,QAAQ;wCAC3C,SAAQ;;;;;;kDAIV,6WAAC;wCAAc,GAAE;wCAAM,GAAE;wCAAM,OAAM;wCAAK,QAAO;kDAC/C,cAAA,6WAAC;4CAAK,WAAU;;;;;;;;;;;kDAIlB,6WAAC;wCACC,GAAE;wCACF,GAAE;wCACF,YAAW;wCACX,WAAU;kDAET,OAAO,IAAI;;;;;;kDAId,6WAAC;wCACC,IAAG;wCACH,IAAG;wCACH,GAAE;wCACF,MACE,OAAO,MAAM,KAAK,WACd,YACA,OAAO,MAAM,KAAK,YAChB,YACA;;;;;;oCAKT,4BACC,6WAAC;wCACC,GAAE;wCACF,MAAK;wCACL,QAAO;wCACP,aAAY;wCACZ,iBAAgB;wCAChB,SAAQ;;;;;;;+BA3DP,OAAO,EAAE;;;;;wBAgEpB;;;;;;;;;;;;0BAKJ,6WAAC;gBAAI,WAAU;;kCACb,6WAAC;wBAAI,WAAU;;0CACb,6WAAC;gCAAI,WAAU;;kDACb,6WAAC;wCAAI,WAAU;;;;;;kDACf,6WAAC;wCAAK,WAAU;kDAAiB;;;;;;;;;;;;0CAEnC,6WAAC;gCAAI,WAAU;;kDACb,6WAAC;wCAAI,WAAU;;;;;;kDACf,6WAAC;wCAAK,WAAU;kDAAiB;;;;;;;;;;;;0CAEnC,6WAAC;gCAAI,WAAU;;kDACb,6WAAC;wCAAI,WAAU;;;;;;kDACf,6WAAC;wCAAK,WAAU;kDAAiB;;;;;;;;;;;;;;;;;;kCAIrC,6WAAC;wBAAI,WAAU;;4BACZ,qBAAqB,MAAM;4BAAC;4BAAc,YAAY,MAAM;4BAAE;4BAAI;;;;;;;;;;;;;YAMtE,YAAY,SAAS,IAAI,YAAY,MAAM,kBAC1C,6WAAC;gBACC,WAAU;gBACV,OAAO;oBACL,MAAM,YAAY,QAAQ,CAAC,CAAC;oBAC5B,KAAK,YAAY,QAAQ,CAAC,CAAC;gBAC7B;;kCAEA,6WAAC;wBAAI,WAAU;;0CACb,6WAAC;gCAAE,WAAU;0CACV,YAAY,MAAM,CAAC,IAAI;;;;;;0CAE1B,6WAAC;gCAAE,WAAU;0CAA0B,YAAY,MAAM,CAAC,EAAE;;;;;;;;;;;;kCAG9D,6WAAC;wBACC,SAAS;4BACP,MAAM,EAAE,UAAU,EAAE,GAAG,2JAAA,CAAA,kBAAe,CAAC,QAAQ;4BAC/C,IAAI;gCACF,QACE,gBACA,CAAC,4BAA4B,EAAE,YAAY,MAAM,EAAE,KAAK,CAAC;gCAE3D,MAAM,WAAW,YAAY,MAAM,CAAE,EAAE;gCACvC,QACE,iBACA,CAAC,WAAW,EAAE,YAAY,MAAM,EAAE,KAAK,qBAAqB,CAAC;4BAEjE,EAAE,OAAO,KAAK;gCACZ,MACE,eACA,CAAC,qCAAqC,EAAE,YAAY,MAAM,EAAE,KAAK,CAAC;4BAEtE;4BACA,eAAe;gCACb,WAAW;gCACX,QAAQ;gCACR,UAAU;oCAAE,GAAG;oCAAG,GAAG;gCAAE;4BACzB;wBACF;wBACA,WAAU;;0CAEV,6WAAC;gCAAI,WAAU;;;;;;0CACf,6WAAC;0CAAK;;;;;;;;;;;;kCAGR,6WAAC;wBACC,SAAS;4BACP,KACE,4BACA,CAAC,EAAE,YAAY,MAAM,EAAE,KAAK,MAAM,EAAE,YAAY,MAAM,EAAE,GAAG,UAAU,EAAE,YAAY,MAAM,EAAE,OAAO,mBAAmB,EAAE,YAAY,MAAM,EAAE,aAAa,EAAE,CAAC;4BAE7J,eAAe;gCACb,WAAW;gCACX,QAAQ;gCACR,UAAU;oCAAE,GAAG;oCAAG,GAAG;gCAAE;4BACzB;wBACF;wBACA,WAAU;;0CAEV,6WAAC;gCAAI,WAAU;;;;;;0CACf,6WAAC;0CAAK;;;;;;;;;;;;kCAGR,6WAAC;wBACC,SAAS;4BACP,QACE,6BACA;4BAEF,eAAe;gCACb,WAAW;gCACX,QAAQ;gCACR,UAAU;oCAAE,GAAG;oCAAG,GAAG;gCAAE;4BACzB;wBACF;wBACA,WAAU;;0CAEV,6WAAC;gCAAI,WAAU;;;;;;0CACf,6WAAC;0CAAK;;;;;;;;;;;;;;;;;;0BAMZ,6WAAC,4JAAA,CAAA,iBAAc;gBAAC,QAAQ;gBAAQ,SAAS;;;;;;;;;;;;AAG/C;GA/rBgB;;QAGsC,2JAAA,CAAA,kBAAe;QACJ,4JAAA,CAAA,WAAQ;QACxD,qTAAA,CAAA,YAAS;;;KALV"}},
    {"offset": {"line": 1304, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1309, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/packages/frontend/app/topology-fullscreen/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { NetworkTopology } from '@/components/ui/network-topology';\r\nimport { ArrowLeft, X } from 'lucide-react';\r\nimport { useRouter } from 'next/navigation';\r\n\r\nexport default function TopologyFullscreenPage() {\r\n  const router = useRouter();\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900\">\r\n      {/* Header */}\r\n      <div className=\"fixed left-0 right-0 top-0 z-50 border-b border-slate-700/50 bg-slate-800/90 px-6 py-4 backdrop-blur-sm\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <button\r\n              onClick={() => router.back()}\r\n              className=\"rounded-lg p-2 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-white\"\r\n            >\r\n              <ArrowLeft className=\"h-5 w-5\" />\r\n            </button>\r\n            <h1 className=\"text-xl font-semibold text-white\">\r\n              Сетевая топология - Полный экран\r\n            </h1>\r\n          </div>\r\n\r\n          <button\r\n            onClick={() => window.close()}\r\n            className=\"rounded-lg p-2 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-white\"\r\n          >\r\n            <X className=\"h-5 w-5\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Fullscreen Topology */}\r\n      <div className=\"h-screen p-4 pt-20\">\r\n        <div className=\"h-full\">\r\n          <NetworkTopology isFullscreen={true} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;AAMe,SAAS;;IACtB,MAAM,SAAS,CAAA,GAAA,qTAAA,CAAA,YAAS,AAAD;IAEvB,qBACE,6WAAC;QAAI,WAAU;;0BAEb,6WAAC;gBAAI,WAAU;0BACb,cAAA,6WAAC;oBAAI,WAAU;;sCACb,6WAAC;4BAAI,WAAU;;8CACb,6WAAC;oCACC,SAAS,IAAM,OAAO,IAAI;oCAC1B,WAAU;8CAEV,cAAA,6WAAC,uSAAA,CAAA,YAAS;wCAAC,WAAU;;;;;;;;;;;8CAEvB,6WAAC;oCAAG,WAAU;8CAAmC;;;;;;;;;;;;sCAKnD,6WAAC;4BACC,SAAS,IAAM,OAAO,KAAK;4BAC3B,WAAU;sCAEV,cAAA,6WAAC,mRAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;0BAMnB,6WAAC;gBAAI,WAAU;0BACb,cAAA,6WAAC;oBAAI,WAAU;8BACb,cAAA,6WAAC,0KAAA,CAAA,kBAAe;wBAAC,cAAc;;;;;;;;;;;;;;;;;;;;;;AAKzC;GArCwB;;QACP,qTAAA,CAAA,YAAS;;;KADF"}},
    {"offset": {"line": 1429, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}