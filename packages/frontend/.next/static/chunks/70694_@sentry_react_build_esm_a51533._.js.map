{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@sentry+react@9.37.0_react@18.3.1/node_modules/@sentry/react/src/sdk.ts"],"sourcesContent":["import type { BrowserOptions } from '@sentry/browser';\nimport { init as browserInit, setContext } from '@sentry/browser';\nimport type { Client } from '@sentry/core';\nimport { applySdkMetadata } from '@sentry/core';\nimport { version } from 'react';\n\n/**\n * Inits the React SDK\n */\nexport function init(options: BrowserOptions): Client | undefined {\n  const opts = {\n    ...options,\n  };\n\n  applySdkMetadata(opts, 'react');\n  setContext('react', { version });\n  return browserInit(opts);\n}\n"],"names":["browserInit"],"mappings":";;;;;;;;;;;AAMA;;CAEA,GACO,SAAS,KAAK,OAAO;IAC1B,MAAM,OAAO;QACX,GAAG,OAAO;IACd;IAEE,CAAA,GAAA,yOAAA,CAAA,mBAAgB,AAAhB,EAAiB,MAAM;IACvB,CAAA,GAAA,4NAAA,CAAA,aAAU,AAAV,EAAW,SAAS;QAAE,SAAA,6UAAA,CAAA,UAAA;IAAA;IACtB,OAAOA,CAAAA,GAAAA,qOAAAA,CAAAA,OAAW,AAAXA,EAAY;AACrB"}},
    {"offset": {"line": 30, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@sentry+react@9.37.0_react@18.3.1/node_modules/@sentry/react/src/debug-build.ts"],"sourcesContent":["declare const __DEBUG_BUILD__: boolean;\n\n/**\n * This serves as a build time flag that will be true by default, but false in non-debug builds or if users replace `__SENTRY_DEBUG__` in their generated code.\n *\n * ATTENTION: This constant must never cross package boundaries (i.e. be exported) to guarantee that it can be used for tree shaking.\n */\nexport const DEBUG_BUILD = __DEBUG_BUILD__;\n"],"names":[],"mappings":"AAEA;;;;CAIA;;;AACO,MAAM,cAAc,OAAA,qBAAA,eAAA"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@sentry+react@9.37.0_react@18.3.1/node_modules/@sentry/react/src/error.ts"],"sourcesContent":["import { captureException, withScope } from '@sentry/browser';\nimport { isError } from '@sentry/core';\nimport type { ErrorInfo } from 'react';\nimport { version } from 'react';\n\n/**\n * See if React major version is 17+ by parsing version string.\n */\nexport function isAtLeastReact17(reactVersion: string): boolean {\n  const reactMajor = reactVersion.match(/^([^.]+)/);\n  return reactMajor !== null && parseInt(reactMajor[0]) >= 17;\n}\n\n/**\n * Recurse through `error.cause` chain to set cause on an error.\n */\nexport function setCause(error: Error & { cause?: Error }, cause: Error): void {\n  const seenErrors = new WeakSet();\n\n  function recurse(error: Error & { cause?: Error }, cause: Error): void {\n    // If we've already seen the error, there is a recursive loop somewhere in the error's\n    // cause chain. Let's just bail out then to prevent a stack overflow.\n    if (seenErrors.has(error)) {\n      return;\n    }\n    if (error.cause) {\n      seenErrors.add(error);\n      return recurse(error.cause, cause);\n    }\n    error.cause = cause;\n  }\n\n  recurse(error, cause);\n}\n\n/**\n * Captures an error that was thrown by a React ErrorBoundary or React root.\n *\n * @param error The error to capture.\n * @param errorInfo The errorInfo provided by React.\n * @param hint Optional additional data to attach to the Sentry event.\n * @returns the id of the captured Sentry event.\n */\nexport function captureReactException(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  error: any,\n  { componentStack }: ErrorInfo,\n  hint?: Parameters<typeof captureException>[1],\n): string {\n  // If on React version >= 17, create stack trace from componentStack param and links\n  // to to the original error using `error.cause` otherwise relies on error param for stacktrace.\n  // Linking errors requires the `LinkedErrors` integration be enabled.\n  // See: https://reactjs.org/blog/2020/08/10/react-v17-rc.html#native-component-stacks\n  //\n  // Although `componentDidCatch` is typed to accept an `Error` object, it can also be invoked\n  // with non-error objects. This is why we need to check if the error is an error-like object.\n  // See: https://github.com/getsentry/sentry-javascript/issues/6167\n  if (isAtLeastReact17(version) && isError(error) && componentStack) {\n    const errorBoundaryError = new Error(error.message);\n    errorBoundaryError.name = `React ErrorBoundary ${error.name}`;\n    errorBoundaryError.stack = componentStack;\n\n    // Using the `LinkedErrors` integration to link the errors together.\n    setCause(error, errorBoundaryError);\n  }\n\n  return withScope(scope => {\n    scope.setContext('react', { componentStack });\n    return captureException(error, hint);\n  });\n}\n\n/**\n * Creates an error handler that can be used with the `onCaughtError`, `onUncaughtError`,\n * and `onRecoverableError` options in `createRoot` and `hydrateRoot` React DOM methods.\n *\n * @param callback An optional callback that will be called after the error is captured.\n * Use this to add custom handling for errors.\n *\n * @example\n *\n * ```JavaScript\n * const root = createRoot(container, {\n *  onCaughtError: Sentry.reactErrorHandler(),\n *  onUncaughtError: Sentry.reactErrorHandler((error, errorInfo) => {\n *    console.warn('Caught error', error, errorInfo.componentStack);\n *  });\n * });\n * ```\n */\nexport function reactErrorHandler(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callback?: (error: any, errorInfo: ErrorInfo, eventId: string) => void,\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n): (error: any, errorInfo: ErrorInfo) => void {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (error: any, errorInfo: ErrorInfo) => {\n    const eventId = captureReactException(error, errorInfo);\n    if (callback) {\n      callback(error, errorInfo, eventId);\n    }\n  };\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAKA;;CAEA,GACO,SAAS,iBAAiB,YAAY;IAC3C,MAAM,aAAa,aAAa,KAAK,CAAC;IACtC,OAAO,eAAe,QAAQ,SAAS,UAAU,CAAC,EAAE,KAAK;AAC3D;AAEA;;CAEA,GACO,SAAS,SAAS,KAAK,EAA6B,KAAK;IAC9D,MAAM,aAAa,IAAI;IAEvB,SAAS,QAAQ,KAAK,EAA6B,KAAK;QAC1D,sFAAA;QACA,qEAAA;QACI,IAAI,WAAW,GAAG,CAAC,QAAQ;YACzB;QACN;QACI,IAAI,MAAM,KAAK,EAAE;YACf,WAAW,GAAG,CAAC;YACf,OAAO,QAAQ,MAAM,KAAK,EAAE;QAClC;QACI,MAAM,KAAA,GAAQ;IAClB;IAEE,QAAQ,OAAO;AACjB;AAEA;;;;;;;CAOA,GACO,SAAS,sBAChB,8DAAA;AACE,KAAK,EACL,EAAE,cAAA,EAAgB,EAClB,IAAI;IAEN,oFAAA;IACA,+FAAA;IACA,qEAAA;IACA,qFAAA;IACA,EAAA;IACA,4FAAA;IACA,6FAAA;IACA,kEAAA;IACE,IAAI,iBAAiB,6UAAA,CAAA,UAAO,KAAK,CAAA,GAAA,gOAAA,CAAA,UAAO,AAAP,EAAQ,UAAU,gBAAgB;QACjE,MAAM,qBAAqB,IAAI,MAAM,MAAM,OAAO;QAClD,mBAAmB,IAAA,GAAO,CAAC,oBAAoB,EAAE,MAAM,IAAI,CAAC,CAAA;QACA,mBAAA,KAAA,GAAA;QAEA,oEAAA;QACA,SAAA,OAAA;IACA;IAEA,OAAA,CAAA,GAAA,kOAAA,CAAA,YAAA,EAAA,CAAA;QACA,MAAA,UAAA,CAAA,SAAA;YAAA;QAAA;QACA,OAAA,CAAA,GAAA,4NAAA,CAAA,mBAAA,EAAA,OAAA;IACA;AACA;AAEA;;;;;;;;;;;;;;;;;CAiBA,GACA,SAAA,kBACA,8DAAA;AACA,QAAA;IAGA,8DAAA;IACA,OAAA,CAAA,OAAA;QACA,MAAA,UAAA,sBAAA,OAAA;QACA,IAAA,UAAA;YACA,SAAA,OAAA,WAAA;QACA;IACA;AACA"}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@sentry+react@9.37.0_react@18.3.1/node_modules/@sentry/react/src/hoist-non-react-statics.ts"],"sourcesContent":["import * as hoistNonReactStaticsImport from 'hoist-non-react-statics';\n\n// Ensure we use the default export from hoist-non-react-statics if available,\n// falling back to the module itself. This handles both ESM and CJS usage.\nexport const hoistNonReactStatics = hoistNonReactStaticsImport.default || hoistNonReactStaticsImport;\n"],"names":[],"mappings":";;;;;;AAEA,8EAAA;AACA,0EAAA;MACa,uBAAuB,oRAA2B,OAAA,IAAW"}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@sentry+react@9.37.0_react@18.3.1/node_modules/@sentry/react/src/errorboundary.tsx"],"sourcesContent":["import type { ReportDialogOptions } from '@sentry/browser';\nimport { getClient, showReportDialog, withScope } from '@sentry/browser';\nimport type { Scope } from '@sentry/core';\nimport { logger } from '@sentry/core';\nimport * as React from 'react';\nimport { DEBUG_BUILD } from './debug-build';\nimport { captureReactException } from './error';\nimport { hoistNonReactStatics } from './hoist-non-react-statics';\n\nexport const UNKNOWN_COMPONENT = 'unknown';\n\nexport type FallbackRender = (errorData: {\n  error: unknown;\n  componentStack: string;\n  eventId: string;\n  resetError(): void;\n}) => React.ReactElement;\n\ntype OnUnmountType = {\n  (error: null, componentStack: null, eventId: null): void;\n  (error: unknown, componentStack: string, eventId: string): void;\n};\n\nexport type ErrorBoundaryProps = {\n  children?: React.ReactNode | (() => React.ReactNode);\n  /** If a Sentry report dialog should be rendered on error */\n  showDialog?: boolean | undefined;\n  /**\n   * Options to be passed into the Sentry report dialog.\n   * No-op if {@link showDialog} is false.\n   */\n  dialogOptions?: ReportDialogOptions | undefined;\n  /**\n   * A fallback component that gets rendered when the error boundary encounters an error.\n   *\n   * Can either provide a React Component, or a function that returns React Component as\n   * a valid fallback prop. If a function is provided, the function will be called with\n   * the error, the component stack, and an function that resets the error boundary on error.\n   *\n   */\n  fallback?: React.ReactElement | FallbackRender | undefined;\n  /**\n   * If set to `true` or `false`, the error `handled` property will be set to the given value.\n   * If unset, the default behaviour is to rely on the presence of the `fallback` prop to determine\n   * if the error was handled or not.\n   */\n  handled?: boolean | undefined;\n  /** Called when the error boundary encounters an error */\n  onError?: ((error: unknown, componentStack: string, eventId: string) => void) | undefined;\n  /** Called on componentDidMount() */\n  onMount?: (() => void) | undefined;\n  /**\n   * Called when the error boundary resets due to a reset call from the\n   * fallback render props function.\n   */\n  onReset?: ((error: unknown, componentStack: string, eventId: string) => void) | undefined;\n  /**\n   * Called on componentWillUnmount() with the error, componentStack, and eventId.\n   *\n   * If the error boundary never encountered an error, the error\n   * componentStack, and eventId will be null.\n   */\n  onUnmount?: OnUnmountType | undefined;\n  /** Called before the error is captured by Sentry, allows for you to add tags or context using the scope */\n  beforeCapture?: ((scope: Scope, error: unknown, componentStack: string) => void) | undefined;\n};\n\ntype ErrorBoundaryState =\n  | {\n      componentStack: null;\n      error: null;\n      eventId: null;\n    }\n  | {\n      componentStack: React.ErrorInfo['componentStack'];\n      error: unknown;\n      eventId: string;\n    };\n\nconst INITIAL_STATE: ErrorBoundaryState = {\n  componentStack: null,\n  error: null,\n  eventId: null,\n};\n\n/**\n * A ErrorBoundary component that logs errors to Sentry.\n * NOTE: If you are a Sentry user, and you are seeing this stack frame, it means the\n * Sentry React SDK ErrorBoundary caught an error invoking your application code. This\n * is expected behavior and NOT indicative of a bug with the Sentry React SDK.\n */\nclass ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  public state: ErrorBoundaryState;\n\n  private readonly _openFallbackReportDialog: boolean;\n\n  private _lastEventId?: string;\n  private _cleanupHook?: () => void;\n\n  public constructor(props: ErrorBoundaryProps) {\n    super(props);\n\n    this.state = INITIAL_STATE;\n    this._openFallbackReportDialog = true;\n\n    const client = getClient();\n    if (client && props.showDialog) {\n      this._openFallbackReportDialog = false;\n      this._cleanupHook = client.on('afterSendEvent', event => {\n        if (!event.type && this._lastEventId && event.event_id === this._lastEventId) {\n          showReportDialog({ ...props.dialogOptions, eventId: this._lastEventId });\n        }\n      });\n    }\n  }\n\n  public componentDidCatch(error: unknown, errorInfo: React.ErrorInfo): void {\n    const { componentStack } = errorInfo;\n    const { beforeCapture, onError, showDialog, dialogOptions } = this.props;\n    withScope(scope => {\n      if (beforeCapture) {\n        beforeCapture(scope, error, componentStack);\n      }\n\n      const handled = this.props.handled != null ? this.props.handled : !!this.props.fallback;\n      const eventId = captureReactException(error, errorInfo, { mechanism: { handled } });\n\n      if (onError) {\n        onError(error, componentStack, eventId);\n      }\n      if (showDialog) {\n        this._lastEventId = eventId;\n        if (this._openFallbackReportDialog) {\n          showReportDialog({ ...dialogOptions, eventId });\n        }\n      }\n\n      // componentDidCatch is used over getDerivedStateFromError\n      // so that componentStack is accessible through state.\n      this.setState({ error, componentStack, eventId });\n    });\n  }\n\n  public componentDidMount(): void {\n    const { onMount } = this.props;\n    if (onMount) {\n      onMount();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    const { error, componentStack, eventId } = this.state;\n    const { onUnmount } = this.props;\n    if (onUnmount) {\n      if (this.state === INITIAL_STATE) {\n        // If the error boundary never encountered an error, call onUnmount with null values\n        onUnmount(null, null, null);\n      } else {\n        // `componentStack` and `eventId` are guaranteed to be non-null here because `onUnmount` is only called\n        // when the error boundary has already encountered an error.\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        onUnmount(error, componentStack!, eventId!);\n      }\n    }\n\n    if (this._cleanupHook) {\n      this._cleanupHook();\n      this._cleanupHook = undefined;\n    }\n  }\n\n  public resetErrorBoundary(): void {\n    const { onReset } = this.props;\n    const { error, componentStack, eventId } = this.state;\n    if (onReset) {\n      // `componentStack` and `eventId` are guaranteed to be non-null here because `onReset` is only called\n      // when the error boundary has already encountered an error.\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      onReset(error, componentStack!, eventId!);\n    }\n    this.setState(INITIAL_STATE);\n  }\n\n  public render(): React.ReactNode {\n    const { fallback, children } = this.props;\n    const state = this.state;\n\n    // `componentStack` is only null in the initial state, when no error has been captured.\n    // If an error has been captured, `componentStack` will be a string.\n    // We cannot check `state.error` because null can be thrown as an error.\n    if (state.componentStack === null) {\n      return typeof children === 'function' ? children() : children;\n    }\n\n    const element =\n      typeof fallback === 'function'\n        ? React.createElement(fallback, {\n            error: state.error,\n            componentStack: state.componentStack,\n            resetError: () => this.resetErrorBoundary(),\n            eventId: state.eventId,\n          })\n        : fallback;\n\n    if (React.isValidElement(element)) {\n      return element;\n    }\n\n    if (fallback) {\n      DEBUG_BUILD && logger.warn('fallback did not produce a valid ReactElement');\n    }\n\n    // Fail gracefully if no fallback provided or is not valid\n    return null;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withErrorBoundary<P extends Record<string, any>>(\n  WrappedComponent: React.ComponentType<P>,\n  errorBoundaryOptions: ErrorBoundaryProps,\n): React.FC<P> {\n  const componentDisplayName = WrappedComponent.displayName || WrappedComponent.name || UNKNOWN_COMPONENT;\n\n  const Wrapped: React.FC<P> = (props: P) => (\n    <ErrorBoundary {...errorBoundaryOptions}>\n      <WrappedComponent {...props} />\n    </ErrorBoundary>\n  );\n\n  Wrapped.displayName = `errorBoundary(${componentDisplayName})`;\n\n  // Copy over static methods from Wrapped component to Profiler HOC\n  // See: https://reactjs.org/docs/higher-order-components.html#static-methods-must-be-copied-over\n  hoistNonReactStatics(Wrapped, WrappedComponent);\n  return Wrapped;\n}\n\nexport { ErrorBoundary, withErrorBoundary };\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 354, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 359, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@sentry+react@9.37.0_react@18.3.1/node_modules/@sentry/react/src/constants.ts"],"sourcesContent":["export const REACT_RENDER_OP = 'ui.react.render';\n\nexport const REACT_UPDATE_OP = 'ui.react.update';\n\nexport const REACT_MOUNT_OP = 'ui.react.mount';\n"],"names":[],"mappings":";;;;;AAAO,MAAM,kBAAkB;AAExB,MAAM,kBAAkB;AAExB,MAAM,iBAAiB"}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@sentry+react@9.37.0_react@18.3.1/node_modules/@sentry/react/src/profiler.tsx"],"sourcesContent":["import { startInactiveSpan } from '@sentry/browser';\nimport type { Span } from '@sentry/core';\nimport { SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN, spanToJSON, timestampInSeconds, withActiveSpan } from '@sentry/core';\nimport * as React from 'react';\nimport { REACT_MOUNT_OP, REACT_RENDER_OP, REACT_UPDATE_OP } from './constants';\nimport { hoistNonReactStatics } from './hoist-non-react-statics';\n\nexport const UNKNOWN_COMPONENT = 'unknown';\n\nexport type ProfilerProps = {\n  // The name of the component being profiled.\n  name: string;\n  // If the Profiler is disabled. False by default. This is useful if you want to disable profilers\n  // in certain environments.\n  disabled?: boolean;\n  // If time component is on page should be displayed as spans. True by default.\n  includeRender?: boolean;\n  // If component updates should be displayed as spans. True by default.\n  includeUpdates?: boolean;\n  // Component that is being profiled.\n  children?: React.ReactNode;\n  // props given to component being profiled.\n  updateProps: { [key: string]: unknown };\n};\n\n/**\n * The Profiler component leverages Sentry's Tracing integration to generate\n * spans based on component lifecycles.\n */\nclass Profiler extends React.Component<ProfilerProps> {\n  /**\n   * The span of the mount activity\n   * Made protected for the React Native SDK to access\n   */\n  protected _mountSpan: Span | undefined;\n  /**\n   * The span that represents the duration of time between shouldComponentUpdate and componentDidUpdate\n   */\n  protected _updateSpan: Span | undefined;\n\n  public constructor(props: ProfilerProps) {\n    super(props);\n    const { name, disabled = false } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    this._mountSpan = startInactiveSpan({\n      name: `<${name}>`,\n      onlyIfParent: true,\n      op: REACT_MOUNT_OP,\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.react.profiler',\n        'ui.component_name': name,\n      },\n    });\n  }\n\n  // If a component mounted, we can finish the mount activity.\n  public componentDidMount(): void {\n    if (this._mountSpan) {\n      this._mountSpan.end();\n    }\n  }\n\n  public shouldComponentUpdate({ updateProps, includeUpdates = true }: ProfilerProps): boolean {\n    // Only generate an update span if includeUpdates is true, if there is a valid mountSpan,\n    // and if the updateProps have changed. It is ok to not do a deep equality check here as it is expensive.\n    // We are just trying to give baseline clues for further investigation.\n    if (includeUpdates && this._mountSpan && updateProps !== this.props.updateProps) {\n      // See what props have changed between the previous props, and the current props. This is\n      // set as data on the span. We just store the prop keys as the values could be potentially very large.\n      const changedProps = Object.keys(updateProps).filter(k => updateProps[k] !== this.props.updateProps[k]);\n      if (changedProps.length > 0) {\n        const now = timestampInSeconds();\n        this._updateSpan = withActiveSpan(this._mountSpan, () => {\n          return startInactiveSpan({\n            name: `<${this.props.name}>`,\n            onlyIfParent: true,\n            op: REACT_UPDATE_OP,\n            startTime: now,\n            attributes: {\n              [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.react.profiler',\n              'ui.component_name': this.props.name,\n              'ui.react.changed_props': changedProps,\n            },\n          });\n        });\n      }\n    }\n\n    return true;\n  }\n\n  public componentDidUpdate(): void {\n    if (this._updateSpan) {\n      this._updateSpan.end();\n      this._updateSpan = undefined;\n    }\n  }\n\n  // If a component is unmounted, we can say it is no longer on the screen.\n  // This means we can finish the span representing the component render.\n  public componentWillUnmount(): void {\n    const endTimestamp = timestampInSeconds();\n    const { name, includeRender = true } = this.props;\n\n    if (this._mountSpan && includeRender) {\n      const startTime = spanToJSON(this._mountSpan).timestamp;\n      withActiveSpan(this._mountSpan, () => {\n        const renderSpan = startInactiveSpan({\n          onlyIfParent: true,\n          name: `<${name}>`,\n          op: REACT_RENDER_OP,\n          startTime,\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.react.profiler',\n            'ui.component_name': name,\n          },\n        });\n        if (renderSpan) {\n          // Have to cast to Span because the type of _mountSpan is Span | undefined\n          // and not getting narrowed properly\n          renderSpan.end(endTimestamp);\n        }\n      });\n    }\n  }\n\n  public render(): React.ReactNode {\n    return this.props.children;\n  }\n}\n\n// React.Component default props are defined as static property on the class\nObject.assign(Profiler, {\n  defaultProps: {\n    disabled: false,\n    includeRender: true,\n    includeUpdates: true,\n  },\n});\n\n/**\n * withProfiler is a higher order component that wraps a\n * component in a {@link Profiler} component. It is recommended that\n * the higher order component be used over the regular {@link Profiler} component.\n *\n * @param WrappedComponent component that is wrapped by Profiler\n * @param options the {@link ProfilerProps} you can pass into the Profiler\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction withProfiler<P extends Record<string, any>>(\n  WrappedComponent: React.ComponentType<P>,\n  // We do not want to have `updateProps` given in options, it is instead filled through the HOC.\n  options?: Pick<Partial<ProfilerProps>, Exclude<keyof ProfilerProps, 'updateProps' | 'children'>>,\n): React.FC<P> {\n  const componentDisplayName =\n    options?.name || WrappedComponent.displayName || WrappedComponent.name || UNKNOWN_COMPONENT;\n\n  const Wrapped: React.FC<P> = (props: P) => (\n    <Profiler {...options} name={componentDisplayName} updateProps={props}>\n      <WrappedComponent {...props} />\n    </Profiler>\n  );\n\n  Wrapped.displayName = `profiler(${componentDisplayName})`;\n\n  // Copy over static methods from Wrapped component to Profiler HOC\n  // See: https://reactjs.org/docs/higher-order-components.html#static-methods-must-be-copied-over\n  hoistNonReactStatics(Wrapped, WrappedComponent);\n  return Wrapped;\n}\n\n/**\n *\n * `useProfiler` is a React hook that profiles a React component.\n *\n * Requires React 16.8 or above.\n * @param name displayName of component being profiled\n */\nfunction useProfiler(\n  name: string,\n  options: { disabled?: boolean; hasRenderSpan?: boolean } = {\n    disabled: false,\n    hasRenderSpan: true,\n  },\n): void {\n  const [mountSpan] = React.useState(() => {\n    if (options?.disabled) {\n      return undefined;\n    }\n\n    return startInactiveSpan({\n      name: `<${name}>`,\n      onlyIfParent: true,\n      op: REACT_MOUNT_OP,\n      attributes: {\n        [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.react.profiler',\n        'ui.component_name': name,\n      },\n    });\n  });\n\n  React.useEffect(() => {\n    if (mountSpan) {\n      mountSpan.end();\n    }\n\n    return (): void => {\n      if (mountSpan && options.hasRenderSpan) {\n        const startTime = spanToJSON(mountSpan).timestamp;\n        const endTimestamp = timestampInSeconds();\n\n        const renderSpan = startInactiveSpan({\n          name: `<${name}>`,\n          onlyIfParent: true,\n          op: REACT_RENDER_OP,\n          startTime,\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.ui.react.profiler',\n            'ui.component_name': name,\n          },\n        });\n        if (renderSpan) {\n          // Have to cast to Span because the type of _mountSpan is Span | undefined\n          // and not getting narrowed properly\n          renderSpan.end(endTimestamp);\n        }\n      }\n    };\n    // We only want this to run once.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n}\n\nexport { Profiler, useProfiler, withProfiler };\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 575, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 580, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@sentry+react@9.37.0_react@18.3.1/node_modules/@sentry/react/src/redux.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport type { Scope } from '@sentry/core';\nimport { addBreadcrumb, addNonEnumerableProperty, getClient, getCurrentScope, getGlobalScope } from '@sentry/core';\n\ninterface Action<T = any> {\n  type: T;\n}\n\ninterface AnyAction extends Action {\n  [extraProps: string]: any;\n}\n\ntype Reducer<S = any, A extends Action = AnyAction> = (state: S | undefined, action: A) => S;\n\ntype Dispatch<A extends Action = AnyAction> = <T extends A>(action: T, ...extraArgs: any[]) => T;\n\ntype ExtendState<State, Extension> = [Extension] extends [never] ? State : State & Extension;\n\ntype Unsubscribe = () => void;\n\ninterface Store<S = any, A extends Action = AnyAction, StateExt = never, Ext = Record<string, unknown>> {\n  dispatch: Dispatch<A>;\n  getState(): S;\n  subscribe(listener: () => void): Unsubscribe;\n  replaceReducer<NewState, NewActions extends Action>(\n    nextReducer: Reducer<NewState, NewActions>,\n  ): Store<ExtendState<NewState, StateExt>, NewActions, StateExt, Ext> & Ext;\n}\n\ndeclare const $CombinedState: unique symbol;\n\ntype CombinedState<S> = { readonly [$CombinedState]?: undefined } & S;\n\ntype PreloadedState<S> = Required<S> extends {\n  [$CombinedState]: undefined;\n}\n  ? S extends CombinedState<infer S1>\n    ? { [K in keyof S1]?: S1[K] extends Record<string, unknown> ? PreloadedState<S1[K]> : S1[K] }\n    : never\n  : { [K in keyof S]: S[K] extends string | number | boolean | symbol ? S[K] : PreloadedState<S[K]> };\n\ntype StoreEnhancerStoreCreator<Ext = Record<string, unknown>, StateExt = never> = <\n  S = any,\n  A extends Action = AnyAction,\n>(\n  reducer: Reducer<S, A>,\n  preloadedState?: PreloadedState<S>,\n) => Store<ExtendState<S, StateExt>, A, StateExt, Ext> & Ext;\n\nexport interface SentryEnhancerOptions<S = any> {\n  /**\n   * Redux state in attachments or not.\n   * @default true\n   */\n  attachReduxState?: boolean;\n\n  /**\n   * Transforms the state before attaching it to an event.\n   * Use this to remove any private data before sending it to Sentry.\n   * Return null to not attach the state.\n   */\n  stateTransformer(state: S | undefined): (S & any) | null;\n  /**\n   * Transforms the action before sending it as a breadcrumb.\n   * Use this to remove any private data before sending it to Sentry.\n   * Return null to not send the breadcrumb.\n   */\n  actionTransformer(action: AnyAction): AnyAction | null;\n  /**\n   * Called on every state update, configure the Sentry Scope with the redux state.\n   */\n  configureScopeWithState?(scope: Scope, state: S): void;\n}\n\nconst ACTION_BREADCRUMB_CATEGORY = 'redux.action';\nconst ACTION_BREADCRUMB_TYPE = 'info';\n\nconst defaultOptions: SentryEnhancerOptions = {\n  attachReduxState: true,\n  actionTransformer: action => action,\n  stateTransformer: state => state || null,\n};\n\n/**\n * Creates an enhancer that would be passed to Redux's createStore to log actions and the latest state to Sentry.\n *\n * @param enhancerOptions Options to pass to the enhancer\n */\nfunction createReduxEnhancer(enhancerOptions?: Partial<SentryEnhancerOptions>): any {\n  // Note: We return an any type as to not have type conflicts.\n  const options = {\n    ...defaultOptions,\n    ...enhancerOptions,\n  };\n\n  return (next: StoreEnhancerStoreCreator): StoreEnhancerStoreCreator =>\n    <S = any, A extends Action = AnyAction>(reducer: Reducer<S, A>, initialState?: PreloadedState<S>) => {\n      options.attachReduxState &&\n        getGlobalScope().addEventProcessor((event, hint) => {\n          try {\n            // @ts-expect-error try catch to reduce bundle size\n            if (event.type === undefined && event.contexts.state.state.type === 'redux') {\n              hint.attachments = [\n                ...(hint.attachments || []),\n                // @ts-expect-error try catch to reduce bundle size\n                { filename: 'redux_state.json', data: JSON.stringify(event.contexts.state.state.value) },\n              ];\n            }\n          } catch (_) {\n            // empty\n          }\n          return event;\n        });\n\n      function sentryWrapReducer(reducer: Reducer<S, A>): Reducer<S, A> {\n        return (state, action): S => {\n          const newState = reducer(state, action);\n\n          const scope = getCurrentScope();\n\n          /* Action breadcrumbs */\n          const transformedAction = options.actionTransformer(action);\n          if (typeof transformedAction !== 'undefined' && transformedAction !== null) {\n            addBreadcrumb({\n              category: ACTION_BREADCRUMB_CATEGORY,\n              data: transformedAction,\n              type: ACTION_BREADCRUMB_TYPE,\n            });\n          }\n\n          /* Set latest state to scope */\n          const transformedState = options.stateTransformer(newState);\n          if (typeof transformedState !== 'undefined' && transformedState !== null) {\n            const client = getClient();\n            const options = client?.getOptions();\n            const normalizationDepth = options?.normalizeDepth || 3; // default state normalization depth to 3\n\n            // Set the normalization depth of the redux state to the configured `normalizeDepth` option or a sane number as a fallback\n            const newStateContext = { state: { type: 'redux', value: transformedState } };\n            addNonEnumerableProperty(\n              newStateContext,\n              '__sentry_override_normalization_depth__',\n              3 + // 3 layers for `state.value.transformedState`\n                normalizationDepth, // rest for the actual state\n            );\n\n            scope.setContext('state', newStateContext);\n          } else {\n            scope.setContext('state', null);\n          }\n\n          /* Allow user to configure scope with latest state */\n          const { configureScopeWithState } = options;\n          if (typeof configureScopeWithState === 'function') {\n            configureScopeWithState(scope, newState);\n          }\n\n          return newState;\n        };\n      }\n\n      const store = next(sentryWrapReducer(reducer), initialState);\n\n      // eslint-disable-next-line @typescript-eslint/unbound-method\n      store.replaceReducer = new Proxy(store.replaceReducer, {\n        apply: function (target, thisArg, args) {\n          target.apply(thisArg, [sentryWrapReducer(args[0])]);\n        },\n      });\n\n      return store;\n    };\n}\n\nexport { createReduxEnhancer };\n"],"names":[],"mappings":";;;;;;;;AA0EA,MAAM,6BAA6B;AACnC,MAAM,yBAAyB;AAE/B,MAAM,iBAAwC;IAC5C,kBAAkB;IAClB,mBAAmB,CAAA,SAAU;IAC7B,kBAAkB,CAAA,QAAS,SAAS;AACtC;AAEA;;;;CAIA,GACA,SAAS,oBAAoB,eAAe;IAC5C,6DAAA;IACE,MAAM,UAAU;QACd,GAAG,cAAc;QACjB,GAAG,eAAe;IACtB;IAEE,OAAO,CAAC,OACN,CAAwC,SAAwB;YAC9D,QAAQ,gBAAA,IACN,CAAA,GAAA,kOAAA,CAAA,iBAAc,AAAd,IAAiB,iBAAiB,CAAC,CAAC,OAAO;gBACzC,IAAI;oBACd,mDAAA;oBACY,IAAI,MAAM,IAAA,KAAS,aAAa,MAAM,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,IAAA,KAAS,SAAS;wBAC3E,KAAK,WAAA,GAAc;+BACb,KAAK,WAAA,IAAe,EAAE;4BAC1C,mDAAA;4BACgB;gCAAE,UAAU;gCAAoB,MAAM,KAAK,SAAS,CAAC,MAAM,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK;4BAAA;yBACtF;oBACf;gBACA,EAAY,OAAO,GAAG;gBACtB,QAAA;gBACA;gBACU,OAAO;YACjB;YAEM,SAAS,kBAAkB,OAAO;gBAChC,OAAO,CAAC,OAAO;oBACb,MAAM,WAAW,QAAQ,OAAO;oBAEhC,MAAM,QAAQ,CAAA,GAAA,kOAAA,CAAA,kBAAe,AAAf;oBAExB,sBAAA,GACU,MAAM,oBAAoB,QAAQ,iBAAiB,CAAC;oBACpD,IAAI,OAAO,sBAAsB,eAAe,sBAAsB,MAAM;wBAC1E,CAAA,GAAA,gOAAA,CAAA,gBAAa,AAAb,EAAc;4BACZ,UAAU;4BACV,MAAM;4BACN,MAAM;wBACpB;oBACA;oBAEA,6BAAA,GACU,MAAM,mBAAmB,QAAQ,gBAAgB,CAAC;oBAClD,IAAI,OAAO,qBAAqB,eAAe,qBAAqB,MAAM;wBACxE,MAAM,SAAS,CAAA,GAAA,kOAAA,CAAA,YAAS,AAAT;wBACf,MAAM,UAAU,QAAQ;wBACxB,MAAM,qBAAqB,SAAS,kBAAkB,GAAC,yCAAA;wBAEnE,0HAAA;wBACY,MAAM,kBAAkB;4BAAE,OAAO;gCAAE,MAAM;gCAAS,OAAO;4BAAA;wBAAA;wBACzD,CAAA,GAAA,oOAAA,CAAA,2BAAwB,AAAxB,EACE,iBACA,2CACA,IAAA,8CAAA;wBACE;wBAGJ,MAAM,UAAU,CAAC,SAAS;oBACtC,OAAiB;wBACL,MAAM,UAAU,CAAC,SAAS;oBACtC;oBAEA,mDAAA,GACU,MAAM,EAAE,uBAAA,EAAwB,GAAI;oBACpC,IAAI,OAAO,4BAA4B,YAAY;wBACjD,wBAAwB,OAAO;oBAC3C;oBAEU,OAAO;gBACjB;YACA;YAEM,MAAM,QAAQ,KAAK,kBAAkB,UAAU;YAErD,6DAAA;YACM,MAAM,cAAA,GAAiB,IAAI,MAAM,MAAM,cAAc,EAAE;gBACrD,OAAO,SAAU,MAAM,EAAE,OAAO,EAAE,IAAI;oBACpC,OAAO,KAAK,CAAC,SAAS;wBAAC,kBAAkB,IAAI,CAAC,EAAE;qBAAE;gBAC5D;YACA;YAEM,OAAO;QACb;AACA"}},
    {"offset": {"line": 675, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 680, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@sentry+react@9.37.0_react@18.3.1/node_modules/@sentry/react/src/reactrouterv3.ts"],"sourcesContent":["import {\n  browserTracingIntegration,\n  startBrowserTracingNavigationSpan,\n  startBrowserTracingPageLoadSpan,\n  WINDOW,\n} from '@sentry/browser';\nimport type { Integration, TransactionSource } from '@sentry/core';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n} from '@sentry/core';\nimport type { Location } from './types';\n\n// Many of the types below had to be mocked out to prevent typescript issues\n// these types are required for correct functionality.\n\ntype HistoryV3 = {\n  location?: Location;\n  listen?(cb: (location: Location) => void): void;\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n} & Record<string, any>;\n\nexport type Route = { path?: string; childRoutes?: Route[] };\n\nexport type Match = (\n  props: { location: Location; routes: Route[] },\n  cb: (error?: Error, _redirectLocation?: Location, renderProps?: { routes?: Route[] }) => void,\n) => void;\n\ntype ReactRouterV3TransactionSource = Extract<TransactionSource, 'url' | 'route'>;\n\ninterface ReactRouterOptions {\n  history: HistoryV3;\n  routes: Route[];\n  match: Match;\n}\n\n/**\n * A browser tracing integration that uses React Router v3 to instrument navigations.\n * Expects `history` (and optionally `routes` and `matchPath`) to be passed as options.\n */\nexport function reactRouterV3BrowserTracingIntegration(\n  options: Parameters<typeof browserTracingIntegration>[0] & ReactRouterOptions,\n): Integration {\n  const integration = browserTracingIntegration({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false,\n  });\n\n  const { history, routes, match, instrumentPageLoad = true, instrumentNavigation = true } = options;\n\n  return {\n    ...integration,\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n\n      if (instrumentPageLoad && WINDOW.location) {\n        normalizeTransactionName(\n          routes,\n          WINDOW.location as unknown as Location,\n          match,\n          (localName: string, source: ReactRouterV3TransactionSource = 'url') => {\n            startBrowserTracingPageLoadSpan(client, {\n              name: localName,\n              attributes: {\n                [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n                [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.react.reactrouter_v3',\n                [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n              },\n            });\n          },\n        );\n      }\n\n      if (instrumentNavigation && history.listen) {\n        history.listen(location => {\n          if (location.action === 'PUSH' || location.action === 'POP') {\n            normalizeTransactionName(\n              routes,\n              location,\n              match,\n              (localName: string, source: TransactionSource = 'url') => {\n                startBrowserTracingNavigationSpan(client, {\n                  name: localName,\n                  attributes: {\n                    [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n                    [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.react.reactrouter_v3',\n                    [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n                  },\n                });\n              },\n            );\n          }\n        });\n      }\n    },\n  };\n}\n\n/**\n * Normalize transaction names using `Router.match`\n */\nfunction normalizeTransactionName(\n  appRoutes: Route[],\n  location: Location,\n  match: Match,\n  callback: (pathname: string, source?: ReactRouterV3TransactionSource) => void,\n): void {\n  let name = location.pathname;\n  match(\n    {\n      location,\n      routes: appRoutes,\n    },\n    (error, _redirectLocation, renderProps) => {\n      if (error || !renderProps) {\n        return callback(name);\n      }\n\n      const routePath = getRouteStringFromRoutes(renderProps.routes || []);\n      if (routePath.length === 0 || routePath === '/*') {\n        return callback(name);\n      }\n\n      name = routePath;\n      return callback(name, 'route');\n    },\n  );\n}\n\n/**\n * Generate route name from array of routes\n */\nfunction getRouteStringFromRoutes(routes: Route[]): string {\n  if (!Array.isArray(routes) || routes.length === 0) {\n    return '';\n  }\n\n  const routesWithPaths: Route[] = routes.filter((route: Route) => !!route.path);\n\n  let index = -1;\n  for (let x = routesWithPaths.length - 1; x >= 0; x--) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const route = routesWithPaths[x]!;\n    if (route.path?.startsWith('/')) {\n      index = x;\n      break;\n    }\n  }\n\n  return routesWithPaths.slice(index).reduce((acc, { path }) => {\n    const pathSegment = acc === '/' || acc === '' ? path : `/${path}`;\n    return `${acc}${pathSegment}`;\n  }, '');\n}\n"],"names":[],"mappings":";;;;;;;;;AAcA,4EAAA;AACA,sDAAA;AAuBA;;;CAGA,GACO,SAAS,uCACd,OAAO;IAEP,MAAM,cAAc,CAAA,GAAA,sQAAA,CAAA,4BAAyB,AAAzB,EAA0B;QAC5C,GAAG,OAAO;QACV,oBAAoB;QACpB,sBAAsB;IAC1B;IAEE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,qBAAqB,IAAI,EAAE,uBAAuB,IAAA,EAAK,GAAI;IAE3F,OAAO;QACL,GAAG,WAAW;QACd,eAAc,MAAM;YAClB,YAAY,aAAa,CAAC;YAE1B,IAAI,sBAAsB,yOAAA,CAAA,SAAM,CAAC,QAAQ,EAAE;gBACzC,yBACE,QACA,yOAAA,CAAA,SAAM,CAAC,QAAA,EACP,OACA,CAAC,WAAmB,SAAyC,KAAK;oBAChE,CAAA,GAAA,sQAAA,CAAA,kCAA+B,AAA/B,EAAgC,QAAQ;wBACtC,MAAM;wBACN,YAAY;4BACV,CAAC,uOAAA,CAAA,+BAA4B,CAAA,EAAG;4BAChC,CAAC,uOAAA,CAAA,mCAAgC,CAAA,EAAG;4BACpC,CAAC,uOAAA,CAAA,mCAAgC,CAAA,EAAG;wBACpD;oBACA;gBACA;YAEA;YAEM,IAAI,wBAAwB,QAAQ,MAAM,EAAE;gBAC1C,QAAQ,MAAM,CAAC,CAAA;oBACb,IAAI,SAAS,MAAA,KAAW,UAAU,SAAS,MAAA,KAAW,OAAO;wBAC3D,yBACE,QACA,UACA,OACA,CAAC,WAAmB,SAA4B,KAAK;4BACnD,CAAA,GAAA,sQAAA,CAAA,oCAAiC,AAAjC,EAAkC,QAAQ;gCACxC,MAAM;gCACN,YAAY;oCACV,CAAC,uOAAA,CAAA,+BAA4B,CAAA,EAAG;oCAChC,CAAC,uOAAA,CAAA,mCAAgC,CAAA,EAAG;oCACpC,CAAC,uOAAA,CAAA,mCAAgC,CAAA,EAAG;gCACxD;4BACA;wBACA;oBAEA;gBACA;YACA;QACA;IACA;AACA;AAEA;;CAEA,GACA,SAAS,yBACP,SAAS,EACT,QAAQ,EACR,KAAK,EACL,QAAQ;IAER,IAAI,OAAO,SAAS,QAAQ;IAC5B,MACE;QACE;QACA,QAAQ;IACd,GACI,CAAC,OAAO,mBAAmB;QACzB,IAAI,SAAS,CAAC,aAAa;YACzB,OAAO,SAAS;QACxB;QAEM,MAAM,YAAY,yBAAyB,YAAY,MAAA,IAAU,EAAE;QACnE,IAAI,UAAU,MAAA,KAAW,KAAK,cAAc,MAAM;YAChD,OAAO,SAAS;QACxB;QAEM,OAAO;QACP,OAAO,SAAS,MAAM;IAC5B;AAEA;AAEA;;CAEA,GACA,SAAS,yBAAyB,MAAM;IACtC,IAAI,CAAC,MAAM,OAAO,CAAC,WAAW,OAAO,MAAA,KAAW,GAAG;QACjD,OAAO;IACX;IAEE,MAAM,kBAA2B,OAAO,MAAM,CAAC,CAAC,QAAiB,CAAC,CAAC,MAAM,IAAI;IAE7E,IAAI,QAAQ,CAAA;IACZ,IAAK,IAAI,IAAI,gBAAgB,MAAA,GAAS,GAAG,KAAK,GAAG,IAAK;QACxD,oEAAA;QACI,MAAM,QAAQ,eAAe,CAAC,EAAE;QAChC,IAAI,MAAM,IAAI,EAAE,WAAW,MAAM;YAC/B,QAAQ;YACR;QACN;IACA;IAEE,OAAO,gBAAgB,KAAK,CAAC,OAAO,MAAM,CAAC,CAAC,KAAK,EAAE,IAAA,EAAM;QACvD,MAAM,cAAc,QAAQ,OAAO,QAAQ,KAAK,OAAO,CAAC,CAAC,EAAE,KAAK,CAAA;QACA,OAAA,CAAA,EAAA,IAAA,EAAA,YAAA,CAAA;IACA,GAAA;AACA"}},
    {"offset": {"line": 778, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 783, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@sentry+react@9.37.0_react@18.3.1/node_modules/@sentry/react/src/reactrouter.tsx"],"sourcesContent":["import {\n  browserTracingIntegration,\n  startBrowserTracingNavigationSpan,\n  startBrowserTracingPageLoadSpan,\n  WINDOW,\n} from '@sentry/browser';\nimport type { Client, Integration, Span, TransactionSource } from '@sentry/core';\nimport {\n  getActiveSpan,\n  getCurrentScope,\n  getRootSpan,\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  spanToJSON,\n} from '@sentry/core';\nimport type { ReactElement } from 'react';\nimport * as React from 'react';\nimport { hoistNonReactStatics } from './hoist-non-react-statics';\nimport type { Action, Location } from './types';\n\n// We need to disable eslint no-explicit-any because any is required for the\n// react-router typings.\ntype Match = { path: string; url: string; params: Record<string, any>; isExact: boolean }; // eslint-disable-line @typescript-eslint/no-explicit-any\n\nexport type RouterHistory = {\n  location?: Location;\n  listen?(cb: (location: Location, action: Action) => void): void;\n} & Record<string, any>; // eslint-disable-line @typescript-eslint/no-explicit-any\n\nexport type RouteConfig = {\n  [propName: string]: unknown;\n  path?: string | string[];\n  exact?: boolean;\n  component?: ReactElement;\n  routes?: RouteConfig[];\n};\n\nexport type MatchPath = (pathname: string, props: string | string[] | any, parent?: Match | null) => Match | null; // eslint-disable-line @typescript-eslint/no-explicit-any\n\ninterface ReactRouterOptions {\n  history: RouterHistory;\n  routes?: RouteConfig[];\n  matchPath?: MatchPath;\n}\n\n/**\n * A browser tracing integration that uses React Router v4 to instrument navigations.\n * Expects `history` (and optionally `routes` and `matchPath`) to be passed as options.\n */\nexport function reactRouterV4BrowserTracingIntegration(\n  options: Parameters<typeof browserTracingIntegration>[0] & ReactRouterOptions,\n): Integration {\n  const integration = browserTracingIntegration({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false,\n  });\n\n  const { history, routes, matchPath, instrumentPageLoad = true, instrumentNavigation = true } = options;\n\n  return {\n    ...integration,\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n\n      instrumentReactRouter(\n        client,\n        instrumentPageLoad,\n        instrumentNavigation,\n        history,\n        'reactrouter_v4',\n        routes,\n        matchPath,\n      );\n    },\n  };\n}\n\n/**\n * A browser tracing integration that uses React Router v5 to instrument navigations.\n * Expects `history` (and optionally `routes` and `matchPath`) to be passed as options.\n */\nexport function reactRouterV5BrowserTracingIntegration(\n  options: Parameters<typeof browserTracingIntegration>[0] & ReactRouterOptions,\n): Integration {\n  const integration = browserTracingIntegration({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false,\n  });\n\n  const { history, routes, matchPath, instrumentPageLoad = true, instrumentNavigation = true } = options;\n\n  return {\n    ...integration,\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n\n      instrumentReactRouter(\n        client,\n        instrumentPageLoad,\n        instrumentNavigation,\n        history,\n        'reactrouter_v5',\n        routes,\n        matchPath,\n      );\n    },\n  };\n}\n\nfunction instrumentReactRouter(\n  client: Client,\n  instrumentPageLoad: boolean,\n  instrumentNavigation: boolean,\n  history: RouterHistory,\n  instrumentationName: string,\n  allRoutes: RouteConfig[] = [],\n  matchPath?: MatchPath,\n): void {\n  function getInitPathName(): string | undefined {\n    if (history.location) {\n      return history.location.pathname;\n    }\n\n    if (WINDOW.location) {\n      return WINDOW.location.pathname;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Normalizes a transaction name. Returns the new name as well as the\n   * source of the transaction.\n   *\n   * @param pathname The initial pathname we normalize\n   */\n  function normalizeTransactionName(pathname: string): [string, TransactionSource] {\n    if (allRoutes.length === 0 || !matchPath) {\n      return [pathname, 'url'];\n    }\n\n    const branches = matchRoutes(allRoutes, pathname, matchPath);\n    for (const branch of branches) {\n      if (branch.match.isExact) {\n        return [branch.match.path, 'route'];\n      }\n    }\n\n    return [pathname, 'url'];\n  }\n\n  if (instrumentPageLoad) {\n    const initPathName = getInitPathName();\n    if (initPathName) {\n      const [name, source] = normalizeTransactionName(initPathName);\n      startBrowserTracingPageLoadSpan(client, {\n        name,\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: `auto.pageload.react.${instrumentationName}`,\n          [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n        },\n      });\n    }\n  }\n\n  if (instrumentNavigation && history.listen) {\n    history.listen((location, action) => {\n      if (action && (action === 'PUSH' || action === 'POP')) {\n        const [name, source] = normalizeTransactionName(location.pathname);\n        startBrowserTracingNavigationSpan(client, {\n          name,\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: `auto.navigation.react.${instrumentationName}`,\n            [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n          },\n        });\n      }\n    });\n  }\n}\n\n/**\n * Matches a set of routes to a pathname\n * Based on implementation from\n */\nfunction matchRoutes(\n  routes: RouteConfig[],\n  pathname: string,\n  matchPath: MatchPath,\n  branch: Array<{ route: RouteConfig; match: Match }> = [],\n): Array<{ route: RouteConfig; match: Match }> {\n  routes.some(route => {\n    const match = route.path\n      ? matchPath(pathname, route)\n      : branch.length\n        ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          branch[branch.length - 1]!.match // use parent match\n        : computeRootMatch(pathname); // use default \"root\" match\n\n    if (match) {\n      branch.push({ route, match });\n\n      if (route.routes) {\n        matchRoutes(route.routes, pathname, matchPath, branch);\n      }\n    }\n\n    return !!match;\n  });\n\n  return branch;\n}\n\nfunction computeRootMatch(pathname: string): Match {\n  return { path: '/', url: '/', params: {}, isExact: pathname === '/' };\n}\n\n/* eslint-disable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\nexport function withSentryRouting<P extends Record<string, any>, R extends React.ComponentType<P>>(Route: R): R {\n  const componentDisplayName = Route.displayName || Route.name;\n\n  const WrappedRoute: React.FC<P> = (props: P) => {\n    if (props?.computedMatch?.isExact) {\n      const route = props.computedMatch.path;\n      const activeRootSpan = getActiveRootSpan();\n\n      getCurrentScope().setTransactionName(route);\n\n      if (activeRootSpan) {\n        activeRootSpan.updateName(route);\n        activeRootSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, 'route');\n      }\n    }\n\n    // @ts-expect-error Setting more specific React Component typing for `R` generic above\n    // will break advanced type inference done by react router params:\n    // https://github.com/DefinitelyTyped/DefinitelyTyped/blob/13dc4235c069e25fe7ee16e11f529d909f9f3ff8/types/react-router/index.d.ts#L154-L164\n    return <Route {...props} />;\n  };\n\n  WrappedRoute.displayName = `sentryRoute(${componentDisplayName})`;\n  hoistNonReactStatics(WrappedRoute, Route);\n  // @ts-expect-error Setting more specific React Component typing for `R` generic above\n  // will break advanced type inference done by react router params:\n  // https://github.com/DefinitelyTyped/DefinitelyTyped/blob/13dc4235c069e25fe7ee16e11f529d909f9f3ff8/types/react-router/index.d.ts#L154-L164\n  return WrappedRoute;\n}\n/* eslint-enable @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access */\n\nfunction getActiveRootSpan(): Span | undefined {\n  const span = getActiveSpan();\n  const rootSpan = span && getRootSpan(span);\n\n  if (!rootSpan) {\n    return undefined;\n  }\n\n  const op = spanToJSON(rootSpan).op;\n\n  // Only use this root span if it is a pageload or navigation span\n  return op === 'navigation' || op === 'pageload' ? rootSpan : undefined;\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 970, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 975, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@sentry+react@9.37.0_react@18.3.1/node_modules/@sentry/react/src/reactrouterv6-compat-utils.tsx"],"sourcesContent":["/* eslint-disable max-lines */\n// Inspired from Donnie McNeal's solution:\n// https://gist.github.com/wontondon/e8c4bdf2888875e4c755712e99279536\n\nimport {\n  browserTracingIntegration,\n  startBrowserTracingNavigationSpan,\n  startBrowserTracingPageLoadSpan,\n  WINDOW,\n} from '@sentry/browser';\nimport type { Client, Integration, Span, TransactionSource } from '@sentry/core';\nimport {\n  getActiveSpan,\n  getClient,\n  getCurrentScope,\n  getRootSpan,\n  logger,\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n  spanToJSON,\n} from '@sentry/core';\nimport * as React from 'react';\nimport { DEBUG_BUILD } from './debug-build';\nimport { hoistNonReactStatics } from './hoist-non-react-statics';\nimport type {\n  Action,\n  AgnosticDataRouteMatch,\n  CreateRouterFunction,\n  CreateRoutesFromChildren,\n  Location,\n  MatchRoutes,\n  RouteMatch,\n  RouteObject,\n  Router,\n  RouterState,\n  UseEffect,\n  UseLocation,\n  UseNavigationType,\n  UseRoutes,\n} from './types';\n\nlet _useEffect: UseEffect;\nlet _useLocation: UseLocation;\nlet _useNavigationType: UseNavigationType;\nlet _createRoutesFromChildren: CreateRoutesFromChildren;\nlet _matchRoutes: MatchRoutes;\nlet _stripBasename: boolean = false;\n\nconst CLIENTS_WITH_INSTRUMENT_NAVIGATION = new WeakSet<Client>();\n\nexport interface ReactRouterOptions {\n  useEffect: UseEffect;\n  useLocation: UseLocation;\n  useNavigationType: UseNavigationType;\n  createRoutesFromChildren: CreateRoutesFromChildren;\n  matchRoutes: MatchRoutes;\n  stripBasename?: boolean;\n}\n\ntype V6CompatibleVersion = '6' | '7';\n\n// Keeping as a global variable for cross-usage in multiple functions\nconst allRoutes = new Set<RouteObject>();\n\n/**\n * Creates a wrapCreateBrowserRouter function that can be used with all React Router v6 compatible versions.\n */\nexport function createV6CompatibleWrapCreateBrowserRouter<\n  TState extends RouterState = RouterState,\n  TRouter extends Router<TState> = Router<TState>,\n>(\n  createRouterFunction: CreateRouterFunction<TState, TRouter>,\n  version: V6CompatibleVersion,\n): CreateRouterFunction<TState, TRouter> {\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_matchRoutes) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `reactRouterV${version}Instrumentation was unable to wrap the \\`createRouter\\` function because of one or more missing parameters.`,\n      );\n\n    return createRouterFunction;\n  }\n\n  return function (routes: RouteObject[], opts?: Record<string, unknown> & { basename?: string }): TRouter {\n    addRoutesToAllRoutes(routes);\n\n    const router = createRouterFunction(routes, opts);\n    const basename = opts?.basename;\n\n    const activeRootSpan = getActiveRootSpan();\n\n    // The initial load ends when `createBrowserRouter` is called.\n    // This is the earliest convenient time to update the transaction name.\n    // Callbacks to `router.subscribe` are not called for the initial load.\n    if (router.state.historyAction === 'POP' && activeRootSpan) {\n      updatePageloadTransaction(\n        activeRootSpan,\n        router.state.location,\n        routes,\n        undefined,\n        basename,\n        Array.from(allRoutes),\n      );\n    }\n\n    router.subscribe((state: RouterState) => {\n      if (state.historyAction === 'PUSH' || state.historyAction === 'POP') {\n        // Wait for the next render if loading an unsettled route\n        if (state.navigation.state !== 'idle') {\n          requestAnimationFrame(() => {\n            handleNavigation({\n              location: state.location,\n              routes,\n              navigationType: state.historyAction,\n              version,\n              basename,\n              allRoutes: Array.from(allRoutes),\n            });\n          });\n        } else {\n          handleNavigation({\n            location: state.location,\n            routes,\n            navigationType: state.historyAction,\n            version,\n            basename,\n            allRoutes: Array.from(allRoutes),\n          });\n        }\n      }\n    });\n\n    return router;\n  };\n}\n\n/**\n * Creates a wrapCreateMemoryRouter function that can be used with all React Router v6 compatible versions.\n */\nexport function createV6CompatibleWrapCreateMemoryRouter<\n  TState extends RouterState = RouterState,\n  TRouter extends Router<TState> = Router<TState>,\n>(\n  createRouterFunction: CreateRouterFunction<TState, TRouter>,\n  version: V6CompatibleVersion,\n): CreateRouterFunction<TState, TRouter> {\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_matchRoutes) {\n    DEBUG_BUILD &&\n      logger.warn(\n        `reactRouterV${version}Instrumentation was unable to wrap the \\`createMemoryRouter\\` function because of one or more missing parameters.`,\n      );\n\n    return createRouterFunction;\n  }\n\n  return function (\n    routes: RouteObject[],\n    opts?: Record<string, unknown> & {\n      basename?: string;\n      initialEntries?: (string | { pathname: string })[];\n      initialIndex?: number;\n    },\n  ): TRouter {\n    addRoutesToAllRoutes(routes);\n\n    const router = createRouterFunction(routes, opts);\n    const basename = opts?.basename;\n\n    const activeRootSpan = getActiveRootSpan();\n    let initialEntry = undefined;\n\n    const initialEntries = opts?.initialEntries;\n    const initialIndex = opts?.initialIndex;\n\n    const hasOnlyOneInitialEntry = initialEntries && initialEntries.length === 1;\n    const hasIndexedEntry = initialIndex !== undefined && initialEntries && initialEntries[initialIndex];\n\n    initialEntry = hasOnlyOneInitialEntry\n      ? initialEntries[0]\n      : hasIndexedEntry\n        ? initialEntries[initialIndex]\n        : undefined;\n\n    const location = initialEntry\n      ? typeof initialEntry === 'string'\n        ? { pathname: initialEntry }\n        : initialEntry\n      : router.state.location;\n\n    if (router.state.historyAction === 'POP' && activeRootSpan) {\n      updatePageloadTransaction(activeRootSpan, location, routes, undefined, basename, Array.from(allRoutes));\n    }\n\n    router.subscribe((state: RouterState) => {\n      const location = state.location;\n      if (state.historyAction === 'PUSH' || state.historyAction === 'POP') {\n        handleNavigation({\n          location,\n          routes,\n          navigationType: state.historyAction,\n          version,\n          basename,\n          allRoutes: Array.from(allRoutes),\n        });\n      }\n    });\n\n    return router;\n  };\n}\n\n/**\n * Creates a browser tracing integration that can be used with all React Router v6 compatible versions.\n */\nexport function createReactRouterV6CompatibleTracingIntegration(\n  options: Parameters<typeof browserTracingIntegration>[0] & ReactRouterOptions,\n  version: V6CompatibleVersion,\n): Integration {\n  const integration = browserTracingIntegration({\n    ...options,\n    instrumentPageLoad: false,\n    instrumentNavigation: false,\n  });\n\n  const {\n    useEffect,\n    useLocation,\n    useNavigationType,\n    createRoutesFromChildren,\n    matchRoutes,\n    stripBasename,\n    instrumentPageLoad = true,\n    instrumentNavigation = true,\n  } = options;\n\n  return {\n    ...integration,\n    setup(client) {\n      integration.setup(client);\n\n      _useEffect = useEffect;\n      _useLocation = useLocation;\n      _useNavigationType = useNavigationType;\n      _matchRoutes = matchRoutes;\n      _createRoutesFromChildren = createRoutesFromChildren;\n      _stripBasename = stripBasename || false;\n    },\n    afterAllSetup(client) {\n      integration.afterAllSetup(client);\n\n      const initPathName = WINDOW.location?.pathname;\n      if (instrumentPageLoad && initPathName) {\n        startBrowserTracingPageLoadSpan(client, {\n          name: initPathName,\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: 'url',\n            [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: `auto.pageload.react.reactrouter_v${version}`,\n          },\n        });\n      }\n\n      if (instrumentNavigation) {\n        CLIENTS_WITH_INSTRUMENT_NAVIGATION.add(client);\n      }\n    },\n  };\n}\n\nexport function createV6CompatibleWrapUseRoutes(origUseRoutes: UseRoutes, version: V6CompatibleVersion): UseRoutes {\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_matchRoutes) {\n    DEBUG_BUILD &&\n      logger.warn(\n        'reactRouterV6Instrumentation was unable to wrap `useRoutes` because of one or more missing parameters.',\n      );\n\n    return origUseRoutes;\n  }\n\n  const SentryRoutes: React.FC<{\n    children?: React.ReactNode;\n    routes: RouteObject[];\n    locationArg?: Partial<Location> | string;\n  }> = (props: { children?: React.ReactNode; routes: RouteObject[]; locationArg?: Partial<Location> | string }) => {\n    const isMountRenderPass = React.useRef(true);\n    const { routes, locationArg } = props;\n\n    const Routes = origUseRoutes(routes, locationArg);\n\n    const location = _useLocation();\n    const navigationType = _useNavigationType();\n\n    // A value with stable identity to either pick `locationArg` if available or `location` if not\n    const stableLocationParam =\n      typeof locationArg === 'string' || locationArg?.pathname ? (locationArg as { pathname: string }) : location;\n\n    _useEffect(() => {\n      const normalizedLocation =\n        typeof stableLocationParam === 'string' ? { pathname: stableLocationParam } : stableLocationParam;\n\n      if (isMountRenderPass.current) {\n        addRoutesToAllRoutes(routes);\n\n        updatePageloadTransaction(\n          getActiveRootSpan(),\n          normalizedLocation,\n          routes,\n          undefined,\n          undefined,\n          Array.from(allRoutes),\n        );\n        isMountRenderPass.current = false;\n      } else {\n        handleNavigation({\n          location: normalizedLocation,\n          routes,\n          navigationType,\n          version,\n          allRoutes: Array.from(allRoutes),\n        });\n      }\n    }, [navigationType, stableLocationParam]);\n\n    return Routes;\n  };\n\n  // eslint-disable-next-line react/display-name\n  return (routes: RouteObject[], locationArg?: Partial<Location> | string): React.ReactElement | null => {\n    return <SentryRoutes routes={routes} locationArg={locationArg} />;\n  };\n}\n\nexport function handleNavigation(opts: {\n  location: Location;\n  routes: RouteObject[];\n  navigationType: Action;\n  version: V6CompatibleVersion;\n  matches?: AgnosticDataRouteMatch;\n  basename?: string;\n  allRoutes?: RouteObject[];\n}): void {\n  const { location, routes, navigationType, version, matches, basename, allRoutes } = opts;\n  const branches = Array.isArray(matches) ? matches : _matchRoutes(routes, location, basename);\n\n  const client = getClient();\n  if (!client || !CLIENTS_WITH_INSTRUMENT_NAVIGATION.has(client)) {\n    return;\n  }\n\n  if ((navigationType === 'PUSH' || navigationType === 'POP') && branches) {\n    let name,\n      source: TransactionSource = 'url';\n    const isInDescendantRoute = locationIsInsideDescendantRoute(location, allRoutes || routes);\n\n    if (isInDescendantRoute) {\n      name = prefixWithSlash(rebuildRoutePathFromAllRoutes(allRoutes || routes, location));\n      source = 'route';\n    }\n\n    if (!isInDescendantRoute || !name) {\n      [name, source] = getNormalizedName(routes, location, branches, basename);\n    }\n\n    const activeSpan = getActiveSpan();\n    const isAlreadyInNavigationSpan = activeSpan && spanToJSON(activeSpan).op === 'navigation';\n\n    // Cross usage can result in multiple navigation spans being created without this check\n    if (isAlreadyInNavigationSpan) {\n      activeSpan?.updateName(name);\n      activeSpan?.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, source);\n    } else {\n      startBrowserTracingNavigationSpan(client, {\n        name,\n        attributes: {\n          [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: source,\n          [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n          [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: `auto.navigation.react.reactrouter_v${version}`,\n        },\n      });\n    }\n  }\n}\n\n/**\n * Strip the basename from a pathname if exists.\n *\n * Vendored and modified from `react-router`\n * https://github.com/remix-run/react-router/blob/462bb712156a3f739d6139a0f14810b76b002df6/packages/router/utils.ts#L1038\n */\nfunction stripBasenameFromPathname(pathname: string, basename: string): string {\n  if (!basename || basename === '/') {\n    return pathname;\n  }\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return pathname;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  const startIndex = basename.endsWith('/') ? basename.length - 1 : basename.length;\n  const nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== '/') {\n    // pathname does not start with basename/\n    return pathname;\n  }\n\n  return pathname.slice(startIndex) || '/';\n}\n\nfunction sendIndexPath(pathBuilder: string, pathname: string, basename: string): [string, TransactionSource] {\n  const reconstructedPath = pathBuilder || _stripBasename ? stripBasenameFromPathname(pathname, basename) : pathname;\n\n  const formattedPath =\n    // If the path ends with a slash, remove it\n    reconstructedPath[reconstructedPath.length - 1] === '/'\n      ? reconstructedPath.slice(0, -1)\n      : // If the path ends with a wildcard, remove it\n        reconstructedPath.slice(-2) === '/*'\n        ? reconstructedPath.slice(0, -1)\n        : reconstructedPath;\n\n  return [formattedPath, 'route'];\n}\n\nfunction pathEndsWithWildcard(path: string): boolean {\n  return path.endsWith('*');\n}\n\nfunction pathIsWildcardAndHasChildren(path: string, branch: RouteMatch<string>): boolean {\n  return (pathEndsWithWildcard(path) && !!branch.route.children?.length) || false;\n}\n\nfunction routeIsDescendant(route: RouteObject): boolean {\n  return !!(!route.children && route.element && route.path?.endsWith('/*'));\n}\n\nfunction locationIsInsideDescendantRoute(location: Location, routes: RouteObject[]): boolean {\n  const matchedRoutes = _matchRoutes(routes, location) as RouteMatch[];\n\n  if (matchedRoutes) {\n    for (const match of matchedRoutes) {\n      if (routeIsDescendant(match.route) && pickSplat(match)) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction addRoutesToAllRoutes(routes: RouteObject[]): void {\n  routes.forEach(route => {\n    const extractedChildRoutes = getChildRoutesRecursively(route);\n\n    extractedChildRoutes.forEach(r => {\n      allRoutes.add(r);\n    });\n  });\n}\n\nfunction getChildRoutesRecursively(route: RouteObject, allRoutes: Set<RouteObject> = new Set()): Set<RouteObject> {\n  if (!allRoutes.has(route)) {\n    allRoutes.add(route);\n\n    if (route.children && !route.index) {\n      route.children.forEach(child => {\n        const childRoutes = getChildRoutesRecursively(child, allRoutes);\n\n        childRoutes.forEach(r => {\n          allRoutes.add(r);\n        });\n      });\n    }\n  }\n\n  return allRoutes;\n}\n\nfunction pickPath(match: RouteMatch): string {\n  return trimWildcard(match.route.path || '');\n}\n\nfunction pickSplat(match: RouteMatch): string {\n  return match.params['*'] || '';\n}\n\nfunction trimWildcard(path: string): string {\n  return path[path.length - 1] === '*' ? path.slice(0, -1) : path;\n}\n\nfunction trimSlash(path: string): string {\n  return path[path.length - 1] === '/' ? path.slice(0, -1) : path;\n}\n\nfunction prefixWithSlash(path: string): string {\n  return path[0] === '/' ? path : `/${path}`;\n}\n\nfunction rebuildRoutePathFromAllRoutes(allRoutes: RouteObject[], location: Location): string {\n  const matchedRoutes = _matchRoutes(allRoutes, location) as RouteMatch[];\n\n  if (!matchedRoutes || matchedRoutes.length === 0) {\n    return '';\n  }\n\n  for (const match of matchedRoutes) {\n    if (match.route.path && match.route.path !== '*') {\n      const path = pickPath(match);\n      const strippedPath = stripBasenameFromPathname(location.pathname, prefixWithSlash(match.pathnameBase));\n\n      if (location.pathname === strippedPath) {\n        return trimSlash(strippedPath);\n      }\n\n      return trimSlash(\n        trimSlash(path || '') +\n          prefixWithSlash(\n            rebuildRoutePathFromAllRoutes(\n              allRoutes.filter(route => route !== match.route),\n              {\n                pathname: strippedPath,\n              },\n            ),\n          ),\n      );\n    }\n  }\n\n  return '';\n}\n\nfunction getNormalizedName(\n  routes: RouteObject[],\n  location: Location,\n  branches: RouteMatch[],\n  basename: string = '',\n): [string, TransactionSource] {\n  if (!routes || routes.length === 0) {\n    return [_stripBasename ? stripBasenameFromPathname(location.pathname, basename) : location.pathname, 'url'];\n  }\n\n  let pathBuilder = '';\n  if (branches) {\n    for (const branch of branches) {\n      const route = branch.route;\n      if (route) {\n        // Early return if index route\n        if (route.index) {\n          return sendIndexPath(pathBuilder, branch.pathname, basename);\n        }\n        const path = route.path;\n\n        // If path is not a wildcard and has no child routes, append the path\n        if (path && !pathIsWildcardAndHasChildren(path, branch)) {\n          const newPath = path[0] === '/' || pathBuilder[pathBuilder.length - 1] === '/' ? path : `/${path}`;\n          pathBuilder = trimSlash(pathBuilder) + prefixWithSlash(newPath);\n\n          // If the path matches the current location, return the path\n          if (trimSlash(location.pathname) === trimSlash(basename + branch.pathname)) {\n            if (\n              // If the route defined on the element is something like\n              // <Route path=\"/stores/:storeId/products/:productId\" element={<div>Product</div>} />\n              // We should check against the branch.pathname for the number of / separators\n              getNumberOfUrlSegments(pathBuilder) !== getNumberOfUrlSegments(branch.pathname) &&\n              // We should not count wildcard operators in the url segments calculation\n              !pathEndsWithWildcard(pathBuilder)\n            ) {\n              return [(_stripBasename ? '' : basename) + newPath, 'route'];\n            }\n\n            // if the last character of the pathbuilder is a wildcard and there are children, remove the wildcard\n            if (pathIsWildcardAndHasChildren(pathBuilder, branch)) {\n              pathBuilder = pathBuilder.slice(0, -1);\n            }\n\n            return [(_stripBasename ? '' : basename) + pathBuilder, 'route'];\n          }\n        }\n      }\n    }\n  }\n\n  const fallbackTransactionName = _stripBasename\n    ? stripBasenameFromPathname(location.pathname, basename)\n    : location.pathname || '/';\n\n  return [fallbackTransactionName, 'url'];\n}\n\nfunction updatePageloadTransaction(\n  activeRootSpan: Span | undefined,\n  location: Location,\n  routes: RouteObject[],\n  matches?: AgnosticDataRouteMatch,\n  basename?: string,\n  allRoutes?: RouteObject[],\n): void {\n  const branches = Array.isArray(matches)\n    ? matches\n    : (_matchRoutes(allRoutes || routes, location, basename) as unknown as RouteMatch[]);\n\n  if (branches) {\n    let name,\n      source: TransactionSource = 'url';\n\n    const isInDescendantRoute = locationIsInsideDescendantRoute(location, allRoutes || routes);\n\n    if (isInDescendantRoute) {\n      name = prefixWithSlash(rebuildRoutePathFromAllRoutes(allRoutes || routes, location));\n      source = 'route';\n    }\n\n    if (!isInDescendantRoute || !name) {\n      [name, source] = getNormalizedName(routes, location, branches, basename);\n    }\n\n    getCurrentScope().setTransactionName(name || '/');\n\n    if (activeRootSpan) {\n      activeRootSpan.updateName(name);\n      activeRootSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, source);\n    }\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function createV6CompatibleWithSentryReactRouterRouting<P extends Record<string, any>, R extends React.FC<P>>(\n  Routes: R,\n  version: V6CompatibleVersion,\n): R {\n  if (!_useEffect || !_useLocation || !_useNavigationType || !_createRoutesFromChildren || !_matchRoutes) {\n    DEBUG_BUILD &&\n      logger.warn(`reactRouterV6Instrumentation was unable to wrap Routes because of one or more missing parameters.\n      useEffect: ${_useEffect}. useLocation: ${_useLocation}. useNavigationType: ${_useNavigationType}.\n      createRoutesFromChildren: ${_createRoutesFromChildren}. matchRoutes: ${_matchRoutes}.`);\n\n    return Routes;\n  }\n\n  const SentryRoutes: React.FC<P> = (props: P) => {\n    const isMountRenderPass = React.useRef(true);\n\n    const location = _useLocation();\n    const navigationType = _useNavigationType();\n\n    _useEffect(\n      () => {\n        const routes = _createRoutesFromChildren(props.children) as RouteObject[];\n\n        if (isMountRenderPass.current) {\n          addRoutesToAllRoutes(routes);\n\n          updatePageloadTransaction(getActiveRootSpan(), location, routes, undefined, undefined, Array.from(allRoutes));\n          isMountRenderPass.current = false;\n        } else {\n          handleNavigation({\n            location,\n            routes,\n            navigationType,\n            version,\n            allRoutes: Array.from(allRoutes),\n          });\n        }\n      },\n      // `props.children` is purposely not included in the dependency array, because we do not want to re-run this effect\n      // when the children change. We only want to start transactions when the location or navigation type change.\n      [location, navigationType],\n    );\n\n    // @ts-expect-error Setting more specific React Component typing for `R` generic above\n    // will break advanced type inference done by react router params\n    return <Routes {...props} />;\n  };\n\n  hoistNonReactStatics(SentryRoutes, Routes);\n\n  // @ts-expect-error Setting more specific React Component typing for `R` generic above\n  // will break advanced type inference done by react router params\n  return SentryRoutes;\n}\n\nfunction getActiveRootSpan(): Span | undefined {\n  const span = getActiveSpan();\n  const rootSpan = span ? getRootSpan(span) : undefined;\n\n  if (!rootSpan) {\n    return undefined;\n  }\n\n  const op = spanToJSON(rootSpan).op;\n\n  // Only use this root span if it is a pageload or navigation span\n  return op === 'navigation' || op === 'pageload' ? rootSpan : undefined;\n}\n\n/**\n * Returns number of URL segments of a passed string URL.\n */\nexport function getNumberOfUrlSegments(url: string): number {\n  // split at '/' or at '\\/' to split regex urls correctly\n  return url.split(/\\\\?\\//).filter(s => s.length > 0 && s !== ',').length;\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1455, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1460, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@sentry+react@9.37.0_react@18.3.1/node_modules/@sentry/react/src/reactrouterv6.tsx"],"sourcesContent":["import type { browserTracingIntegration } from '@sentry/browser';\nimport type { Integration } from '@sentry/core';\nimport type { ReactRouterOptions } from './reactrouterv6-compat-utils';\nimport {\n  createReactRouterV6CompatibleTracingIntegration,\n  createV6CompatibleWithSentryReactRouterRouting,\n  createV6CompatibleWrapCreateBrowserRouter,\n  createV6CompatibleWrapCreateMemoryRouter,\n  createV6CompatibleWrapUseRoutes,\n} from './reactrouterv6-compat-utils';\nimport type { CreateRouterFunction, Router, RouterState, UseRoutes } from './types';\n\n/**\n * A browser tracing integration that uses React Router v6 to instrument navigations.\n * Expects `useEffect`, `useLocation`, `useNavigationType`, `createRoutesFromChildren` and `matchRoutes` to be passed as options.\n */\nexport function reactRouterV6BrowserTracingIntegration(\n  options: Parameters<typeof browserTracingIntegration>[0] & ReactRouterOptions,\n): Integration {\n  return createReactRouterV6CompatibleTracingIntegration(options, '6');\n}\n\n/**\n * A wrapper function that adds Sentry routing instrumentation to a React Router v6 useRoutes hook.\n * This is used to automatically capture route changes as transactions when using the useRoutes hook.\n */\nexport function wrapUseRoutesV6(origUseRoutes: UseRoutes): UseRoutes {\n  return createV6CompatibleWrapUseRoutes(origUseRoutes, '6');\n}\n\n/**\n * A wrapper function that adds Sentry routing instrumentation to a React Router v6 createBrowserRouter function.\n * This is used to automatically capture route changes as transactions when using the createBrowserRouter API.\n */\nexport function wrapCreateBrowserRouterV6<\n  TState extends RouterState = RouterState,\n  TRouter extends Router<TState> = Router<TState>,\n>(createRouterFunction: CreateRouterFunction<TState, TRouter>): CreateRouterFunction<TState, TRouter> {\n  return createV6CompatibleWrapCreateBrowserRouter(createRouterFunction, '6');\n}\n\n/**\n * A wrapper function that adds Sentry routing instrumentation to a React Router v6 createMemoryRouter function.\n * This is used to automatically capture route changes as transactions when using the createMemoryRouter API.\n * The difference between createBrowserRouter and createMemoryRouter is that with createMemoryRouter,\n * optional `initialEntries` are also taken into account.\n */\nexport function wrapCreateMemoryRouterV6<\n  TState extends RouterState = RouterState,\n  TRouter extends Router<TState> = Router<TState>,\n>(createMemoryRouterFunction: CreateRouterFunction<TState, TRouter>): CreateRouterFunction<TState, TRouter> {\n  return createV6CompatibleWrapCreateMemoryRouter(createMemoryRouterFunction, '6');\n}\n\n/**\n * A higher-order component that adds Sentry routing instrumentation to a React Router v6 Route component.\n * This is used to automatically capture route changes as transactions.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function withSentryReactRouterV6Routing<P extends Record<string, any>, R extends React.FC<P>>(routes: R): R {\n  return createV6CompatibleWithSentryReactRouterRouting<P, R>(routes, '6');\n}\n"],"names":[],"mappings":";;;;;;;;;;AAYA;;;CAGA,GACO,SAAS,uCACd,OAAO;IAEP,OAAO,CAAA,GAAA,6QAAA,CAAA,kDAA+C,AAA/C,EAAgD,SAAS;AAClE;AAEA;;;CAGA,GACO,SAAS,gBAAgB,aAAa;IAC3C,OAAO,CAAA,GAAA,6QAAA,CAAA,kCAA+B,AAA/B,EAAgC,eAAe;AACxD;AAEA;;;CAGA,GACO,SAAS,0BAGd,oBAAoB;IACpB,OAAO,CAAA,GAAA,6QAAA,CAAA,4CAAyC,AAAzC,EAA0C,sBAAsB;AACzE;AAEA;;;;;CAKA,GACO,SAAS,yBAGd,0BAA0B;IAC1B,OAAO,CAAA,GAAA,6QAAA,CAAA,2CAAwC,AAAxC,EAAyC,4BAA4B;AAC9E;AAEA;;;CAGA,GACA,8DAAA;AACO,SAAS,+BAAqF,MAAM;IACzG,OAAO,CAAA,GAAA,6QAAA,CAAA,iDAA8C,AAA9C,EAAqD,QAAQ;AACtE"}},
    {"offset": {"line": 1505, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1510, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@sentry+react@9.37.0_react@18.3.1/node_modules/@sentry/react/src/reactrouterv7.tsx"],"sourcesContent":["// React Router v7 uses the same integration as v6\nimport type { browserTracingIntegration } from '@sentry/browser';\nimport type { Integration } from '@sentry/core';\nimport type { ReactRouterOptions } from './reactrouterv6-compat-utils';\nimport {\n  createReactRouterV6CompatibleTracingIntegration,\n  createV6CompatibleWithSentryReactRouterRouting,\n  createV6CompatibleWrapCreateBrowserRouter,\n  createV6CompatibleWrapCreateMemoryRouter,\n  createV6CompatibleWrapUseRoutes,\n} from './reactrouterv6-compat-utils';\nimport type { CreateRouterFunction, Router, RouterState, UseRoutes } from './types';\n\n/**\n * A browser tracing integration that uses React Router v7 to instrument navigations.\n * Expects `useEffect`, `useLocation`, `useNavigationType`, `createRoutesFromChildren` and `matchRoutes` to be passed as options.\n */\nexport function reactRouterV7BrowserTracingIntegration(\n  options: Parameters<typeof browserTracingIntegration>[0] & ReactRouterOptions,\n): Integration {\n  return createReactRouterV6CompatibleTracingIntegration(options, '7');\n}\n\n/**\n * A higher-order component that adds Sentry routing instrumentation to a React Router v7 Route component.\n * This is used to automatically capture route changes as transactions.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function withSentryReactRouterV7Routing<P extends Record<string, any>, R extends React.FC<P>>(routes: R): R {\n  return createV6CompatibleWithSentryReactRouterRouting<P, R>(routes, '7');\n}\n\n/**\n * A wrapper function that adds Sentry routing instrumentation to a React Router v7 createBrowserRouter function.\n * This is used to automatically capture route changes as transactions when using the createBrowserRouter API.\n */\nexport function wrapCreateBrowserRouterV7<\n  TState extends RouterState = RouterState,\n  TRouter extends Router<TState> = Router<TState>,\n>(createRouterFunction: CreateRouterFunction<TState, TRouter>): CreateRouterFunction<TState, TRouter> {\n  return createV6CompatibleWrapCreateBrowserRouter(createRouterFunction, '7');\n}\n\n/**\n * A wrapper function that adds Sentry routing instrumentation to a React Router v7 createMemoryRouter function.\n * This is used to automatically capture route changes as transactions when using the createMemoryRouter API.\n * The difference between createBrowserRouter and createMemoryRouter is that with createMemoryRouter,\n * optional `initialEntries` are also taken into account.\n */\nexport function wrapCreateMemoryRouterV7<\n  TState extends RouterState = RouterState,\n  TRouter extends Router<TState> = Router<TState>,\n>(createMemoryRouterFunction: CreateRouterFunction<TState, TRouter>): CreateRouterFunction<TState, TRouter> {\n  return createV6CompatibleWrapCreateMemoryRouter(createMemoryRouterFunction, '7');\n}\n\n/**\n * A wrapper function that adds Sentry routing instrumentation to a React Router v7 useRoutes hook.\n * This is used to automatically capture route changes as transactions when using the useRoutes hook.\n */\nexport function wrapUseRoutesV7(origUseRoutes: UseRoutes): UseRoutes {\n  return createV6CompatibleWrapUseRoutes(origUseRoutes, '7');\n}\n"],"names":[],"mappings":";;;;;;;;;;AAaA;;;CAGA,GACO,SAAS,uCACd,OAAO;IAEP,OAAO,CAAA,GAAA,6QAAA,CAAA,kDAA+C,AAA/C,EAAgD,SAAS;AAClE;AAEA;;;CAGA,GACA,8DAAA;AACO,SAAS,+BAAqF,MAAM;IACzG,OAAO,CAAA,GAAA,6QAAA,CAAA,iDAA8C,AAA9C,EAAqD,QAAQ;AACtE;AAEA;;;CAGA,GACO,SAAS,0BAGd,oBAAoB;IACpB,OAAO,CAAA,GAAA,6QAAA,CAAA,4CAAyC,AAAzC,EAA0C,sBAAsB;AACzE;AAEA;;;;;CAKA,GACO,SAAS,yBAGd,0BAA0B;IAC1B,OAAO,CAAA,GAAA,6QAAA,CAAA,2CAAwC,AAAxC,EAAyC,4BAA4B;AAC9E;AAEA;;;CAGA,GACO,SAAS,gBAAgB,aAAa;IAC3C,OAAO,CAAA,GAAA,6QAAA,CAAA,kCAA+B,AAA/B,EAAgC,eAAe;AACxD"}},
    {"offset": {"line": 1555, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1560, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/.pnpm/@sentry+react@9.37.0_react@18.3.1/node_modules/@sentry/react/src/tanstackrouter.ts"],"sourcesContent":["import {\n  browserTracingIntegration as originalBrowserTracingIntegration,\n  startBrowserTracingNavigationSpan,\n  startBrowserTracingPageLoadSpan,\n  WINDOW,\n} from '@sentry/browser';\nimport type { Integration } from '@sentry/core';\nimport {\n  SEMANTIC_ATTRIBUTE_SENTRY_OP,\n  SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN,\n  SEMANTIC_ATTRIBUTE_SENTRY_SOURCE,\n} from '@sentry/core';\nimport type { VendoredTanstackRouter, VendoredTanstackRouterRouteMatch } from './vendor/tanstackrouter-types';\n\n/**\n * A custom browser tracing integration for TanStack Router.\n *\n * The minimum compatible version of `@tanstack/react-router` is `1.64.0`.\n *\n * @param router A TanStack Router `Router` instance that should be used for routing instrumentation.\n * @param options Sentry browser tracing configuration.\n */\nexport function tanstackRouterBrowserTracingIntegration(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  router: any, // This is `any` because we don't want any type mismatches if TanStack Router changes their types\n  options: Parameters<typeof originalBrowserTracingIntegration>[0] = {},\n): Integration {\n  const castRouterInstance: VendoredTanstackRouter = router;\n\n  const browserTracingIntegrationInstance = originalBrowserTracingIntegration({\n    ...options,\n    instrumentNavigation: false,\n    instrumentPageLoad: false,\n  });\n\n  const { instrumentPageLoad = true, instrumentNavigation = true } = options;\n\n  return {\n    ...browserTracingIntegrationInstance,\n    afterAllSetup(client) {\n      browserTracingIntegrationInstance.afterAllSetup(client);\n\n      const initialWindowLocation = WINDOW.location;\n      if (instrumentPageLoad && initialWindowLocation) {\n        const matchedRoutes = castRouterInstance.matchRoutes(\n          initialWindowLocation.pathname,\n          castRouterInstance.options.parseSearch(initialWindowLocation.search),\n          { preload: false, throwOnError: false },\n        );\n\n        const lastMatch = matchedRoutes[matchedRoutes.length - 1];\n\n        startBrowserTracingPageLoadSpan(client, {\n          name: lastMatch ? lastMatch.routeId : initialWindowLocation.pathname,\n          attributes: {\n            [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'pageload',\n            [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.pageload.react.tanstack_router',\n            [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: lastMatch ? 'route' : 'url',\n            ...routeMatchToParamSpanAttributes(lastMatch),\n          },\n        });\n      }\n\n      if (instrumentNavigation) {\n        // The onBeforeNavigate hook is called at the very beginning of a navigation and is only called once per navigation, even when the user is redirected\n        castRouterInstance.subscribe('onBeforeNavigate', onBeforeNavigateArgs => {\n          // onBeforeNavigate is called during pageloads. We can avoid creating navigation spans by comparing the states of the to and from arguments.\n          if (onBeforeNavigateArgs.toLocation.state === onBeforeNavigateArgs.fromLocation?.state) {\n            return;\n          }\n\n          const onResolvedMatchedRoutes = castRouterInstance.matchRoutes(\n            onBeforeNavigateArgs.toLocation.pathname,\n            onBeforeNavigateArgs.toLocation.search,\n            { preload: false, throwOnError: false },\n          );\n\n          const onBeforeNavigateLastMatch = onResolvedMatchedRoutes[onResolvedMatchedRoutes.length - 1];\n\n          const navigationLocation = WINDOW.location;\n          const navigationSpan = startBrowserTracingNavigationSpan(client, {\n            name: onBeforeNavigateLastMatch ? onBeforeNavigateLastMatch.routeId : navigationLocation.pathname,\n            attributes: {\n              [SEMANTIC_ATTRIBUTE_SENTRY_OP]: 'navigation',\n              [SEMANTIC_ATTRIBUTE_SENTRY_ORIGIN]: 'auto.navigation.react.tanstack_router',\n              [SEMANTIC_ATTRIBUTE_SENTRY_SOURCE]: onBeforeNavigateLastMatch ? 'route' : 'url',\n            },\n          });\n\n          // In case the user is redirected during navigation we want to update the span with the right value.\n          const unsubscribeOnResolved = castRouterInstance.subscribe('onResolved', onResolvedArgs => {\n            unsubscribeOnResolved();\n            if (navigationSpan) {\n              const onResolvedMatchedRoutes = castRouterInstance.matchRoutes(\n                onResolvedArgs.toLocation.pathname,\n                onResolvedArgs.toLocation.search,\n                { preload: false, throwOnError: false },\n              );\n\n              const onResolvedLastMatch = onResolvedMatchedRoutes[onResolvedMatchedRoutes.length - 1];\n\n              if (onResolvedLastMatch) {\n                navigationSpan.updateName(onResolvedLastMatch.routeId);\n                navigationSpan.setAttribute(SEMANTIC_ATTRIBUTE_SENTRY_SOURCE, 'route');\n                navigationSpan.setAttributes(routeMatchToParamSpanAttributes(onResolvedLastMatch));\n              }\n            }\n          });\n        });\n      }\n    },\n  };\n}\n\nfunction routeMatchToParamSpanAttributes(match: VendoredTanstackRouterRouteMatch | undefined): Record<string, string> {\n  if (!match) {\n    return {};\n  }\n\n  const paramAttributes: Record<string, string> = {};\n  Object.entries(match.params).forEach(([key, value]) => {\n    paramAttributes[`url.path.params.${key}`] = value; // todo(v10): remove attribute which does not adhere to Sentry's semantic convention\n    paramAttributes[`url.path.parameter.${key}`] = value;\n    paramAttributes[`params.${key}`] = value; // params.[key] is an alias\n  });\n\n  return paramAttributes;\n}\n"],"names":["originalBrowserTracingIntegration"],"mappings":"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"}},
    {"offset": {"line": 1662, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}