import {
  NetworkDevice,
  DeviceFolder,
  NetworkMetrics,
  BandwidthData,
  AlertMessage,
  SystemHealth,
  MonitoringConfig,
} from '@/types/schemas';

// Mock Folders
export const mockFolders: DeviceFolder[] = [
  {
    id: 'datacenter',
    name: 'Центр обработки данных',
    description: 'Серверы и сетевое оборудование ЦОД',
    parentId: 'root',
    color: '#3B82F6',
    icon: 'Building',
    expanded: true,
    children: [
      {
        id: 'servers',
        name: 'Серверы',
        description: 'Физические и виртуальные серверы',
        parentId: 'datacenter',
        color: '#10B981',
        icon: 'Server',
        expanded: false,
        children: [],
      },
      {
        id: 'storage',
        name: 'Системы хранения',
        description: 'NAS и SAN системы',
        parentId: 'datacenter',
        color: '#8B5CF6',
        icon: 'Database',
        expanded: false,
        children: [],
      },
    ],
  },
  {
    id: 'core',
    name: 'Ядро сети',
    description: 'Основное сетевое оборудование',
    parentId: 'root',
    color: '#EF4444',
    icon: 'Network',
    expanded: false,
    children: [],
  },
  {
    id: 'access',
    name: 'Уровень доступа',
    description: 'Коммутаторы доступа и точки WiFi',
    parentId: 'root',
    color: '#F59E0B',
    icon: 'Globe',
    expanded: false,
    children: [],
  },
  {
    id: 'security',
    name: 'Безопасность',
    description: 'Системы безопасности и мониторинга',
    parentId: 'root',
    color: '#DC2626',
    icon: 'Shield',
    expanded: false,
    children: [],
  },
];

// Mock Devices
export const mockDevices: NetworkDevice[] = [
  // Datacenter servers
  {
    id: 'server-web-1',
    name: 'Веб сервер 1',
    ip: '192.168.1.10',
    mac: '00:1B:44:11:3A:B7',
    type: 'server',
    status: 'online',
    lastSeen: new Date('2024-01-15T10:30:00Z'),
    responseTime: 8,
    uptime: 99.2,
    location: 'Стойка A-1',
    folderId: 'servers',
    vendor: 'Dell',
    model: 'PowerEdge R740',
    monitoring: {
      ping: true,
      snmp: true,
      http: true,
      ssh: true,
    },
    position: { x: 100, y: 200 },
  },
  {
    id: 'server-db-1',
    name: 'База данных',
    ip: '192.168.1.11',
    mac: '00:1B:44:11:3A:B8',
    type: 'server',
    status: 'online',
    lastSeen: new Date('2024-01-15T10:30:00Z'),
    responseTime: 5,
    uptime: 99.8,
    location: 'Стойка A-2',
    folderId: 'servers',
    vendor: 'HP',
    model: 'ProLiant DL380',
    monitoring: {
      ping: true,
      snmp: true,
      http: false,
      ssh: true,
    },
    position: { x: 150, y: 200 },
  },
  // Network core equipment
  {
    id: 'switch-core-1',
    name: 'Основной коммутатор',
    ip: '192.168.1.1',
    mac: '00:1B:44:11:01:01',
    type: 'switch',
    status: 'online',
    lastSeen: new Date('2024-01-15T10:30:00Z'),
    responseTime: 2,
    uptime: 99.9,
    location: 'Стойка Core-1',
    folderId: 'core',
    vendor: 'Cisco',
    model: 'Catalyst 9300',
    monitoring: {
      ping: true,
      snmp: true,
      http: true,
      ssh: true,
    },
    position: { x: 300, y: 150 },
  },
  {
    id: 'router-main',
    name: 'Основной маршрутизатор',
    ip: '192.168.1.254',
    mac: '00:1B:44:11:02:01',
    type: 'router',
    status: 'online',
    lastSeen: new Date('2024-01-15T10:30:00Z'),
    responseTime: 3,
    uptime: 99.7,
    location: 'Стойка Core-1',
    folderId: 'core',
    vendor: 'Cisco',
    model: 'ISR 4351',
    monitoring: {
      ping: true,
      snmp: true,
      http: true,
      ssh: true,
    },
    position: { x: 350, y: 100 },
  },
  // Access layer devices
  {
    id: 'switch-office-1',
    name: 'Офисный коммутатор 1',
    ip: '192.168.1.51',
    mac: '00:1B:44:11:05:01',
    type: 'switch',
    status: 'online',
    lastSeen: new Date('2024-01-15T10:30:00Z'),
    responseTime: 6,
    uptime: 98.5,
    location: '1 этаж офис',
    folderId: 'access',
    vendor: 'Cisco',
    model: 'Catalyst 2960X',
    monitoring: {
      ping: true,
      snmp: true,
      http: false,
      ssh: true,
    },
    position: { x: 200, y: 300 },
  },
  {
    id: 'switch-office-2',
    name: 'Офисный коммутатор 2',
    ip: '192.168.1.52',
    mac: '00:1B:44:11:05:02',
    type: 'switch',
    status: 'offline',
    lastSeen: new Date('2024-01-15T08:15:00Z'),
    responseTime: 0,
    uptime: 97.2,
    location: '2 этаж офис',
    folderId: 'access',
    vendor: 'Cisco',
    model: 'Catalyst 2960X',
    monitoring: {
      ping: true,
      snmp: true,
      http: false,
      ssh: true,
    },
    position: { x: 250, y: 400 },
  },
  // WiFi Access Points
  {
    id: 'ap-floor1-01',
    name: 'WiFi точка доступа 1 этаж восток',
    ip: '192.168.1.161',
    mac: '00:1B:44:16:01:01',
    type: 'access_point',
    status: 'online',
    lastSeen: new Date('2024-01-15T10:30:00Z'),
    responseTime: 5,
    uptime: 99.1,
    location: '1 этаж - Восточное крыло',
    folderId: 'access',
    vendor: 'Ubiquiti',
    model: 'UniFi AP AC Pro',
    monitoring: {
      ping: true,
      snmp: true,
      http: true,
      ssh: true,
    },
    position: { x: 400, y: 350 },
  },
  // Security devices
  {
    id: 'firewall-main',
    name: 'Межсетевой экран',
    ip: '192.168.1.2',
    mac: '00:1B:44:11:02:02',
    type: 'firewall',
    status: 'online',
    lastSeen: new Date('2024-01-15T10:30:00Z'),
    responseTime: 4,
    uptime: 99.6,
    location: 'Стойка Security-1',
    folderId: 'security',
    vendor: 'Fortinet',
    model: 'FortiGate 100F',
    monitoring: {
      ping: true,
      snmp: true,
      http: true,
      ssh: true,
    },
    position: { x: 500, y: 100 },
  },
  // Storage systems (using 'server' type as storage is not in enum)
  {
    id: 'nas-backup',
    name: 'Система резервного копирования',
    ip: '192.168.1.20',
    mac: '00:1B:44:11:20:01',
    type: 'server',
    status: 'warning',
    lastSeen: new Date('2024-01-15T10:30:00Z'),
    responseTime: 15,
    uptime: 96.8,
    location: 'Стойка Storage-1',
    folderId: 'storage',
    vendor: 'Synology',
    model: 'DS920+',
    monitoring: {
      ping: true,
      snmp: true,
      http: true,
      ssh: false,
    },
    position: { x: 550, y: 200 },
  },
];

// Mock Alerts
export const mockAlerts: AlertMessage[] = [
  {
    id: 'alert-1',
    type: 'warning',
    message: 'Высокая загрузка CPU на сервере web-1',
    timestamp: new Date(Date.now() - 300000),
    deviceId: 'server-web-1',
    resolved: false,
  },
  {
    id: 'alert-2',
    type: 'info',
    message: 'Обновление ПО завершено успешно',
    timestamp: new Date(Date.now() - 600000),
    resolved: true,
  },
  {
    id: 'alert-3',
    type: 'critical',
    message: 'Потеря связи с устройством switch-office-2',
    timestamp: new Date(Date.now() - 900000),
    resolved: false,
  },
];

// Initial Metrics
export const initialMetrics: NetworkMetrics = {
  totalDevices: 0,
  onlineDevices: 0,
  offlineDevices: 0,
  warningDevices: 0,
  averageResponseTime: 0,
  totalBandwidth: 0,
  usedBandwidth: 0,
  packetLoss: 0,
  networkUptime: 0,
  lastUpdate: new Date(),
};

// Initial System Health
export const initialSystemHealth: SystemHealth = {
  cpu: 65,
  memory: 78,
  disk: 45,
  network: 23,
  temperature: 42,
  processes: 156,
  uptime: 2847392,
  lastUpdate: new Date(),
};

// Initial Bandwidth History
export const initialBandwidthHistory: BandwidthData[] = Array.from(
  { length: 20 },
  (_, i) => ({
    timestamp: new Date(Date.now() - (19 - i) * 5 * 60 * 1000), // каждые 5 минут
    upload: Math.floor(Math.random() * 300) + 50,
    download: Math.floor(Math.random() * 800) + 100,
    total: 0,
  })
).map((data) => ({
  ...data,
  total: data.upload + data.download,
}));

// Initial Monitoring Config
export const initialConfig: MonitoringConfig = {
  pingInterval: 5000,
  snmpInterval: 30000,
  httpTimeout: 10000,
  retryAttempts: 3,
  alertThresholds: {
    responseTime: 100,
    packetLoss: 5,
    cpuUsage: 80,
    memoryUsage: 85,
    diskUsage: 90,
  },
};
