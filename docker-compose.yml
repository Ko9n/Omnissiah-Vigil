version: '3.8'

services:
  # PostgreSQL database service
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-monitoring_db}
      - POSTGRES_USER=${POSTGRES_USER:-monitoring_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-monitoring_password}
    ports:
      - "${POSTGRES_PORT:-5433}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./packages/backend/prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-monitoring_user} -d ${POSTGRES_DB:-monitoring_db}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - NEXT_PUBLIC_API_URL=http://backend:5000
      - NEXT_PUBLIC_WS_URL=ws://backend:5000
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT:-5000}:5000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-monitoring_user}:${POSTGRES_PASSWORD:-monitoring_password}@postgres:5432/${POSTGRES_DB:-monitoring_db}
      - POSTGRES_URL=postgresql://${POSTGRES_USER:-monitoring_user}:${POSTGRES_PASSWORD:-monitoring_password}@postgres:5432/${POSTGRES_DB:-monitoring_db}
      - FRONTEND_URL=${FRONTEND_URL:-http://frontend:3000}
      - WS_AUTH_TOKEN=${WS_AUTH_TOKEN:-dev-token-123}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - CACHE_TTL=${CACHE_TTL:-300000}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS:-100}
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS:-900000}
      - PING_HISTORY_RETENTION_DAYS=${PING_HISTORY_RETENTION_DAYS:-90}
      - SYSTEM_METRICS_RETENTION_DAYS=${SYSTEM_METRICS_RETENTION_DAYS:-30}
      - MONITORING_INTERVAL=${MONITORING_INTERVAL:-30000}
      - PING_TIMEOUT=${PING_TIMEOUT:-3000}
    volumes:
      - sqlite-data:/app/prisma/data
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  sqlite-data:
    driver: local
  postgres-data:
    driver: local

networks:
  app-network:
    driver: bridge 