{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/data/mock-data.ts"],"sourcesContent":["import {\r\n  NetworkDevice,\r\n  DeviceFolder,\r\n  NetworkMetrics,\r\n  BandwidthData,\r\n  AlertMessage,\r\n  SystemHealth,\r\n  MonitoringConfig,\r\n} from '@/types/schemas';\r\n\r\n// Mock Folders\r\nexport const mockFolders: DeviceFolder[] = [\r\n  {\r\n    id: 'datacenter',\r\n    name: 'Центр обработки данных',\r\n    description: 'Серверы и сетевое оборудование ЦОД',\r\n    parentId: 'root',\r\n    color: '#3B82F6',\r\n    icon: 'Building',\r\n    expanded: true,\r\n    children: [\r\n      {\r\n        id: 'servers',\r\n        name: 'Серверы',\r\n        description: 'Физические и виртуальные серверы',\r\n        parentId: 'datacenter',\r\n        color: '#10B981',\r\n        icon: 'Server',\r\n        expanded: false,\r\n        children: [],\r\n      },\r\n      {\r\n        id: 'storage',\r\n        name: 'Системы хранения',\r\n        description: 'NAS и SAN системы',\r\n        parentId: 'datacenter',\r\n        color: '#8B5CF6',\r\n        icon: 'Database',\r\n        expanded: false,\r\n        children: [],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 'core',\r\n    name: 'Ядро сети',\r\n    description: 'Основное сетевое оборудование',\r\n    parentId: 'root',\r\n    color: '#EF4444',\r\n    icon: 'Network',\r\n    expanded: false,\r\n    children: [],\r\n  },\r\n  {\r\n    id: 'access',\r\n    name: 'Уровень доступа',\r\n    description: 'Коммутаторы доступа и точки WiFi',\r\n    parentId: 'root',\r\n    color: '#F59E0B',\r\n    icon: 'Globe',\r\n    expanded: false,\r\n    children: [],\r\n  },\r\n  {\r\n    id: 'security',\r\n    name: 'Безопасность',\r\n    description: 'Системы безопасности и мониторинга',\r\n    parentId: 'root',\r\n    color: '#DC2626',\r\n    icon: 'Shield',\r\n    expanded: false,\r\n    children: [],\r\n  },\r\n];\r\n\r\n// Mock Devices\r\nexport const mockDevices: NetworkDevice[] = [\r\n  // Datacenter servers\r\n  {\r\n    id: 'server-web-1',\r\n    name: 'Веб сервер 1',\r\n    ip: '192.168.1.10',\r\n    mac: '00:1B:44:11:3A:B7',\r\n    type: 'server',\r\n    status: 'online',\r\n    lastSeen: new Date('2024-01-15T10:30:00Z'),\r\n    responseTime: 8,\r\n    uptime: 99.2,\r\n    location: 'Стойка A-1',\r\n    folderId: 'servers',\r\n    vendor: 'Dell',\r\n    model: 'PowerEdge R740',\r\n    monitoring: {\r\n      ping: true,\r\n      snmp: true,\r\n      http: true,\r\n      ssh: true,\r\n    },\r\n    position: { x: 100, y: 200 },\r\n  },\r\n  {\r\n    id: 'server-db-1',\r\n    name: 'База данных',\r\n    ip: '192.168.1.11',\r\n    mac: '00:1B:44:11:3A:B8',\r\n    type: 'server',\r\n    status: 'online',\r\n    lastSeen: new Date('2024-01-15T10:30:00Z'),\r\n    responseTime: 5,\r\n    uptime: 99.8,\r\n    location: 'Стойка A-2',\r\n    folderId: 'servers',\r\n    vendor: 'HP',\r\n    model: 'ProLiant DL380',\r\n    monitoring: {\r\n      ping: true,\r\n      snmp: true,\r\n      http: false,\r\n      ssh: true,\r\n    },\r\n    position: { x: 150, y: 200 },\r\n  },\r\n  // Network core equipment\r\n  {\r\n    id: 'switch-core-1',\r\n    name: 'Основной коммутатор',\r\n    ip: '192.168.1.1',\r\n    mac: '00:1B:44:11:01:01',\r\n    type: 'switch',\r\n    status: 'online',\r\n    lastSeen: new Date('2024-01-15T10:30:00Z'),\r\n    responseTime: 2,\r\n    uptime: 99.9,\r\n    location: 'Стойка Core-1',\r\n    folderId: 'core',\r\n    vendor: 'Cisco',\r\n    model: 'Catalyst 9300',\r\n    monitoring: {\r\n      ping: true,\r\n      snmp: true,\r\n      http: true,\r\n      ssh: true,\r\n    },\r\n    position: { x: 300, y: 150 },\r\n  },\r\n  {\r\n    id: 'router-main',\r\n    name: 'Основной маршрутизатор',\r\n    ip: '192.168.1.254',\r\n    mac: '00:1B:44:11:02:01',\r\n    type: 'router',\r\n    status: 'online',\r\n    lastSeen: new Date('2024-01-15T10:30:00Z'),\r\n    responseTime: 3,\r\n    uptime: 99.7,\r\n    location: 'Стойка Core-1',\r\n    folderId: 'core',\r\n    vendor: 'Cisco',\r\n    model: 'ISR 4351',\r\n    monitoring: {\r\n      ping: true,\r\n      snmp: true,\r\n      http: true,\r\n      ssh: true,\r\n    },\r\n    position: { x: 350, y: 100 },\r\n  },\r\n  // Access layer devices\r\n  {\r\n    id: 'switch-office-1',\r\n    name: 'Офисный коммутатор 1',\r\n    ip: '192.168.1.51',\r\n    mac: '00:1B:44:11:05:01',\r\n    type: 'switch',\r\n    status: 'online',\r\n    lastSeen: new Date('2024-01-15T10:30:00Z'),\r\n    responseTime: 6,\r\n    uptime: 98.5,\r\n    location: '1 этаж офис',\r\n    folderId: 'access',\r\n    vendor: 'Cisco',\r\n    model: 'Catalyst 2960X',\r\n    monitoring: {\r\n      ping: true,\r\n      snmp: true,\r\n      http: false,\r\n      ssh: true,\r\n    },\r\n    position: { x: 200, y: 300 },\r\n  },\r\n  {\r\n    id: 'switch-office-2',\r\n    name: 'Офисный коммутатор 2',\r\n    ip: '192.168.1.52',\r\n    mac: '00:1B:44:11:05:02',\r\n    type: 'switch',\r\n    status: 'offline',\r\n    lastSeen: new Date('2024-01-15T08:15:00Z'),\r\n    responseTime: 0,\r\n    uptime: 97.2,\r\n    location: '2 этаж офис',\r\n    folderId: 'access',\r\n    vendor: 'Cisco',\r\n    model: 'Catalyst 2960X',\r\n    monitoring: {\r\n      ping: true,\r\n      snmp: true,\r\n      http: false,\r\n      ssh: true,\r\n    },\r\n    position: { x: 250, y: 400 },\r\n  },\r\n  // WiFi Access Points\r\n  {\r\n    id: 'ap-floor1-01',\r\n    name: 'WiFi точка доступа 1 этаж восток',\r\n    ip: '192.168.1.161',\r\n    mac: '00:1B:44:16:01:01',\r\n    type: 'access_point',\r\n    status: 'online',\r\n    lastSeen: new Date('2024-01-15T10:30:00Z'),\r\n    responseTime: 5,\r\n    uptime: 99.1,\r\n    location: '1 этаж - Восточное крыло',\r\n    folderId: 'access',\r\n    vendor: 'Ubiquiti',\r\n    model: 'UniFi AP AC Pro',\r\n    monitoring: {\r\n      ping: true,\r\n      snmp: true,\r\n      http: true,\r\n      ssh: true,\r\n    },\r\n    position: { x: 400, y: 350 },\r\n  },\r\n  // Security devices\r\n  {\r\n    id: 'firewall-main',\r\n    name: 'Межсетевой экран',\r\n    ip: '192.168.1.2',\r\n    mac: '00:1B:44:11:02:02',\r\n    type: 'firewall',\r\n    status: 'online',\r\n    lastSeen: new Date('2024-01-15T10:30:00Z'),\r\n    responseTime: 4,\r\n    uptime: 99.6,\r\n    location: 'Стойка Security-1',\r\n    folderId: 'security',\r\n    vendor: 'Fortinet',\r\n    model: 'FortiGate 100F',\r\n    monitoring: {\r\n      ping: true,\r\n      snmp: true,\r\n      http: true,\r\n      ssh: true,\r\n    },\r\n    position: { x: 500, y: 100 },\r\n  },\r\n  // Storage systems (using 'server' type as storage is not in enum)\r\n  {\r\n    id: 'nas-backup',\r\n    name: 'Система резервного копирования',\r\n    ip: '192.168.1.20',\r\n    mac: '00:1B:44:11:20:01',\r\n    type: 'server',\r\n    status: 'warning',\r\n    lastSeen: new Date('2024-01-15T10:30:00Z'),\r\n    responseTime: 15,\r\n    uptime: 96.8,\r\n    location: 'Стойка Storage-1',\r\n    folderId: 'storage',\r\n    vendor: 'Synology',\r\n    model: 'DS920+',\r\n    monitoring: {\r\n      ping: true,\r\n      snmp: true,\r\n      http: true,\r\n      ssh: false,\r\n    },\r\n    position: { x: 550, y: 200 },\r\n  },\r\n];\r\n\r\n// Mock Alerts\r\nexport const mockAlerts: AlertMessage[] = [\r\n  {\r\n    id: 'alert-1',\r\n    type: 'warning',\r\n    message: 'Высокая загрузка CPU на сервере web-1',\r\n    timestamp: new Date(Date.now() - 300000),\r\n    deviceId: 'server-web-1',\r\n    resolved: false,\r\n  },\r\n  {\r\n    id: 'alert-2',\r\n    type: 'info',\r\n    message: 'Обновление ПО завершено успешно',\r\n    timestamp: new Date(Date.now() - 600000),\r\n    resolved: true,\r\n  },\r\n  {\r\n    id: 'alert-3',\r\n    type: 'critical',\r\n    message: 'Потеря связи с устройством switch-office-2',\r\n    timestamp: new Date(Date.now() - 900000),\r\n    resolved: false,\r\n  },\r\n];\r\n\r\n// Initial Metrics\r\nexport const initialMetrics: NetworkMetrics = {\r\n  totalDevices: 10,\r\n  onlineDevices: 8,\r\n  offlineDevices: 1,\r\n  warningDevices: 1,\r\n  averageResponseTime: 6,\r\n  totalBandwidth: 1000,\r\n  usedBandwidth: 720,\r\n  packetLoss: 0.2,\r\n  networkUptime: 98.7,\r\n  lastUpdate: new Date(),\r\n};\r\n\r\n// Initial System Health\r\nexport const initialSystemHealth: SystemHealth = {\r\n  cpu: 65,\r\n  memory: 78,\r\n  disk: 45,\r\n  network: 23,\r\n  temperature: 42,\r\n  processes: 156,\r\n  uptime: 2847392,\r\n  lastUpdate: new Date(),\r\n};\r\n\r\n// Initial Bandwidth History\r\nexport const initialBandwidthHistory: BandwidthData[] = Array.from(\r\n  { length: 20 },\r\n  (_, i) => ({\r\n    timestamp: new Date(Date.now() - (19 - i) * 5 * 60 * 1000), // каждые 5 минут\r\n    upload: Math.floor(Math.random() * 300) + 50,\r\n    download: Math.floor(Math.random() * 800) + 100,\r\n    total: 0,\r\n  })\r\n).map((data) => ({\r\n  ...data,\r\n  total: data.upload + data.download,\r\n}));\r\n\r\n// Initial Monitoring Config\r\nexport const initialConfig: MonitoringConfig = {\r\n  pingInterval: 5000,\r\n  snmpInterval: 30000,\r\n  httpTimeout: 10000,\r\n  retryAttempts: 3,\r\n  alertThresholds: {\r\n    responseTime: 100,\r\n    packetLoss: 5,\r\n    cpuUsage: 80,\r\n    memoryUsage: 85,\r\n    diskUsage: 90,\r\n  },\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 385, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/store/network-store.ts"],"sourcesContent":["import { create } from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\nimport { persist } from 'zustand/middleware';\nimport {\n  NetworkDevice,\n  DeviceFolder,\n  NetworkMetrics,\n  BandwidthData,\n  AlertMessage,\n  SystemHealth,\n  NetworkConnection,\n  MonitoringConfig,\n} from '../types/schemas';\nimport {\n  mockDevices,\n  mockFolders,\n  mockAlerts,\n  initialMetrics,\n  initialSystemHealth,\n  initialBandwidthHistory,\n  initialConfig,\n} from '../data/mock-data';\n\ninterface NetworkStore {\n  // State\n  devices: NetworkDevice[];\n  folders: DeviceFolder[];\n  metrics: NetworkMetrics;\n  bandwidthHistory: BandwidthData[];\n  alerts: AlertMessage[];\n  systemHealth: SystemHealth;\n  connections: NetworkConnection[];\n  config: MonitoringConfig;\n\n  // UI State\n  selectedFolderId: string;\n  sidebarCollapsed: boolean;\n  loading: boolean;\n  error: string | null;\n  rootFolderExpanded: boolean;\n  othersExpanded: boolean;\n\n  // Device actions\n  addDevice: (\n    device: Omit<NetworkDevice, 'id' | 'lastSeen' | 'status'>\n  ) => void;\n  updateDevice: (deviceId: string, updates: Partial<NetworkDevice>) => void;\n  deleteDevice: (deviceId: string) => void;\n\n  // Folder actions\n  addFolder: (folder: Omit<DeviceFolder, 'id' | 'children'>) => void;\n  updateFolder: (folderId: string, updates: Partial<DeviceFolder>) => void;\n  deleteFolder: (folderId: string) => void;\n\n  // Alert actions\n  addAlert: (alert: Omit<AlertMessage, 'id' | 'timestamp'>) => void;\n  markAlertResolved: (alertId: string) => void;\n  acknowledgeAlert: (alertId: string, userId: string) => void;\n  clearAlerts: () => void;\n\n  // Data actions\n  setBandwidthData: (data: BandwidthData[]) => void;\n  addBandwidthData: (data: BandwidthData) => void;\n  updateSystemHealth: (health: SystemHealth) => void;\n  updateMetrics: (metrics: Partial<NetworkMetrics>) => void;\n\n  // UI actions\n  setSelectedFolder: (folderId: string) => void;\n  setSidebarCollapsed: (collapsed: boolean) => void;\n  setLoading: (loading: boolean) => void;\n  setError: (error: string | null) => void;\n\n  // Data management\n  refreshData: () => Promise<void>;\n  exportData: () => string;\n  importData: (jsonData: string) => boolean;\n  resetData: () => void;\n  resetToMockData: () => void;\n}\n\nexport const useNetworkStore = create<NetworkStore>()(\n  subscribeWithSelector(\n    persist(\n      (set, get) => ({\n        // Initial state with mock data\n        devices: mockDevices,\n        folders: mockFolders,\n        metrics: initialMetrics,\n        bandwidthHistory: initialBandwidthHistory,\n        alerts: mockAlerts,\n        systemHealth: initialSystemHealth,\n        connections: [],\n        config: initialConfig,\n\n        // UI state\n        selectedFolderId: 'root',\n        sidebarCollapsed: false,\n        loading: false,\n        error: null,\n        rootFolderExpanded: true,\n        othersExpanded: false,\n\n        // Device actions\n        addDevice: (deviceData) => {\n          const device: NetworkDevice = {\n            ...deviceData,\n            id: Math.random().toString(36).substr(2, 9),\n            lastSeen: new Date(),\n            status: 'online',\n          };\n\n          set((state) => ({\n            devices: [...state.devices, device],\n          }));\n\n          // Update metrics\n          get().updateMetrics({});\n        },\n\n        updateDevice: (deviceId, updates) => {\n          set((state) => ({\n            devices: state.devices.map((device) =>\n              device.id === deviceId\n                ? { ...device, ...updates, lastSeen: new Date() }\n                : device\n            ),\n          }));\n\n          // Update metrics\n          get().updateMetrics({});\n        },\n\n        deleteDevice: (deviceId) => {\n          set((state) => ({\n            devices: state.devices.filter((device) => device.id !== deviceId),\n          }));\n\n          // Update metrics\n          get().updateMetrics({});\n        },\n\n        // Folder actions\n        addFolder: (folderData) => {\n          const folder: DeviceFolder = {\n            ...folderData,\n            id: Math.random().toString(36).substr(2, 9),\n            children: [],\n          };\n\n          const addFolderRecursive = (\n            folders: DeviceFolder[]\n          ): DeviceFolder[] => {\n            return folders.map((f) =>\n              f.id === (folder.parentId || 'root')\n                ? { ...f, children: [...f.children, folder] }\n                : { ...f, children: addFolderRecursive(f.children) }\n            );\n          };\n\n          if (!folder.parentId || folder.parentId === 'root') {\n            set((state) => ({\n              folders: [...state.folders, folder],\n            }));\n          } else {\n            set((state) => ({\n              folders: addFolderRecursive(state.folders),\n            }));\n          }\n        },\n\n        updateFolder: (folderId, updates) => {\n          // Специальная обработка для корневой папки\n          if (folderId === 'root') {\n            set((state) => ({\n              rootFolderExpanded:\n                updates.expanded !== undefined\n                  ? updates.expanded\n                  : state.rootFolderExpanded,\n            }));\n            return;\n          }\n\n          // Специальная обработка для папки \"Иные\"\n          if (folderId === 'others') {\n            set((state) => ({\n              othersExpanded:\n                updates.expanded !== undefined\n                  ? updates.expanded\n                  : state.othersExpanded,\n            }));\n            return;\n          }\n\n          const updateFolderRecursive = (\n            folders: DeviceFolder[]\n          ): DeviceFolder[] => {\n            return folders.map((folder) =>\n              folder.id === folderId\n                ? { ...folder, ...updates }\n                : {\n                    ...folder,\n                    children: updateFolderRecursive(folder.children),\n                  }\n            );\n          };\n\n          set((state) => ({\n            folders: updateFolderRecursive(state.folders),\n          }));\n        },\n\n        deleteFolder: (folderId) => {\n          const removeFolderRecursive = (\n            folders: DeviceFolder[]\n          ): DeviceFolder[] => {\n            return folders\n              .filter((folder) => folder.id !== folderId)\n              .map((folder) => ({\n                ...folder,\n                children: removeFolderRecursive(folder.children),\n              }));\n          };\n\n          set((state) => ({\n            folders: removeFolderRecursive(state.folders),\n            devices: state.devices.map((device) =>\n              device.folderId === folderId\n                ? { ...device, folderId: 'root' }\n                : device\n            ),\n          }));\n        },\n\n        // Alert actions\n        addAlert: (alertData) => {\n          const alert: AlertMessage = {\n            ...alertData,\n            id: Math.random().toString(36).substr(2, 9),\n            timestamp: new Date(),\n          };\n\n          set((state) => ({\n            alerts: [alert, ...state.alerts].slice(0, 50), // Keep only last 50 alerts\n          }));\n        },\n\n        markAlertResolved: (alertId) => {\n          set((state) => ({\n            alerts: state.alerts.map((alert) =>\n              alert.id === alertId ? { ...alert, resolved: true } : alert\n            ),\n          }));\n        },\n\n        acknowledgeAlert: (alertId, userId) => {\n          set((state) => ({\n            alerts: state.alerts.map((alert) =>\n              alert.id === alertId\n                ? {\n                    ...alert,\n                    acknowledgedBy: userId,\n                    acknowledgedAt: new Date(),\n                  }\n                : alert\n            ),\n          }));\n        },\n\n        clearAlerts: () => {\n          set({ alerts: [] });\n        },\n\n        // Data actions\n        setBandwidthData: (data) => {\n          set({ bandwidthHistory: data });\n        },\n\n        addBandwidthData: (data) => {\n          set((state) => ({\n            bandwidthHistory: [...state.bandwidthHistory.slice(-19), data],\n          }));\n        },\n\n        updateSystemHealth: (health) => {\n          set({ systemHealth: health });\n        },\n\n        updateMetrics: (metricsUpdate) => {\n          const state = get();\n          const devices = state.devices;\n\n          const totalDevices = devices.length;\n          const onlineDevices = devices.filter(\n            (d) => d.status === 'online'\n          ).length;\n          const offlineDevices = devices.filter(\n            (d) => d.status === 'offline'\n          ).length;\n          const warningDevices = devices.filter(\n            (d) => d.status === 'warning'\n          ).length;\n          const averageResponseTime =\n            totalDevices > 0\n              ? Math.round(\n                  devices.reduce((sum, d) => sum + d.responseTime, 0) /\n                    totalDevices\n                )\n              : 0;\n\n          set({\n            metrics: {\n              ...state.metrics,\n              totalDevices,\n              onlineDevices,\n              offlineDevices,\n              warningDevices,\n              averageResponseTime,\n              lastUpdate: new Date(),\n              ...metricsUpdate,\n            },\n          });\n        },\n\n        // UI actions\n        setSelectedFolder: (folderId) => {\n          set({ selectedFolderId: folderId });\n        },\n\n        setSidebarCollapsed: (collapsed) => {\n          set({ sidebarCollapsed: collapsed });\n        },\n\n        setLoading: (loading) => {\n          set({ loading });\n        },\n\n        setError: (error) => {\n          set({ error });\n        },\n\n        // Data management\n        refreshData: async () => {\n          set({ loading: true, error: null });\n          try {\n            // Simulate API call\n            await new Promise((resolve) => setTimeout(resolve, 1000));\n            get().updateMetrics({});\n            set({ loading: false });\n          } catch (error) {\n            set({\n              loading: false,\n              error:\n                error instanceof Error\n                  ? error.message\n                  : 'Ошибка загрузки данных',\n            });\n          }\n        },\n\n        exportData: () => {\n          const state = get();\n          const exportData = {\n            devices: state.devices,\n            folders: state.folders,\n            connections: state.connections,\n            config: state.config,\n            exportTimestamp: new Date().toISOString(),\n          };\n          return JSON.stringify(exportData, null, 2);\n        },\n\n        importData: (jsonData) => {\n          try {\n            const data = JSON.parse(jsonData);\n            set({\n              devices: data.devices || [],\n              folders: data.folders || [],\n              connections: data.connections || [],\n              config: data.config || initialConfig,\n            });\n            get().updateMetrics({});\n            return true;\n          } catch {\n            return false;\n          }\n        },\n\n        resetData: () => {\n          set({\n            devices: [],\n            folders: [],\n            metrics: initialMetrics,\n            bandwidthHistory: [],\n            alerts: [],\n            systemHealth: initialSystemHealth,\n            connections: [],\n            selectedFolderId: 'root',\n            loading: false,\n            error: null,\n          });\n        },\n\n        resetToMockData: () => {\n          set({\n            devices: mockDevices,\n            folders: mockFolders,\n            metrics: initialMetrics,\n            bandwidthHistory: initialBandwidthHistory,\n            alerts: mockAlerts,\n            systemHealth: initialSystemHealth,\n            connections: [],\n            selectedFolderId: 'root',\n            loading: false,\n            error: null,\n            rootFolderExpanded: true,\n            othersExpanded: false,\n          });\n          get().updateMetrics({});\n        },\n      }),\n      {\n        name: 'network-monitor-storage',\n        partialize: (state) => ({\n          devices: state.devices,\n          folders: state.folders,\n          config: state.config,\n          selectedFolderId: state.selectedFolderId,\n          sidebarCollapsed: state.sidebarCollapsed,\n        }),\n      }\n    )\n  )\n);\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 707, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 712, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/ui/context-menu.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Zap,\r\n  Settings,\r\n  Terminal,\r\n  Wifi,\r\n  AlertCircle,\r\n  Trash2,\r\n  Edit3,\r\n  Activity,\r\n  Globe,\r\n  Shield,\r\n  MoreHorizontal,\r\n} from 'lucide-react';\r\nimport { NetworkDevice } from '@/types/network';\r\n\r\ninterface ContextMenuProps {\r\n  device: NetworkDevice;\r\n  position: { x: number; y: number };\r\n  isVisible: boolean;\r\n  onClose: () => void;\r\n  onAction: (action: string, device: NetworkDevice) => void;\r\n}\r\n\r\nexport const DeviceContextMenu: React.FC<ContextMenuProps> = ({\r\n  device,\r\n  position,\r\n  isVisible,\r\n  onClose,\r\n  onAction,\r\n}) => {\r\n  const menuRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    const handleEscape = (event: KeyboardEvent) => {\r\n      if (event.key === 'Escape') {\r\n        onClose();\r\n      }\r\n    };\r\n\r\n    if (isVisible) {\r\n      document.addEventListener('mousedown', handleClickOutside);\r\n      document.addEventListener('keydown', handleEscape);\r\n    }\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', handleClickOutside);\r\n      document.removeEventListener('keydown', handleEscape);\r\n    };\r\n  }, [isVisible, onClose]);\r\n\r\n  if (!isVisible) return null;\r\n\r\n  const menuItems = [\r\n    {\r\n      icon: Activity,\r\n      label: 'Пинг устройства',\r\n      action: 'ping',\r\n      color: 'text-green-400 hover:text-green-300',\r\n      disabled: device.status === 'offline',\r\n    },\r\n    {\r\n      icon: Terminal,\r\n      label: 'SSH подключение',\r\n      action: 'ssh',\r\n      color: 'text-blue-400 hover:text-blue-300',\r\n      disabled: device.status === 'offline',\r\n    },\r\n    {\r\n      icon: Globe,\r\n      label: 'Веб-интерфейс',\r\n      action: 'web',\r\n      color: 'text-purple-400 hover:text-purple-300',\r\n      disabled: device.status === 'offline',\r\n    },\r\n    { divider: true },\r\n    {\r\n      icon: Settings,\r\n      label: 'Настройки',\r\n      action: 'settings',\r\n      color: 'text-slate-400 hover:text-white',\r\n    },\r\n    {\r\n      icon: Edit3,\r\n      label: 'Редактировать',\r\n      action: 'edit',\r\n      color: 'text-slate-400 hover:text-white',\r\n    },\r\n    {\r\n      icon: Wifi,\r\n      label: 'Сканировать порты',\r\n      action: 'scan',\r\n      color: 'text-cyan-400 hover:text-cyan-300',\r\n    },\r\n    { divider: true },\r\n    {\r\n      icon: AlertCircle,\r\n      label: 'Просмотр логов',\r\n      action: 'logs',\r\n      color: 'text-yellow-400 hover:text-yellow-300',\r\n    },\r\n    {\r\n      icon: Shield,\r\n      label: 'Безопасность',\r\n      action: 'security',\r\n      color: 'text-orange-400 hover:text-orange-300',\r\n    },\r\n    { divider: true },\r\n    {\r\n      icon: Trash2,\r\n      label: 'Удалить устройство',\r\n      action: 'delete',\r\n      color: 'text-red-400 hover:text-red-300',\r\n      dangerous: true,\r\n    },\r\n  ];\r\n\r\n  // Проверяем, чтобы меню не выходило за границы экрана\r\n  const adjustedPosition = {\r\n    x: Math.min(\r\n      position.x,\r\n      (typeof window !== 'undefined' ? window.innerWidth : 1920) - 250\r\n    ),\r\n    y: Math.min(\r\n      position.y,\r\n      (typeof window !== 'undefined' ? window.innerHeight : 1080) -\r\n        menuItems.length * 40\r\n    ),\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={menuRef}\r\n      className=\"fixed z-50 min-w-[240px] rounded-lg border border-slate-600/50 bg-slate-800/95 py-2 shadow-xl backdrop-blur-sm\"\r\n      style={{\r\n        left: adjustedPosition.x,\r\n        top: adjustedPosition.y,\r\n      }}\r\n    >\r\n      {/* Заголовок меню */}\r\n      <div className=\"border-b border-slate-600/50 px-4 py-2\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div\r\n            className={`h-3 w-3 rounded-full ${\r\n              device.status === 'online'\r\n                ? 'bg-green-500'\r\n                : device.status === 'warning'\r\n                  ? 'bg-yellow-500'\r\n                  : 'bg-red-500'\r\n            }`}\r\n          />\r\n          <div>\r\n            <div className=\"text-sm font-medium text-white\">{device.name}</div>\r\n            <div className=\"text-xs text-slate-400\">{device.ip}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Элементы меню */}\r\n      <div className=\"py-1\">\r\n        {menuItems.map((item, index) => {\r\n          if ('divider' in item) {\r\n            return (\r\n              <div key={index} className=\"mx-2 my-1 h-px bg-slate-600/30\" />\r\n            );\r\n          }\r\n\r\n          const Icon = item.icon;\r\n          return (\r\n            <button\r\n              key={index}\r\n              onClick={() => {\r\n                onAction(item.action, device);\r\n                onClose();\r\n              }}\r\n              disabled={item.disabled}\r\n              className={`flex w-full items-center space-x-3 px-4 py-2 text-sm transition-colors ${\r\n                item.disabled\r\n                  ? 'cursor-not-allowed text-slate-500'\r\n                  : `${item.color} cursor-pointer hover:bg-slate-700/50`\r\n              } ${item.dangerous ? 'hover:bg-red-500/10' : ''}`}\r\n            >\r\n              <Icon className=\"h-4 w-4\" />\r\n              <span>{item.label}</span>\r\n              {item.disabled && (\r\n                <span className=\"ml-auto text-xs text-slate-500\">(офлайн)</span>\r\n              )}\r\n            </button>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* Информация об устройстве */}\r\n      <div className=\"border-t border-slate-600/50 px-4 py-2 text-xs text-slate-400\">\r\n        <div className=\"flex justify-between\">\r\n          <span>Тип: {device.type}</span>\r\n          <span>Время отклика: {device.responseTime}ms</span>\r\n        </div>\r\n        <div className=\"mt-1 flex justify-between\">\r\n          <span>Uptime: {device.uptime.toFixed(1)}%</span>\r\n          <span>\r\n            Последний: {new Date(device.lastSeen).toLocaleTimeString()}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1023, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1028, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/ui/toast.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { X, CheckCircle, AlertCircle, Info, AlertTriangle } from 'lucide-react';\r\n\r\nexport interface Toast {\r\n  id: string;\r\n  type: 'success' | 'error' | 'warning' | 'info';\r\n  title: string;\r\n  message?: string;\r\n  duration?: number;\r\n}\r\n\r\ninterface ToastProps {\r\n  toast: Toast;\r\n  onClose: (id: string) => void;\r\n}\r\n\r\ninterface ToastContainerProps {\r\n  toasts: Toast[];\r\n  onClose: (id: string) => void;\r\n}\r\n\r\nconst ToastItem: React.FC<ToastProps> = ({ toast, onClose }) => {\r\n  useEffect(() => {\r\n    const duration = toast.duration || 5000;\r\n    const timer = setTimeout(() => {\r\n      onClose(toast.id);\r\n    }, duration);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [toast.id, toast.duration, onClose]);\r\n\r\n  const getIcon = () => {\r\n    switch (toast.type) {\r\n      case 'success':\r\n        return <CheckCircle className=\"h-5 w-5 text-green-400\" />;\r\n      case 'error':\r\n        return <AlertCircle className=\"h-5 w-5 text-red-400\" />;\r\n      case 'warning':\r\n        return <AlertTriangle className=\"h-5 w-5 text-yellow-400\" />;\r\n      default:\r\n        return <Info className=\"h-5 w-5 text-blue-400\" />;\r\n    }\r\n  };\r\n\r\n  const getBorderColor = () => {\r\n    switch (toast.type) {\r\n      case 'success':\r\n        return 'border-l-green-500';\r\n      case 'error':\r\n        return 'border-l-red-500';\r\n      case 'warning':\r\n        return 'border-l-yellow-500';\r\n      default:\r\n        return 'border-l-blue-500';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 50, scale: 0.95 }}\r\n      animate={{ opacity: 1, y: 0, scale: 1 }}\r\n      exit={{ opacity: 0, y: -50, scale: 0.95 }}\r\n      transition={{ duration: 0.2 }}\r\n      className={`border border-slate-600/50 bg-slate-800/95 backdrop-blur-sm ${getBorderColor()} w-full max-w-sm rounded-lg border-l-4 p-4 shadow-xl`}\r\n    >\r\n      <div className=\"flex items-start space-x-3\">\r\n        <div className=\"flex-shrink-0\">{getIcon()}</div>\r\n\r\n        <div className=\"min-w-0 flex-1\">\r\n          <h4 className=\"text-sm font-medium text-white\">{toast.title}</h4>\r\n          {toast.message && (\r\n            <p className=\"mt-1 text-sm text-slate-300\">{toast.message}</p>\r\n          )}\r\n        </div>\r\n\r\n        <button\r\n          onClick={() => onClose(toast.id)}\r\n          className=\"flex-shrink-0 text-slate-400 transition-colors hover:text-white\"\r\n        >\r\n          <X className=\"h-4 w-4\" />\r\n        </button>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport const ToastContainer: React.FC<ToastContainerProps> = ({\r\n  toasts,\r\n  onClose,\r\n}) => {\r\n  return (\r\n    <div className=\"fixed right-4 top-4 z-[100] space-y-2\">\r\n      <AnimatePresence>\r\n        {toasts.map((toast) => (\r\n          <ToastItem key={toast.id} toast={toast} onClose={onClose} />\r\n        ))}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Hook для управления toast'ами\r\nexport const useToast = () => {\r\n  const [toasts, setToasts] = useState<Toast[]>([]);\r\n\r\n  const addToast = (toast: Omit<Toast, 'id'>) => {\r\n    const id = Date.now().toString();\r\n    setToasts((prev) => [...prev, { ...toast, id }]);\r\n  };\r\n\r\n  const removeToast = (id: string) => {\r\n    setToasts((prev) => prev.filter((toast) => toast.id !== id));\r\n  };\r\n\r\n  const success = (title: string, message?: string, duration?: number) => {\r\n    addToast({ type: 'success', title, message, duration });\r\n  };\r\n\r\n  const error = (title: string, message?: string, duration?: number) => {\r\n    addToast({ type: 'error', title, message, duration });\r\n  };\r\n\r\n  const warning = (title: string, message?: string, duration?: number) => {\r\n    addToast({ type: 'warning', title, message, duration });\r\n  };\r\n\r\n  const info = (title: string, message?: string, duration?: number) => {\r\n    addToast({ type: 'info', title, message, duration });\r\n  };\r\n\r\n  return {\r\n    toasts,\r\n    addToast,\r\n    removeToast,\r\n    success,\r\n    error,\r\n    warning,\r\n    info,\r\n  };\r\n};\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1280, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1285, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/components/ui/network-topology.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useRef, useEffect, useCallback } from 'react';\nimport { motion } from 'framer-motion';\nimport { useRouter } from 'next/navigation';\nimport {\n  Network,\n  Settings,\n  Maximize2,\n  RotateCcw,\n  Router,\n  Wifi,\n  Monitor,\n  Server,\n  Smartphone,\n  Printer,\n  Shield,\n} from 'lucide-react';\nimport { useNetworkStore } from '@/store/network-store';\nimport { NetworkDevice } from '@/types/network';\nimport { DeviceContextMenu } from './context-menu';\nimport { ToastContainer, useToast } from './toast';\n\n// Device type configuration\nconst deviceIcons = {\n  router: Router,\n  switch: Network,\n  computer: Monitor,\n  server: Server,\n  mobile: Smartphone,\n  wifi: Wifi,\n  workstation: Monitor,\n  printer: Printer,\n  firewall: Shield,\n  access_point: Wifi,\n};\n\nconst deviceColors = {\n  router: '#3B82F6',\n  switch: '#10B981',\n  computer: '#8B5CF6',\n  server: '#F59E0B',\n  mobile: '#EF4444',\n  wifi: '#06B6D4',\n  workstation: '#6B7280',\n  printer: '#F97316',\n  firewall: '#DC2626',\n  access_point: '#10B981',\n};\n\ninterface Connection {\n  id: string;\n  sourceId: string;\n  targetId: string;\n}\n\ninterface DragState {\n  isDragging: boolean;\n  deviceId: string | null;\n  offset: { x: number; y: number };\n}\n\ninterface ConnectionState {\n  isConnecting: boolean;\n  sourceId: string | null;\n  tempLine: { x1: number; y1: number; x2: number; y2: number } | null;\n}\n\ninterface ContextMenuState {\n  isVisible: boolean;\n  device: any | null;\n  position: { x: number; y: number };\n}\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\ninterface DeviceWithPosition extends NetworkDevice {\n  position?: Position;\n}\n\ninterface NetworkTopologyProps {\n  isFullscreen?: boolean;\n}\n\nexport function NetworkTopology({\n  isFullscreen = false,\n}: NetworkTopologyProps) {\n  const { devices, updateDevice, selectedFolderId } = useNetworkStore();\n  const { toasts, removeToast, success, error, warning, info } = useToast();\n  const router = useRouter();\n\n  const [isEditMode, setIsEditMode] = useState(false);\n\n  // Инициализируем соединения из localStorage сразу\n  const [connections, setConnections] = useState<Connection[]>(() => {\n    if (typeof window !== 'undefined') {\n      const savedConnections = localStorage.getItem('topology-connections');\n      if (savedConnections) {\n        try {\n          return JSON.parse(savedConnections);\n        } catch (e) {\n          console.error('Failed to load connections:', e);\n        }\n      }\n    }\n    return [];\n  });\n\n  const [dragState, setDragState] = useState<DragState>({\n    isDragging: false,\n    deviceId: null,\n    offset: { x: 0, y: 0 },\n  });\n  const [connectionState, setConnectionState] = useState<ConnectionState>({\n    isConnecting: false,\n    sourceId: null,\n    tempLine: null,\n  });\n  const [contextMenu, setContextMenu] = useState<ContextMenuState>({\n    isVisible: false,\n    device: null,\n    position: { x: 0, y: 0 },\n  });\n\n  // Инициализируем позиции устройств из localStorage сразу\n  const [devicePositions, setDevicePositions] = useState<\n    Record<string, Position>\n  >(() => {\n    if (typeof window !== 'undefined') {\n      const savedPositions = localStorage.getItem('topology-positions');\n      if (savedPositions) {\n        try {\n          return JSON.parse(savedPositions);\n        } catch (e) {\n          console.error('Failed to load positions:', e);\n        }\n      }\n    }\n    return {};\n  });\n\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  // Generate default positions for devices\n  const generateDefaultPositions = useCallback(\n    (devices: NetworkDevice[]): Record<string, Position> => {\n      const positions: Record<string, Position> = {};\n      const gridCols = 4;\n      const spacing = { x: 200, y: 150 };\n      const offset = { x: 100, y: 80 };\n\n      devices.forEach((device, index) => {\n        const col = index % gridCols;\n        const row = Math.floor(index / gridCols);\n        positions[device.id] = {\n          x: offset.x + col * spacing.x,\n          y: offset.y + row * spacing.y,\n        };\n      });\n\n      return positions;\n    },\n    []\n  );\n\n  // Генерируем позиции по умолчанию для новых устройств\n  useEffect(() => {\n    setDevicePositions((prev) => {\n      // Если позиции уже есть для всех устройств, не изменяем\n      const hasAllPositions = devices.every((device) => prev[device.id]);\n      if (hasAllPositions && Object.keys(prev).length > 0) {\n        return prev;\n      }\n\n      // Генерируем позиции только для новых устройств\n      const newPositions = { ...prev };\n      const defaultPositions = generateDefaultPositions(devices);\n\n      devices.forEach((device) => {\n        if (!newPositions[device.id]) {\n          newPositions[device.id] = defaultPositions[device.id];\n        }\n      });\n\n      return newPositions;\n    });\n  }, [devices, generateDefaultPositions]);\n\n  // Save positions when they change\n  useEffect(() => {\n    if (Object.keys(devicePositions).length > 0) {\n      localStorage.setItem(\n        'topology-positions',\n        JSON.stringify(devicePositions)\n      );\n    }\n  }, [devicePositions]);\n\n  // Save connections when they change\n  useEffect(() => {\n    localStorage.setItem('topology-connections', JSON.stringify(connections));\n  }, [connections]);\n\n  // Combine devices with positions\n  const devicesWithPositions: DeviceWithPosition[] = devices.map((device) => ({\n    ...device,\n    position: devicePositions[device.id] || { x: 100, y: 100 },\n  }));\n\n  // Reset layout function\n  const resetLayout = () => {\n    const defaultPositions = generateDefaultPositions(devices);\n    setDevicePositions(defaultPositions);\n    setConnections([]);\n    localStorage.removeItem('topology-positions');\n    localStorage.removeItem('topology-connections');\n    success(\n      'Макет сброшен',\n      'Расположение устройств и соединения сброшены к настройкам по умолчанию'\n    );\n  };\n\n  // Mouse handlers for dragging\n  const handleMouseDown = (e: React.MouseEvent, deviceId: string) => {\n    if (!isEditMode) return;\n\n    e.preventDefault();\n    const rect = svgRef.current?.getBoundingClientRect();\n    if (!rect) return;\n\n    const device = devicesWithPositions.find((d) => d.id === deviceId);\n    if (!device?.position) return;\n\n    setDragState({\n      isDragging: true,\n      deviceId,\n      offset: {\n        x: e.clientX - rect.left - device.position.x,\n        y: e.clientY - rect.top - device.position.y,\n      },\n    });\n  };\n\n  const handleMouseMove = (e: React.MouseEvent) => {\n    if (!isEditMode) return;\n\n    const rect = svgRef.current?.getBoundingClientRect();\n    if (!rect) return;\n\n    if (dragState.isDragging && dragState.deviceId) {\n      const newX = e.clientX - rect.left - dragState.offset.x;\n      const newY = e.clientY - rect.top - dragState.offset.y;\n\n      setDevicePositions((prev) => ({\n        ...prev,\n        [dragState.deviceId!]: { x: newX, y: newY },\n      }));\n    }\n\n    if (connectionState.isConnecting && connectionState.sourceId) {\n      setConnectionState((prev) => ({\n        ...prev,\n        tempLine: {\n          ...prev.tempLine!,\n          x2: e.clientX - rect.left,\n          y2: e.clientY - rect.top,\n        },\n      }));\n    }\n  };\n\n  const handleMouseUp = () => {\n    setDragState({\n      isDragging: false,\n      deviceId: null,\n      offset: { x: 0, y: 0 },\n    });\n  };\n\n  // Device click handler\n  const handleDeviceClick = (deviceId: string) => {\n    if (!isEditMode) return;\n\n    if (connectionState.isConnecting) {\n      if (connectionState.sourceId === deviceId) {\n        // Cancel connection\n        setConnectionState({\n          isConnecting: false,\n          sourceId: null,\n          tempLine: null,\n        });\n        info('Отменено', 'Создание соединения отменено');\n      } else {\n        // Create connection\n        const newConnection: Connection = {\n          id: `${connectionState.sourceId}-${deviceId}`,\n          sourceId: connectionState.sourceId!,\n          targetId: deviceId,\n        };\n\n        setConnections((prev) => [...prev, newConnection]);\n        setConnectionState({\n          isConnecting: false,\n          sourceId: null,\n          tempLine: null,\n        });\n        success('Соединение создано', 'Новое соединение успешно добавлено');\n      }\n    } else {\n      // Start connection\n      const device = devicesWithPositions.find((d) => d.id === deviceId);\n      if (device?.position) {\n        setConnectionState({\n          isConnecting: true,\n          sourceId: deviceId,\n          tempLine: {\n            x1: device.position.x,\n            y1: device.position.y,\n            x2: device.position.x,\n            y2: device.position.y,\n          },\n        });\n        info(\n          'Режим соединения',\n          'Кликните на другое устройство для создания соединения'\n        );\n      }\n    }\n  };\n\n  // Connection deletion\n  const handleDeleteConnection = (connectionId: string) => {\n    setConnections((prev) => prev.filter((c) => c.id !== connectionId));\n    warning('Соединение удалено', 'Соединение между устройствами удалено');\n  };\n\n  // Context menu handlers\n  const handleContextMenu = (e: React.MouseEvent, device: NetworkDevice) => {\n    e.preventDefault();\n    setContextMenu({\n      isVisible: true,\n      device,\n      position: { x: e.clientX, y: e.clientY },\n    });\n  };\n\n  const handleCloseContextMenu = () => {\n    setContextMenu({\n      isVisible: false,\n      device: null,\n      position: { x: 0, y: 0 },\n    });\n  };\n\n  const handleContextAction = (action: string, device: NetworkDevice) => {\n    handleCloseContextMenu();\n\n    switch (action) {\n      case 'ping':\n        if (device.status === 'online') {\n          success('Ping успешен', `Устройство ${device.name} отвечает`);\n        } else {\n          error('Ping неудачен', `Устройство ${device.name} не отвечает`);\n        }\n        break;\n      case 'ssh':\n        if (device.status === 'online') {\n          info('SSH соединение', `Подключение к ${device.name} через SSH...`);\n        } else {\n          error('SSH недоступен', `Устройство ${device.name} офлайн`);\n        }\n        break;\n      case 'web':\n        if (device.status === 'online') {\n          info('Веб-интерфейс', `Открытие веб-интерфейса ${device.name}...`);\n        } else {\n          error('Веб-интерфейс недоступен', `Устройство ${device.name} офлайн`);\n        }\n        break;\n      case 'edit':\n        info('Редактирование', `Редактирование настроек ${device.name}...`);\n        break;\n      case 'delete':\n        warning(\n          'Удаление устройства',\n          `Устройство ${device.name} помечено для удаления`\n        );\n        break;\n      default:\n        info(action, `Действие \"${action}\" для устройства ${device.name}`);\n    }\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, y: 20 }}\n      animate={{ opacity: 1, y: 0 }}\n      transition={{ duration: 0.5 }}\n      className=\"rounded-xl border border-slate-700/50 bg-slate-800/50 p-6 backdrop-blur-sm\"\n    >\n      {/* Header */}\n      {!isFullscreen && (\n        <div className=\"mb-6 flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"rounded-lg bg-slate-700/50 p-2\">\n              <Network className=\"h-5 w-5 text-blue-400\" />\n            </div>\n            <div>\n              <h3 className=\"text-lg font-semibold text-white\">\n                Сетевая топология\n              </h3>\n              <p className=\"text-sm text-slate-400\">Интерактивная карта сети</p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={() => setIsEditMode(!isEditMode)}\n              className={`rounded-lg px-4 py-2 transition-colors ${\n                isEditMode\n                  ? 'border border-green-500/30 bg-green-500/20 text-green-400'\n                  : 'bg-slate-700/50 text-slate-400 hover:bg-slate-700 hover:text-white'\n              }`}\n            >\n              {isEditMode ? 'Выйти из редактора' : 'Режим редактирования'}\n            </button>\n            {isEditMode && (\n              <>\n                <button\n                  onClick={resetLayout}\n                  className=\"rounded-lg p-2 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-white\"\n                  title=\"Сбросить расположение\"\n                >\n                  <RotateCcw className=\"h-4 w-4\" />\n                </button>\n                <button\n                  onClick={() => {\n                    const positions =\n                      localStorage.getItem('topology-positions');\n                    const savedConnections = localStorage.getItem(\n                      'topology-connections'\n                    );\n                    // Debug info только для разработки\n                    if (process.env.NODE_ENV === 'development') {\n                      console.log('=== DEBUG localStorage ===');\n                      console.log(\n                        'Positions:',\n                        positions ? JSON.parse(positions) : 'Not found'\n                      );\n                      console.log(\n                        'Saved Connections:',\n                        savedConnections\n                          ? JSON.parse(savedConnections)\n                          : 'Not found'\n                      );\n                      console.log('Current devices:', devices.length);\n                      console.log(\n                        'Current connections count:',\n                        connections.length\n                      );\n                      info('Debug info', 'Проверьте консоль браузера (F12)');\n                    }\n                  }}\n                  className=\"rounded-lg p-2 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-white\"\n                  title=\"Отладка localStorage\"\n                >\n                  🐛\n                </button>\n              </>\n            )}\n            <button className=\"rounded-lg p-2 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-white\">\n              <Settings className=\"h-4 w-4\" />\n            </button>\n            <button\n              onClick={() => router.push('/topology-fullscreen')}\n              className=\"flex items-center space-x-2 rounded-lg border border-blue-500/30 bg-blue-500/20 px-4 py-2 text-blue-400 transition-colors hover:bg-blue-500/30\"\n              title=\"Открыть в полноэкранном режиме\"\n            >\n              <Maximize2 className=\"h-4 w-4\" />\n              <span>Полный экран</span>\n            </button>\n          </div>\n        </div>\n      )}\n\n      {isEditMode && (\n        <div className=\"mb-4 rounded-lg border border-blue-500/20 bg-blue-500/10 p-3\">\n          <p className=\"text-sm text-blue-400\">\n            <strong>Режим редактирования:</strong> Перетаскивайте устройства для\n            их перемещения. Кликайте по устройствам для создания соединений.\n            {connectionState.isConnecting && (\n              <span className=\"ml-2 text-yellow-400\">\n                Кликните на другое устройство для подключения, или на то же для\n                отмены.\n              </span>\n            )}\n          </p>\n        </div>\n      )}\n\n      {/* Topology Area */}\n      <div\n        className=\"relative w-full rounded-lg border border-slate-700/30 bg-slate-900/50\"\n        style={{ height: isFullscreen ? 'calc(100vh - 120px)' : '700px' }}\n      >\n        <svg\n          ref={svgRef}\n          width=\"100%\"\n          height=\"100%\"\n          className=\"overflow-visible\"\n          onMouseMove={handleMouseMove}\n          onMouseUp={handleMouseUp}\n          onMouseLeave={handleMouseUp}\n        >\n          {/* Background grid */}\n          <defs>\n            <pattern\n              id=\"topology-grid\"\n              width=\"20\"\n              height=\"20\"\n              patternUnits=\"userSpaceOnUse\"\n            >\n              <path\n                d=\"M 20 0 L 0 0 0 20\"\n                fill=\"none\"\n                stroke=\"#475569\"\n                strokeWidth=\"0.5\"\n                opacity=\"0.3\"\n              />\n            </pattern>\n          </defs>\n          <rect width=\"100%\" height=\"100%\" fill=\"url(#topology-grid)\" />\n\n          {/* Connections */}\n          {connections.map((connection) => {\n            const sourceDevice = devicesWithPositions.find(\n              (d) => d.id === connection.sourceId\n            );\n            const targetDevice = devicesWithPositions.find(\n              (d) => d.id === connection.targetId\n            );\n\n            if (!sourceDevice || !targetDevice) return null;\n\n            return (\n              <g key={connection.id}>\n                <line\n                  x1={sourceDevice.position!.x}\n                  y1={sourceDevice.position!.y}\n                  x2={targetDevice.position!.x}\n                  y2={targetDevice.position!.y}\n                  stroke=\"#6B7280\"\n                  strokeWidth=\"2\"\n                  strokeDasharray=\"5,5\"\n                />\n                {isEditMode && (\n                  <circle\n                    cx={\n                      (sourceDevice.position!.x + targetDevice.position!.x) / 2\n                    }\n                    cy={\n                      (sourceDevice.position!.y + targetDevice.position!.y) / 2\n                    }\n                    r=\"8\"\n                    fill=\"#EF4444\"\n                    className=\"cursor-pointer hover:fill-red-600\"\n                    onClick={() => handleDeleteConnection(connection.id)}\n                  >\n                    <title>Кликните для удаления соединения</title>\n                  </circle>\n                )}\n              </g>\n            );\n          })}\n\n          {/* Temporary connection line */}\n          {connectionState.tempLine && (\n            <line\n              x1={connectionState.tempLine.x1}\n              y1={connectionState.tempLine.y1}\n              x2={connectionState.tempLine.x2}\n              y2={connectionState.tempLine.y2}\n              stroke=\"#3B82F6\"\n              strokeWidth=\"2\"\n              strokeDasharray=\"3,3\"\n              opacity=\"0.7\"\n            />\n          )}\n\n          {/* Devices */}\n          {devicesWithPositions.map((device) => {\n            const Icon =\n              deviceIcons[device.type as keyof typeof deviceIcons] || Monitor; // Fallback to Monitor icon\n            const color =\n              deviceColors[device.type as keyof typeof deviceColors] ||\n              '#6B7280'; // Fallback to gray\n            const isConnecting = connectionState.sourceId === device.id;\n\n            // Определяем, выделено ли устройство (принадлежит выбранной папке)\n            const isHighlighted =\n              !selectedFolderId ||\n              selectedFolderId === 'root' ||\n              device.folderId === selectedFolderId;\n            const opacity = isHighlighted ? 1 : 0.3;\n\n            return (\n              <g\n                key={device.id}\n                transform={`translate(${device.position!.x}, ${device.position!.y})`}\n                className=\"cursor-pointer\"\n                style={{ opacity }}\n                onMouseDown={(e) => handleMouseDown(e, device.id)}\n                onClick={() => handleDeviceClick(device.id)}\n                onContextMenu={(e) => handleContextMenu(e, device)}\n              >\n                {/* Device background */}\n                <circle\n                  r={isConnecting ? '28' : '25'}\n                  fill={device.status === 'online' ? color : '#6B7280'}\n                  opacity=\"0.2\"\n                  stroke={isConnecting ? '#3B82F6' : 'transparent'}\n                  strokeWidth=\"2\"\n                />\n                <circle\n                  r=\"20\"\n                  fill={device.status === 'online' ? color : '#6B7280'}\n                  opacity=\"0.3\"\n                />\n\n                {/* Device icon */}\n                <foreignObject x=\"-12\" y=\"-12\" width=\"24\" height=\"24\">\n                  <Icon className=\"h-6 w-6 text-white\" />\n                </foreignObject>\n\n                {/* Device name */}\n                <text\n                  x=\"0\"\n                  y=\"40\"\n                  textAnchor=\"middle\"\n                  className=\"fill-white text-xs font-medium\"\n                >\n                  {device.name}\n                </text>\n\n                {/* Status indicator */}\n                <circle\n                  cx=\"15\"\n                  cy=\"-15\"\n                  r=\"4\"\n                  fill={\n                    device.status === 'online'\n                      ? '#10B981'\n                      : device.status === 'warning'\n                        ? '#F59E0B'\n                        : '#EF4444'\n                  }\n                />\n\n                {/* Edit mode overlay */}\n                {isEditMode && (\n                  <circle\n                    r=\"25\"\n                    fill=\"transparent\"\n                    stroke=\"#3B82F6\"\n                    strokeWidth=\"1\"\n                    strokeDasharray=\"2,2\"\n                    opacity=\"0.5\"\n                  />\n                )}\n              </g>\n            );\n          })}\n        </svg>\n      </div>\n\n      {/* Controls */}\n      <div className=\"mt-4 flex items-center justify-between\">\n        <div className=\"flex items-center space-x-6\">\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"h-3 w-3 rounded-full bg-green-500 opacity-60\"></div>\n            <span className=\"text-slate-400\">Онлайн</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"h-3 w-3 rounded-full bg-yellow-500 opacity-60\"></div>\n            <span className=\"text-slate-400\">Предупреждение</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"h-3 w-3 rounded-full bg-red-500 opacity-60\"></div>\n            <span className=\"text-slate-400\">Офлайн</span>\n          </div>\n        </div>\n\n        <div className=\"text-sm text-slate-500\">\n          {devicesWithPositions.length} устройств • {connections.length}{' '}\n          соединений\n        </div>\n      </div>\n\n      {/* Context Menu */}\n      <DeviceContextMenu\n        device={contextMenu.device}\n        position={contextMenu.position}\n        isVisible={contextMenu.isVisible}\n        onClose={handleCloseContextMenu}\n        onAction={handleContextAction}\n      />\n\n      {/* Toast Notifications */}\n      <ToastContainer toasts={toasts} onClose={removeToast} />\n    </motion.div>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2198, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/topology-fullscreen/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport { NetworkTopology } from '@/components/ui/network-topology';\r\nimport { ArrowLeft, X } from 'lucide-react';\r\nimport { useRouter } from 'next/navigation';\r\n\r\nexport default function TopologyFullscreenPage() {\r\n  const router = useRouter();\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-900 via-slate-800 to-slate-900\">\r\n      {/* Header */}\r\n      <div className=\"fixed left-0 right-0 top-0 z-50 border-b border-slate-700/50 bg-slate-800/90 px-6 py-4 backdrop-blur-sm\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <button\r\n              onClick={() => router.back()}\r\n              className=\"rounded-lg p-2 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-white\"\r\n            >\r\n              <ArrowLeft className=\"h-5 w-5\" />\r\n            </button>\r\n            <h1 className=\"text-xl font-semibold text-white\">\r\n              Сетевая топология - Полный экран\r\n            </h1>\r\n          </div>\r\n\r\n          <button\r\n            onClick={() => window.close()}\r\n            className=\"rounded-lg p-2 text-slate-400 transition-colors hover:bg-slate-700/50 hover:text-white\"\r\n          >\r\n            <X className=\"h-5 w-5\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Fullscreen Topology */}\r\n      <div className=\"h-screen p-4 pt-20\">\r\n        <div className=\"h-full\">\r\n          <NetworkTopology isFullscreen={true} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;;;;AAMe,SAAS;;IACtB,MAAM,SAAS,CAAA,GAAA,oPAAA,CAAA,YAAS,AAAD;IAEvB,qBACE,4SAAC;QAAI,WAAU;;0BAEb,4SAAC;gBAAI,WAAU;0BACb,cAAA,4SAAC;oBAAI,WAAU;;sCACb,4SAAC;4BAAI,WAAU;;8CACb,4SAAC;oCACC,SAAS,IAAM,OAAO,IAAI;oCAC1B,WAAU;8CAEV,cAAA,4SAAC,uSAAA,CAAA,YAAS;wCAAC,WAAU;;;;;;;;;;;8CAEvB,4SAAC;oCAAG,WAAU;8CAAmC;;;;;;;;;;;;sCAKnD,4SAAC;4BACC,SAAS,IAAM,OAAO,KAAK;4BAC3B,WAAU;sCAEV,cAAA,4SAAC,mRAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;0BAMnB,4SAAC;gBAAI,WAAU;0BACb,cAAA,4SAAC;oBAAI,WAAU;8BACb,cAAA,4SAAC,kJAAA,CAAA,kBAAe;wBAAC,cAAc;;;;;;;;;;;;;;;;;;;;;;AAKzC;GArCwB;;QACP,oPAAA,CAAA,YAAS;;;KADF"}},
    {"offset": {"line": 2318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}