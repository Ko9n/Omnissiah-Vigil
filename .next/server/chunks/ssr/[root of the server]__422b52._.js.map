{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[next]/internal/font/google/inter_59dee874.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"className\": \"inter_59dee874-module__9CtR0q__className\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA"}},
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 12, "column": 0}, "map": {"version":3,"sources":["/turbopack/[next]/internal/font/google/inter_59dee874.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Inter%22,%22arguments%22:[{%22subsets%22:[%22latin%22]}],%22variableName%22:%22inter%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'__Inter_59dee8', '__Inter_Fallback_59dee8'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;;;AACA,MAAM,WAAW;IACb,WAAW,qJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,qJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,qJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/providers.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const Providers = registerClientReference(\n    function() { throw new Error(\"Attempted to call Providers() from the server but Providers is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/providers.tsx\",\n    \"Providers\",\n);\n"],"names":[],"mappings":";;;;;;AACO,MAAM,YAAY,CAAA,GAAA,8WAAA,CAAA,0BAAuB,AAAD,EAC3C;IAAa,MAAM,IAAI,MAAM;AAAkO,GAC/P,+BACA"}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/layout.tsx"],"sourcesContent":["import './globals.css';\nimport type { Metadata, Viewport } from 'next';\nimport { Inter } from 'next/font/google';\nimport { Providers } from './providers';\n\nconst inter = Inter({ subsets: ['latin'] });\n\nexport const metadata: Metadata = {\n  title: 'Network Monitor Pro - Система мониторинга сети',\n  description:\n    'Современная система мониторинга сетевой инфраструктуры в реальном времени',\n  keywords:\n    'мониторинг сети, сетевые устройства, топология сети, real-time monitoring',\n  authors: [{ name: 'Network Monitor Pro Team' }],\n  manifest: '/manifest.json',\n  icons: {\n    icon: '/favicon.ico',\n    apple: '/apple-touch-icon.png',\n  },\n};\n\nexport const viewport: Viewport = {\n  width: 'device-width',\n  initialScale: 1,\n  themeColor: '#1e293b',\n};\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"ru\" suppressHydrationWarning>\n      <body className={inter.className}>\n        <Providers>{children}</Providers>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAOO,MAAM,WAAqB;IAChC,OAAO;IACP,aACE;IACF,UACE;IACF,SAAS;QAAC;YAAE,MAAM;QAA2B;KAAE;IAC/C,UAAU;IACV,OAAO;QACL,MAAM;QACN,OAAO;IACT;AACF;AAEO,MAAM,WAAqB;IAChC,OAAO;IACP,cAAc;IACd,YAAY;AACd;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGT;IACC,qBACE,uWAAC;QAAK,MAAK;QAAK,wBAAwB;kBACtC,cAAA,uWAAC;YAAK,WAAW,yIAAA,CAAA,UAAK,CAAC,SAAS;sBAC9B,cAAA,uWAAC,iHAAA,CAAA,YAAS;0BAAE;;;;;;;;;;;;;;;;AAIpB"}},
    {"offset": {"line": 115, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/topology-fullscreen/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/topology-fullscreen/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/topology-fullscreen/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;;;;uCACe,CAAA,GAAA,8WAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgR,GAC7S,8CACA"}},
    {"offset": {"line": 136, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 157, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/.next-internal/server/app/topology-fullscreen/page/actions.js"],"sourcesContent":["__turbopack_export_value__({\n});"],"names":[],"mappings":"AAAA,2BAA2B,CAC3B"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}